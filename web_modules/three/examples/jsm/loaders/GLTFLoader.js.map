{"version":3,"file":"GLTFLoader.js","sources":["../../../../../node_modules/three/examples/jsm/loaders/GLTFLoader.js"],"sourcesContent":["/**\n * @author Rich Tibbett / https://github.com/richtr\n * @author mrdoob / http://mrdoob.com/\n * @author Tony Parisi / http://www.tonyparisi.com/\n * @author Takahiro / https://github.com/takahirox\n * @author Don McCurdy / https://www.donmccurdy.com\n */\n\nimport {\n\tAnimationClip,\n\tBone,\n\tBox3,\n\tBufferAttribute,\n\tBufferGeometry,\n\tClampToEdgeWrapping,\n\tColor,\n\tDirectionalLight,\n\tDoubleSide,\n\tFileLoader,\n\tFrontSide,\n\tGroup,\n\tInterleavedBuffer,\n\tInterleavedBufferAttribute,\n\tInterpolant,\n\tInterpolateDiscrete,\n\tInterpolateLinear,\n\tLine,\n\tLineBasicMaterial,\n\tLineLoop,\n\tLineSegments,\n\tLinearFilter,\n\tLinearMipmapLinearFilter,\n\tLinearMipmapNearestFilter,\n\tLoader,\n\tLoaderUtils,\n\tMaterial,\n\tMath as _Math,\n\tMatrix4,\n\tMesh,\n\tMeshBasicMaterial,\n\tMeshStandardMaterial,\n\tMirroredRepeatWrapping,\n\tNearestFilter,\n\tNearestMipmapLinearFilter,\n\tNearestMipmapNearestFilter,\n\tNumberKeyframeTrack,\n\tObject3D,\n\tOrthographicCamera,\n\tPerspectiveCamera,\n\tPointLight,\n\tPoints,\n\tPointsMaterial,\n\tPropertyBinding,\n\tQuaternionKeyframeTrack,\n\tRGBAFormat,\n\tRGBFormat,\n\tRepeatWrapping,\n\tScene,\n\tShaderLib,\n\tShaderMaterial,\n\tSkeleton,\n\tSkinnedMesh,\n\tSphere,\n\tSpotLight,\n\tTextureLoader,\n\tTriangleFanDrawMode,\n\tTriangleStripDrawMode,\n\tUniformsUtils,\n\tVector2,\n\tVector3,\n\tVectorKeyframeTrack,\n\tVertexColors,\n\tsRGBEncoding\n} from \"../../../build/three.module.js\";\n\nvar GLTFLoader = ( function () {\n\n\tfunction GLTFLoader( manager ) {\n\n\t\tLoader.call( this, manager );\n\n\t\tthis.dracoLoader = null;\n\t\tthis.ddsLoader = null;\n\n\t}\n\n\tGLTFLoader.prototype = Object.assign( Object.create( Loader.prototype ), {\n\n\t\tconstructor: GLTFLoader,\n\n\t\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\t\tvar scope = this;\n\n\t\t\tvar resourcePath;\n\n\t\t\tif ( this.resourcePath !== '' ) {\n\n\t\t\t\tresourcePath = this.resourcePath;\n\n\t\t\t} else if ( this.path !== '' ) {\n\n\t\t\t\tresourcePath = this.path;\n\n\t\t\t} else {\n\n\t\t\t\tresourcePath = LoaderUtils.extractUrlBase( url );\n\n\t\t\t}\n\n\t\t\t// Tells the LoadingManager to track an extra item, which resolves after\n\t\t\t// the model is fully loaded. This means the count of items loaded will\n\t\t\t// be incorrect, but ensures manager.onLoad() does not fire early.\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\tvar _onError = function ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t};\n\n\t\t\tvar loader = new FileLoader( scope.manager );\n\n\t\t\tloader.setPath( this.path );\n\t\t\tloader.setResponseType( 'arraybuffer' );\n\n\t\t\tif ( scope.crossOrigin === 'use-credentials' ) {\n\n\t\t\t\tloader.setWithCredentials( true );\n\n\t\t\t}\n\n\t\t\tloader.load( url, function ( data ) {\n\n\t\t\t\ttry {\n\n\t\t\t\t\tscope.parse( data, resourcePath, function ( gltf ) {\n\n\t\t\t\t\t\tonLoad( gltf );\n\n\t\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t\t}, _onError );\n\n\t\t\t\t} catch ( e ) {\n\n\t\t\t\t\t_onError( e );\n\n\t\t\t\t}\n\n\t\t\t}, onProgress, _onError );\n\n\t\t},\n\n\t\tsetDRACOLoader: function ( dracoLoader ) {\n\n\t\t\tthis.dracoLoader = dracoLoader;\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetDDSLoader: function ( ddsLoader ) {\n\n\t\t\tthis.ddsLoader = ddsLoader;\n\t\t\treturn this;\n\n\t\t},\n\n\t\tparse: function ( data, path, onLoad, onError ) {\n\n\t\t\tvar content;\n\t\t\tvar extensions = {};\n\n\t\t\tif ( typeof data === 'string' ) {\n\n\t\t\t\tcontent = data;\n\n\t\t\t} else {\n\n\t\t\t\tvar magic = LoaderUtils.decodeText( new Uint8Array( data, 0, 4 ) );\n\n\t\t\t\tif ( magic === BINARY_EXTENSION_HEADER_MAGIC ) {\n\n\t\t\t\t\ttry {\n\n\t\t\t\t\t\textensions[ EXTENSIONS.KHR_BINARY_GLTF ] = new GLTFBinaryExtension( data );\n\n\t\t\t\t\t} catch ( error ) {\n\n\t\t\t\t\t\tif ( onError ) onError( error );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcontent = extensions[ EXTENSIONS.KHR_BINARY_GLTF ].content;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tcontent = LoaderUtils.decodeText( new Uint8Array( data ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar json = JSON.parse( content );\n\n\t\t\tif ( json.asset === undefined || json.asset.version[ 0 ] < 2 ) {\n\n\t\t\t\tif ( onError ) onError( new Error( 'THREE.GLTFLoader: Unsupported asset. glTF versions >=2.0 are supported.' ) );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tif ( json.extensionsUsed ) {\n\n\t\t\t\tfor ( var i = 0; i < json.extensionsUsed.length; ++ i ) {\n\n\t\t\t\t\tvar extensionName = json.extensionsUsed[ i ];\n\t\t\t\t\tvar extensionsRequired = json.extensionsRequired || [];\n\n\t\t\t\t\tswitch ( extensionName ) {\n\n\t\t\t\t\t\tcase EXTENSIONS.KHR_LIGHTS_PUNCTUAL:\n\t\t\t\t\t\t\textensions[ extensionName ] = new GLTFLightsExtension( json );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase EXTENSIONS.KHR_MATERIALS_UNLIT:\n\t\t\t\t\t\t\textensions[ extensionName ] = new GLTFMaterialsUnlitExtension();\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS:\n\t\t\t\t\t\t\textensions[ extensionName ] = new GLTFMaterialsPbrSpecularGlossinessExtension();\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase EXTENSIONS.KHR_DRACO_MESH_COMPRESSION:\n\t\t\t\t\t\t\textensions[ extensionName ] = new GLTFDracoMeshCompressionExtension( json, this.dracoLoader );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase EXTENSIONS.MSFT_TEXTURE_DDS:\n\t\t\t\t\t\t\textensions[ extensionName ] = new GLTFTextureDDSExtension( this.ddsLoader );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase EXTENSIONS.KHR_TEXTURE_TRANSFORM:\n\t\t\t\t\t\t\textensions[ extensionName ] = new GLTFTextureTransformExtension();\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase EXTENSIONS.KHR_MESH_QUANTIZATION:\n\t\t\t\t\t\t\textensions[ extensionName ] = new GLTFMeshQuantizationExtension();\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t\tif ( extensionsRequired.indexOf( extensionName ) >= 0 ) {\n\n\t\t\t\t\t\t\t\tconsole.warn( 'THREE.GLTFLoader: Unknown extension \"' + extensionName + '\".' );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar parser = new GLTFParser( json, extensions, {\n\n\t\t\t\tpath: path || this.resourcePath || '',\n\t\t\t\tcrossOrigin: this.crossOrigin,\n\t\t\t\tmanager: this.manager\n\n\t\t\t} );\n\n\t\t\tparser.parse( onLoad, onError );\n\n\t\t}\n\n\t} );\n\n\t/* GLTFREGISTRY */\n\n\tfunction GLTFRegistry() {\n\n\t\tvar objects = {};\n\n\t\treturn\t{\n\n\t\t\tget: function ( key ) {\n\n\t\t\t\treturn objects[ key ];\n\n\t\t\t},\n\n\t\t\tadd: function ( key, object ) {\n\n\t\t\t\tobjects[ key ] = object;\n\n\t\t\t},\n\n\t\t\tremove: function ( key ) {\n\n\t\t\t\tdelete objects[ key ];\n\n\t\t\t},\n\n\t\t\tremoveAll: function () {\n\n\t\t\t\tobjects = {};\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\t/*********************************/\n\t/********** EXTENSIONS ***********/\n\t/*********************************/\n\n\tvar EXTENSIONS = {\n\t\tKHR_BINARY_GLTF: 'KHR_binary_glTF',\n\t\tKHR_DRACO_MESH_COMPRESSION: 'KHR_draco_mesh_compression',\n\t\tKHR_LIGHTS_PUNCTUAL: 'KHR_lights_punctual',\n\t\tKHR_MATERIALS_PBR_SPECULAR_GLOSSINESS: 'KHR_materials_pbrSpecularGlossiness',\n\t\tKHR_MATERIALS_UNLIT: 'KHR_materials_unlit',\n\t\tKHR_TEXTURE_TRANSFORM: 'KHR_texture_transform',\n\t\tKHR_MESH_QUANTIZATION: 'KHR_mesh_quantization',\n\t\tMSFT_TEXTURE_DDS: 'MSFT_texture_dds'\n\t};\n\n\t/**\n\t * DDS Texture Extension\n\t *\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Vendor/MSFT_texture_dds\n\t *\n\t */\n\tfunction GLTFTextureDDSExtension( ddsLoader ) {\n\n\t\tif ( ! ddsLoader ) {\n\n\t\t\tthrow new Error( 'THREE.GLTFLoader: Attempting to load .dds texture without importing DDSLoader' );\n\n\t\t}\n\n\t\tthis.name = EXTENSIONS.MSFT_TEXTURE_DDS;\n\t\tthis.ddsLoader = ddsLoader;\n\n\t}\n\n\t/**\n\t * Punctual Lights Extension\n\t *\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_lights_punctual\n\t */\n\tfunction GLTFLightsExtension( json ) {\n\n\t\tthis.name = EXTENSIONS.KHR_LIGHTS_PUNCTUAL;\n\n\t\tvar extension = ( json.extensions && json.extensions[ EXTENSIONS.KHR_LIGHTS_PUNCTUAL ] ) || {};\n\t\tthis.lightDefs = extension.lights || [];\n\n\t}\n\n\tGLTFLightsExtension.prototype.loadLight = function ( lightIndex ) {\n\n\t\tvar lightDef = this.lightDefs[ lightIndex ];\n\t\tvar lightNode;\n\n\t\tvar color = new Color( 0xffffff );\n\t\tif ( lightDef.color !== undefined ) color.fromArray( lightDef.color );\n\n\t\tvar range = lightDef.range !== undefined ? lightDef.range : 0;\n\n\t\tswitch ( lightDef.type ) {\n\n\t\t\tcase 'directional':\n\t\t\t\tlightNode = new DirectionalLight( color );\n\t\t\t\tlightNode.target.position.set( 0, 0, - 1 );\n\t\t\t\tlightNode.add( lightNode.target );\n\t\t\t\tbreak;\n\n\t\t\tcase 'point':\n\t\t\t\tlightNode = new PointLight( color );\n\t\t\t\tlightNode.distance = range;\n\t\t\t\tbreak;\n\n\t\t\tcase 'spot':\n\t\t\t\tlightNode = new SpotLight( color );\n\t\t\t\tlightNode.distance = range;\n\t\t\t\t// Handle spotlight properties.\n\t\t\t\tlightDef.spot = lightDef.spot || {};\n\t\t\t\tlightDef.spot.innerConeAngle = lightDef.spot.innerConeAngle !== undefined ? lightDef.spot.innerConeAngle : 0;\n\t\t\t\tlightDef.spot.outerConeAngle = lightDef.spot.outerConeAngle !== undefined ? lightDef.spot.outerConeAngle : Math.PI / 4.0;\n\t\t\t\tlightNode.angle = lightDef.spot.outerConeAngle;\n\t\t\t\tlightNode.penumbra = 1.0 - lightDef.spot.innerConeAngle / lightDef.spot.outerConeAngle;\n\t\t\t\tlightNode.target.position.set( 0, 0, - 1 );\n\t\t\t\tlightNode.add( lightNode.target );\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tthrow new Error( 'THREE.GLTFLoader: Unexpected light type, \"' + lightDef.type + '\".' );\n\n\t\t}\n\n\t\t// Some lights (e.g. spot) default to a position other than the origin. Reset the position\n\t\t// here, because node-level parsing will only override position if explicitly specified.\n\t\tlightNode.position.set( 0, 0, 0 );\n\n\t\tlightNode.decay = 2;\n\n\t\tif ( lightDef.intensity !== undefined ) lightNode.intensity = lightDef.intensity;\n\n\t\tlightNode.name = lightDef.name || ( 'light_' + lightIndex );\n\n\t\treturn Promise.resolve( lightNode );\n\n\t};\n\n\t/**\n\t * Unlit Materials Extension\n\t *\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_materials_unlit\n\t */\n\tfunction GLTFMaterialsUnlitExtension() {\n\n\t\tthis.name = EXTENSIONS.KHR_MATERIALS_UNLIT;\n\n\t}\n\n\tGLTFMaterialsUnlitExtension.prototype.getMaterialType = function () {\n\n\t\treturn MeshBasicMaterial;\n\n\t};\n\n\tGLTFMaterialsUnlitExtension.prototype.extendParams = function ( materialParams, materialDef, parser ) {\n\n\t\tvar pending = [];\n\n\t\tmaterialParams.color = new Color( 1.0, 1.0, 1.0 );\n\t\tmaterialParams.opacity = 1.0;\n\n\t\tvar metallicRoughness = materialDef.pbrMetallicRoughness;\n\n\t\tif ( metallicRoughness ) {\n\n\t\t\tif ( Array.isArray( metallicRoughness.baseColorFactor ) ) {\n\n\t\t\t\tvar array = metallicRoughness.baseColorFactor;\n\n\t\t\t\tmaterialParams.color.fromArray( array );\n\t\t\t\tmaterialParams.opacity = array[ 3 ];\n\n\t\t\t}\n\n\t\t\tif ( metallicRoughness.baseColorTexture !== undefined ) {\n\n\t\t\t\tpending.push( parser.assignTexture( materialParams, 'map', metallicRoughness.baseColorTexture ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn Promise.all( pending );\n\n\t};\n\n\t/* BINARY EXTENSION */\n\tvar BINARY_EXTENSION_HEADER_MAGIC = 'glTF';\n\tvar BINARY_EXTENSION_HEADER_LENGTH = 12;\n\tvar BINARY_EXTENSION_CHUNK_TYPES = { JSON: 0x4E4F534A, BIN: 0x004E4942 };\n\n\tfunction GLTFBinaryExtension( data ) {\n\n\t\tthis.name = EXTENSIONS.KHR_BINARY_GLTF;\n\t\tthis.content = null;\n\t\tthis.body = null;\n\n\t\tvar headerView = new DataView( data, 0, BINARY_EXTENSION_HEADER_LENGTH );\n\n\t\tthis.header = {\n\t\t\tmagic: LoaderUtils.decodeText( new Uint8Array( data.slice( 0, 4 ) ) ),\n\t\t\tversion: headerView.getUint32( 4, true ),\n\t\t\tlength: headerView.getUint32( 8, true )\n\t\t};\n\n\t\tif ( this.header.magic !== BINARY_EXTENSION_HEADER_MAGIC ) {\n\n\t\t\tthrow new Error( 'THREE.GLTFLoader: Unsupported glTF-Binary header.' );\n\n\t\t} else if ( this.header.version < 2.0 ) {\n\n\t\t\tthrow new Error( 'THREE.GLTFLoader: Legacy binary file detected.' );\n\n\t\t}\n\n\t\tvar chunkView = new DataView( data, BINARY_EXTENSION_HEADER_LENGTH );\n\t\tvar chunkIndex = 0;\n\n\t\twhile ( chunkIndex < chunkView.byteLength ) {\n\n\t\t\tvar chunkLength = chunkView.getUint32( chunkIndex, true );\n\t\t\tchunkIndex += 4;\n\n\t\t\tvar chunkType = chunkView.getUint32( chunkIndex, true );\n\t\t\tchunkIndex += 4;\n\n\t\t\tif ( chunkType === BINARY_EXTENSION_CHUNK_TYPES.JSON ) {\n\n\t\t\t\tvar contentArray = new Uint8Array( data, BINARY_EXTENSION_HEADER_LENGTH + chunkIndex, chunkLength );\n\t\t\t\tthis.content = LoaderUtils.decodeText( contentArray );\n\n\t\t\t} else if ( chunkType === BINARY_EXTENSION_CHUNK_TYPES.BIN ) {\n\n\t\t\t\tvar byteOffset = BINARY_EXTENSION_HEADER_LENGTH + chunkIndex;\n\t\t\t\tthis.body = data.slice( byteOffset, byteOffset + chunkLength );\n\n\t\t\t}\n\n\t\t\t// Clients must ignore chunks with unknown types.\n\n\t\t\tchunkIndex += chunkLength;\n\n\t\t}\n\n\t\tif ( this.content === null ) {\n\n\t\t\tthrow new Error( 'THREE.GLTFLoader: JSON content not found.' );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * DRACO Mesh Compression Extension\n\t *\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_draco_mesh_compression\n\t */\n\tfunction GLTFDracoMeshCompressionExtension( json, dracoLoader ) {\n\n\t\tif ( ! dracoLoader ) {\n\n\t\t\tthrow new Error( 'THREE.GLTFLoader: No DRACOLoader instance provided.' );\n\n\t\t}\n\n\t\tthis.name = EXTENSIONS.KHR_DRACO_MESH_COMPRESSION;\n\t\tthis.json = json;\n\t\tthis.dracoLoader = dracoLoader;\n\n\t}\n\n\tGLTFDracoMeshCompressionExtension.prototype.decodePrimitive = function ( primitive, parser ) {\n\n\t\tvar json = this.json;\n\t\tvar dracoLoader = this.dracoLoader;\n\t\tvar bufferViewIndex = primitive.extensions[ this.name ].bufferView;\n\t\tvar gltfAttributeMap = primitive.extensions[ this.name ].attributes;\n\t\tvar threeAttributeMap = {};\n\t\tvar attributeNormalizedMap = {};\n\t\tvar attributeTypeMap = {};\n\n\t\tfor ( var attributeName in gltfAttributeMap ) {\n\n\t\t\tvar threeAttributeName = ATTRIBUTES[ attributeName ] || attributeName.toLowerCase();\n\n\t\t\tthreeAttributeMap[ threeAttributeName ] = gltfAttributeMap[ attributeName ];\n\n\t\t}\n\n\t\tfor ( attributeName in primitive.attributes ) {\n\n\t\t\tvar threeAttributeName = ATTRIBUTES[ attributeName ] || attributeName.toLowerCase();\n\n\t\t\tif ( gltfAttributeMap[ attributeName ] !== undefined ) {\n\n\t\t\t\tvar accessorDef = json.accessors[ primitive.attributes[ attributeName ] ];\n\t\t\t\tvar componentType = WEBGL_COMPONENT_TYPES[ accessorDef.componentType ];\n\n\t\t\t\tattributeTypeMap[ threeAttributeName ] = componentType;\n\t\t\t\tattributeNormalizedMap[ threeAttributeName ] = accessorDef.normalized === true;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn parser.getDependency( 'bufferView', bufferViewIndex ).then( function ( bufferView ) {\n\n\t\t\treturn new Promise( function ( resolve ) {\n\n\t\t\t\tdracoLoader.decodeDracoFile( bufferView, function ( geometry ) {\n\n\t\t\t\t\tfor ( var attributeName in geometry.attributes ) {\n\n\t\t\t\t\t\tvar attribute = geometry.attributes[ attributeName ];\n\t\t\t\t\t\tvar normalized = attributeNormalizedMap[ attributeName ];\n\n\t\t\t\t\t\tif ( normalized !== undefined ) attribute.normalized = normalized;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tresolve( geometry );\n\n\t\t\t\t}, threeAttributeMap, attributeTypeMap );\n\n\t\t\t} );\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * Texture Transform Extension\n\t *\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_texture_transform\n\t */\n\tfunction GLTFTextureTransformExtension() {\n\n\t\tthis.name = EXTENSIONS.KHR_TEXTURE_TRANSFORM;\n\n\t}\n\n\tGLTFTextureTransformExtension.prototype.extendTexture = function ( texture, transform ) {\n\n\t\ttexture = texture.clone();\n\n\t\tif ( transform.offset !== undefined ) {\n\n\t\t\ttexture.offset.fromArray( transform.offset );\n\n\t\t}\n\n\t\tif ( transform.rotation !== undefined ) {\n\n\t\t\ttexture.rotation = transform.rotation;\n\n\t\t}\n\n\t\tif ( transform.scale !== undefined ) {\n\n\t\t\ttexture.repeat.fromArray( transform.scale );\n\n\t\t}\n\n\t\tif ( transform.texCoord !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.GLTFLoader: Custom UV sets in \"' + this.name + '\" extension not yet supported.' );\n\n\t\t}\n\n\t\ttexture.needsUpdate = true;\n\n\t\treturn texture;\n\n\t};\n\n\t/**\n\t * Specular-Glossiness Extension\n\t *\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_materials_pbrSpecularGlossiness\n\t */\n\tfunction GLTFMaterialsPbrSpecularGlossinessExtension() {\n\n\t\treturn {\n\n\t\t\tname: EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS,\n\n\t\t\tspecularGlossinessParams: [\n\t\t\t\t'color',\n\t\t\t\t'map',\n\t\t\t\t'lightMap',\n\t\t\t\t'lightMapIntensity',\n\t\t\t\t'aoMap',\n\t\t\t\t'aoMapIntensity',\n\t\t\t\t'emissive',\n\t\t\t\t'emissiveIntensity',\n\t\t\t\t'emissiveMap',\n\t\t\t\t'bumpMap',\n\t\t\t\t'bumpScale',\n\t\t\t\t'normalMap',\n\t\t\t\t'displacementMap',\n\t\t\t\t'displacementScale',\n\t\t\t\t'displacementBias',\n\t\t\t\t'specularMap',\n\t\t\t\t'specular',\n\t\t\t\t'glossinessMap',\n\t\t\t\t'glossiness',\n\t\t\t\t'alphaMap',\n\t\t\t\t'envMap',\n\t\t\t\t'envMapIntensity',\n\t\t\t\t'refractionRatio',\n\t\t\t],\n\n\t\t\tgetMaterialType: function () {\n\n\t\t\t\treturn ShaderMaterial;\n\n\t\t\t},\n\n\t\t\textendParams: function ( materialParams, materialDef, parser ) {\n\n\t\t\t\tvar pbrSpecularGlossiness = materialDef.extensions[ this.name ];\n\n\t\t\t\tvar shader = ShaderLib[ 'standard' ];\n\n\t\t\t\tvar uniforms = UniformsUtils.clone( shader.uniforms );\n\n\t\t\t\tvar specularMapParsFragmentChunk = [\n\t\t\t\t\t'#ifdef USE_SPECULARMAP',\n\t\t\t\t\t'\tuniform sampler2D specularMap;',\n\t\t\t\t\t'#endif'\n\t\t\t\t].join( '\\n' );\n\n\t\t\t\tvar glossinessMapParsFragmentChunk = [\n\t\t\t\t\t'#ifdef USE_GLOSSINESSMAP',\n\t\t\t\t\t'\tuniform sampler2D glossinessMap;',\n\t\t\t\t\t'#endif'\n\t\t\t\t].join( '\\n' );\n\n\t\t\t\tvar specularMapFragmentChunk = [\n\t\t\t\t\t'vec3 specularFactor = specular;',\n\t\t\t\t\t'#ifdef USE_SPECULARMAP',\n\t\t\t\t\t'\tvec4 texelSpecular = texture2D( specularMap, vUv );',\n\t\t\t\t\t'\ttexelSpecular = sRGBToLinear( texelSpecular );',\n\t\t\t\t\t'\t// reads channel RGB, compatible with a glTF Specular-Glossiness (RGBA) texture',\n\t\t\t\t\t'\tspecularFactor *= texelSpecular.rgb;',\n\t\t\t\t\t'#endif'\n\t\t\t\t].join( '\\n' );\n\n\t\t\t\tvar glossinessMapFragmentChunk = [\n\t\t\t\t\t'float glossinessFactor = glossiness;',\n\t\t\t\t\t'#ifdef USE_GLOSSINESSMAP',\n\t\t\t\t\t'\tvec4 texelGlossiness = texture2D( glossinessMap, vUv );',\n\t\t\t\t\t'\t// reads channel A, compatible with a glTF Specular-Glossiness (RGBA) texture',\n\t\t\t\t\t'\tglossinessFactor *= texelGlossiness.a;',\n\t\t\t\t\t'#endif'\n\t\t\t\t].join( '\\n' );\n\n\t\t\t\tvar lightPhysicalFragmentChunk = [\n\t\t\t\t\t'PhysicalMaterial material;',\n\t\t\t\t\t'material.diffuseColor = diffuseColor.rgb;',\n\t\t\t\t\t'material.specularRoughness = clamp( 1.0 - glossinessFactor, 0.04, 1.0 );',\n\t\t\t\t\t'material.specularColor = specularFactor.rgb;',\n\t\t\t\t].join( '\\n' );\n\n\t\t\t\tvar fragmentShader = shader.fragmentShader\n\t\t\t\t\t.replace( 'uniform float roughness;', 'uniform vec3 specular;' )\n\t\t\t\t\t.replace( 'uniform float metalness;', 'uniform float glossiness;' )\n\t\t\t\t\t.replace( '#include <roughnessmap_pars_fragment>', specularMapParsFragmentChunk )\n\t\t\t\t\t.replace( '#include <metalnessmap_pars_fragment>', glossinessMapParsFragmentChunk )\n\t\t\t\t\t.replace( '#include <roughnessmap_fragment>', specularMapFragmentChunk )\n\t\t\t\t\t.replace( '#include <metalnessmap_fragment>', glossinessMapFragmentChunk )\n\t\t\t\t\t.replace( '#include <lights_physical_fragment>', lightPhysicalFragmentChunk );\n\n\t\t\t\tdelete uniforms.roughness;\n\t\t\t\tdelete uniforms.metalness;\n\t\t\t\tdelete uniforms.roughnessMap;\n\t\t\t\tdelete uniforms.metalnessMap;\n\n\t\t\t\tuniforms.specular = { value: new Color().setHex( 0x111111 ) };\n\t\t\t\tuniforms.glossiness = { value: 0.5 };\n\t\t\t\tuniforms.specularMap = { value: null };\n\t\t\t\tuniforms.glossinessMap = { value: null };\n\n\t\t\t\tmaterialParams.vertexShader = shader.vertexShader;\n\t\t\t\tmaterialParams.fragmentShader = fragmentShader;\n\t\t\t\tmaterialParams.uniforms = uniforms;\n\t\t\t\tmaterialParams.defines = { 'STANDARD': '' };\n\n\t\t\t\tmaterialParams.color = new Color( 1.0, 1.0, 1.0 );\n\t\t\t\tmaterialParams.opacity = 1.0;\n\n\t\t\t\tvar pending = [];\n\n\t\t\t\tif ( Array.isArray( pbrSpecularGlossiness.diffuseFactor ) ) {\n\n\t\t\t\t\tvar array = pbrSpecularGlossiness.diffuseFactor;\n\n\t\t\t\t\tmaterialParams.color.fromArray( array );\n\t\t\t\t\tmaterialParams.opacity = array[ 3 ];\n\n\t\t\t\t}\n\n\t\t\t\tif ( pbrSpecularGlossiness.diffuseTexture !== undefined ) {\n\n\t\t\t\t\tpending.push( parser.assignTexture( materialParams, 'map', pbrSpecularGlossiness.diffuseTexture ) );\n\n\t\t\t\t}\n\n\t\t\t\tmaterialParams.emissive = new Color( 0.0, 0.0, 0.0 );\n\t\t\t\tmaterialParams.glossiness = pbrSpecularGlossiness.glossinessFactor !== undefined ? pbrSpecularGlossiness.glossinessFactor : 1.0;\n\t\t\t\tmaterialParams.specular = new Color( 1.0, 1.0, 1.0 );\n\n\t\t\t\tif ( Array.isArray( pbrSpecularGlossiness.specularFactor ) ) {\n\n\t\t\t\t\tmaterialParams.specular.fromArray( pbrSpecularGlossiness.specularFactor );\n\n\t\t\t\t}\n\n\t\t\t\tif ( pbrSpecularGlossiness.specularGlossinessTexture !== undefined ) {\n\n\t\t\t\t\tvar specGlossMapDef = pbrSpecularGlossiness.specularGlossinessTexture;\n\t\t\t\t\tpending.push( parser.assignTexture( materialParams, 'glossinessMap', specGlossMapDef ) );\n\t\t\t\t\tpending.push( parser.assignTexture( materialParams, 'specularMap', specGlossMapDef ) );\n\n\t\t\t\t}\n\n\t\t\t\treturn Promise.all( pending );\n\n\t\t\t},\n\n\t\t\tcreateMaterial: function ( params ) {\n\n\t\t\t\t// setup material properties based on MeshStandardMaterial for Specular-Glossiness\n\n\t\t\t\tvar material = new ShaderMaterial( {\n\t\t\t\t\tdefines: params.defines,\n\t\t\t\t\tvertexShader: params.vertexShader,\n\t\t\t\t\tfragmentShader: params.fragmentShader,\n\t\t\t\t\tuniforms: params.uniforms,\n\t\t\t\t\tfog: true,\n\t\t\t\t\tlights: true,\n\t\t\t\t\topacity: params.opacity,\n\t\t\t\t\ttransparent: params.transparent\n\t\t\t\t} );\n\n\t\t\t\tmaterial.isGLTFSpecularGlossinessMaterial = true;\n\n\t\t\t\tmaterial.color = params.color;\n\n\t\t\t\tmaterial.map = params.map === undefined ? null : params.map;\n\n\t\t\t\tmaterial.lightMap = null;\n\t\t\t\tmaterial.lightMapIntensity = 1.0;\n\n\t\t\t\tmaterial.aoMap = params.aoMap === undefined ? null : params.aoMap;\n\t\t\t\tmaterial.aoMapIntensity = 1.0;\n\n\t\t\t\tmaterial.emissive = params.emissive;\n\t\t\t\tmaterial.emissiveIntensity = 1.0;\n\t\t\t\tmaterial.emissiveMap = params.emissiveMap === undefined ? null : params.emissiveMap;\n\n\t\t\t\tmaterial.bumpMap = params.bumpMap === undefined ? null : params.bumpMap;\n\t\t\t\tmaterial.bumpScale = 1;\n\n\t\t\t\tmaterial.normalMap = params.normalMap === undefined ? null : params.normalMap;\n\n\t\t\t\tif ( params.normalScale ) material.normalScale = params.normalScale;\n\n\t\t\t\tmaterial.displacementMap = null;\n\t\t\t\tmaterial.displacementScale = 1;\n\t\t\t\tmaterial.displacementBias = 0;\n\n\t\t\t\tmaterial.specularMap = params.specularMap === undefined ? null : params.specularMap;\n\t\t\t\tmaterial.specular = params.specular;\n\n\t\t\t\tmaterial.glossinessMap = params.glossinessMap === undefined ? null : params.glossinessMap;\n\t\t\t\tmaterial.glossiness = params.glossiness;\n\n\t\t\t\tmaterial.alphaMap = null;\n\n\t\t\t\tmaterial.envMap = params.envMap === undefined ? null : params.envMap;\n\t\t\t\tmaterial.envMapIntensity = 1.0;\n\n\t\t\t\tmaterial.refractionRatio = 0.98;\n\n\t\t\t\tmaterial.extensions.derivatives = true;\n\n\t\t\t\treturn material;\n\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Clones a GLTFSpecularGlossinessMaterial instance. The ShaderMaterial.copy() method can\n\t\t\t * copy only properties it knows about or inherits, and misses many properties that would\n\t\t\t * normally be defined by MeshStandardMaterial.\n\t\t\t *\n\t\t\t * This method allows GLTFSpecularGlossinessMaterials to be cloned in the process of\n\t\t\t * loading a glTF model, but cloning later (e.g. by the user) would require these changes\n\t\t\t * AND also updating `.onBeforeRender` on the parent mesh.\n\t\t\t *\n\t\t\t * @param  {ShaderMaterial} source\n\t\t\t * @return {ShaderMaterial}\n\t\t\t */\n\t\t\tcloneMaterial: function ( source ) {\n\n\t\t\t\tvar target = source.clone();\n\n\t\t\t\ttarget.isGLTFSpecularGlossinessMaterial = true;\n\n\t\t\t\tvar params = this.specularGlossinessParams;\n\n\t\t\t\tfor ( var i = 0, il = params.length; i < il; i ++ ) {\n\n\t\t\t\t\tvar value = source[ params[ i ] ];\n\t\t\t\t\ttarget[ params[ i ] ] = ( value && value.isColor ) ? value.clone() : value;\n\n\t\t\t\t}\n\n\t\t\t\treturn target;\n\n\t\t\t},\n\n\t\t\t// Here's based on refreshUniformsCommon() and refreshUniformsStandard() in WebGLRenderer.\n\t\t\trefreshUniforms: function ( renderer, scene, camera, geometry, material ) {\n\n\t\t\t\tif ( material.isGLTFSpecularGlossinessMaterial !== true ) {\n\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tvar uniforms = material.uniforms;\n\t\t\t\tvar defines = material.defines;\n\n\t\t\t\tuniforms.opacity.value = material.opacity;\n\n\t\t\t\tuniforms.diffuse.value.copy( material.color );\n\t\t\t\tuniforms.emissive.value.copy( material.emissive ).multiplyScalar( material.emissiveIntensity );\n\n\t\t\t\tuniforms.map.value = material.map;\n\t\t\t\tuniforms.specularMap.value = material.specularMap;\n\t\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\n\t\t\t\tuniforms.lightMap.value = material.lightMap;\n\t\t\t\tuniforms.lightMapIntensity.value = material.lightMapIntensity;\n\n\t\t\t\tuniforms.aoMap.value = material.aoMap;\n\t\t\t\tuniforms.aoMapIntensity.value = material.aoMapIntensity;\n\n\t\t\t\t// uv repeat and offset setting priorities\n\t\t\t\t// 1. color map\n\t\t\t\t// 2. specular map\n\t\t\t\t// 3. normal map\n\t\t\t\t// 4. bump map\n\t\t\t\t// 5. alpha map\n\t\t\t\t// 6. emissive map\n\n\t\t\t\tvar uvScaleMap;\n\n\t\t\t\tif ( material.map ) {\n\n\t\t\t\t\tuvScaleMap = material.map;\n\n\t\t\t\t} else if ( material.specularMap ) {\n\n\t\t\t\t\tuvScaleMap = material.specularMap;\n\n\t\t\t\t} else if ( material.displacementMap ) {\n\n\t\t\t\t\tuvScaleMap = material.displacementMap;\n\n\t\t\t\t} else if ( material.normalMap ) {\n\n\t\t\t\t\tuvScaleMap = material.normalMap;\n\n\t\t\t\t} else if ( material.bumpMap ) {\n\n\t\t\t\t\tuvScaleMap = material.bumpMap;\n\n\t\t\t\t} else if ( material.glossinessMap ) {\n\n\t\t\t\t\tuvScaleMap = material.glossinessMap;\n\n\t\t\t\t} else if ( material.alphaMap ) {\n\n\t\t\t\t\tuvScaleMap = material.alphaMap;\n\n\t\t\t\t} else if ( material.emissiveMap ) {\n\n\t\t\t\t\tuvScaleMap = material.emissiveMap;\n\n\t\t\t\t}\n\n\t\t\t\tif ( uvScaleMap !== undefined ) {\n\n\t\t\t\t\t// backwards compatibility\n\t\t\t\t\tif ( uvScaleMap.isWebGLRenderTarget ) {\n\n\t\t\t\t\t\tuvScaleMap = uvScaleMap.texture;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( uvScaleMap.matrixAutoUpdate === true ) {\n\n\t\t\t\t\t\tuvScaleMap.updateMatrix();\n\n\t\t\t\t\t}\n\n\t\t\t\t\tuniforms.uvTransform.value.copy( uvScaleMap.matrix );\n\n\t\t\t\t}\n\n\t\t\t\tif ( material.envMap ) {\n\n\t\t\t\t\tuniforms.envMap.value = material.envMap;\n\t\t\t\t\tuniforms.envMapIntensity.value = material.envMapIntensity;\n\n\t\t\t\t\t// don't flip CubeTexture envMaps, flip everything else:\n\t\t\t\t\t//  WebGLRenderTargetCube will be flipped for backwards compatibility\n\t\t\t\t\t//  WebGLRenderTargetCube.texture will be flipped because it's a Texture and NOT a CubeTexture\n\t\t\t\t\t// this check must be handled differently, or removed entirely, if WebGLRenderTargetCube uses a CubeTexture in the future\n\t\t\t\t\tuniforms.flipEnvMap.value = material.envMap.isCubeTexture ? - 1 : 1;\n\n\t\t\t\t\tuniforms.reflectivity.value = material.reflectivity;\n\t\t\t\t\tuniforms.refractionRatio.value = material.refractionRatio;\n\n\t\t\t\t\tuniforms.maxMipLevel.value = renderer.properties.get( material.envMap ).__maxMipLevel;\n\n\t\t\t\t}\n\n\t\t\t\tuniforms.specular.value.copy( material.specular );\n\t\t\t\tuniforms.glossiness.value = material.glossiness;\n\n\t\t\t\tuniforms.glossinessMap.value = material.glossinessMap;\n\n\t\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\t\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\t\tuniforms.normalMap.value = material.normalMap;\n\n\t\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t\t\tif ( uniforms.glossinessMap.value !== null && defines.USE_GLOSSINESSMAP === undefined ) {\n\n\t\t\t\t\tdefines.USE_GLOSSINESSMAP = '';\n\t\t\t\t\t// set USE_ROUGHNESSMAP to enable vUv\n\t\t\t\t\tdefines.USE_ROUGHNESSMAP = '';\n\n\t\t\t\t}\n\n\t\t\t\tif ( uniforms.glossinessMap.value === null && defines.USE_GLOSSINESSMAP !== undefined ) {\n\n\t\t\t\t\tdelete defines.USE_GLOSSINESSMAP;\n\t\t\t\t\tdelete defines.USE_ROUGHNESSMAP;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\t/**\n\t * Mesh Quantization Extension\n\t *\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_mesh_quantization\n\t */\n\tfunction GLTFMeshQuantizationExtension() {\n\n\t\tthis.name = EXTENSIONS.KHR_MESH_QUANTIZATION;\n\n\t}\n\n\t/*********************************/\n\t/********** INTERPOLATION ********/\n\t/*********************************/\n\n\t// Spline Interpolation\n\t// Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#appendix-c-spline-interpolation\n\tfunction GLTFCubicSplineInterpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tInterpolant.call( this, parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t}\n\n\tGLTFCubicSplineInterpolant.prototype = Object.create( Interpolant.prototype );\n\tGLTFCubicSplineInterpolant.prototype.constructor = GLTFCubicSplineInterpolant;\n\n\tGLTFCubicSplineInterpolant.prototype.copySampleValue_ = function ( index ) {\n\n\t\t// Copies a sample value to the result buffer. See description of glTF\n\t\t// CUBICSPLINE values layout in interpolate_() function below.\n\n\t\tvar result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tvalueSize = this.valueSize,\n\t\t\toffset = index * valueSize * 3 + valueSize;\n\n\t\tfor ( var i = 0; i !== valueSize; i ++ ) {\n\n\t\t\tresult[ i ] = values[ offset + i ];\n\n\t\t}\n\n\t\treturn result;\n\n\t};\n\n\tGLTFCubicSplineInterpolant.prototype.beforeStart_ = GLTFCubicSplineInterpolant.prototype.copySampleValue_;\n\n\tGLTFCubicSplineInterpolant.prototype.afterEnd_ = GLTFCubicSplineInterpolant.prototype.copySampleValue_;\n\n\tGLTFCubicSplineInterpolant.prototype.interpolate_ = function ( i1, t0, t, t1 ) {\n\n\t\tvar result = this.resultBuffer;\n\t\tvar values = this.sampleValues;\n\t\tvar stride = this.valueSize;\n\n\t\tvar stride2 = stride * 2;\n\t\tvar stride3 = stride * 3;\n\n\t\tvar td = t1 - t0;\n\n\t\tvar p = ( t - t0 ) / td;\n\t\tvar pp = p * p;\n\t\tvar ppp = pp * p;\n\n\t\tvar offset1 = i1 * stride3;\n\t\tvar offset0 = offset1 - stride3;\n\n\t\tvar s2 = - 2 * ppp + 3 * pp;\n\t\tvar s3 = ppp - pp;\n\t\tvar s0 = 1 - s2;\n\t\tvar s1 = s3 - pp + p;\n\n\t\t// Layout of keyframe output values for CUBICSPLINE animations:\n\t\t//   [ inTangent_1, splineVertex_1, outTangent_1, inTangent_2, splineVertex_2, ... ]\n\t\tfor ( var i = 0; i !== stride; i ++ ) {\n\n\t\t\tvar p0 = values[ offset0 + i + stride ]; // splineVertex_k\n\t\t\tvar m0 = values[ offset0 + i + stride2 ] * td; // outTangent_k * (t_k+1 - t_k)\n\t\t\tvar p1 = values[ offset1 + i + stride ]; // splineVertex_k+1\n\t\t\tvar m1 = values[ offset1 + i ] * td; // inTangent_k+1 * (t_k+1 - t_k)\n\n\t\t\tresult[ i ] = s0 * p0 + s1 * m0 + s2 * p1 + s3 * m1;\n\n\t\t}\n\n\t\treturn result;\n\n\t};\n\n\t/*********************************/\n\t/********** INTERNALS ************/\n\t/*********************************/\n\n\t/* CONSTANTS */\n\n\tvar WEBGL_CONSTANTS = {\n\t\tFLOAT: 5126,\n\t\t//FLOAT_MAT2: 35674,\n\t\tFLOAT_MAT3: 35675,\n\t\tFLOAT_MAT4: 35676,\n\t\tFLOAT_VEC2: 35664,\n\t\tFLOAT_VEC3: 35665,\n\t\tFLOAT_VEC4: 35666,\n\t\tLINEAR: 9729,\n\t\tREPEAT: 10497,\n\t\tSAMPLER_2D: 35678,\n\t\tPOINTS: 0,\n\t\tLINES: 1,\n\t\tLINE_LOOP: 2,\n\t\tLINE_STRIP: 3,\n\t\tTRIANGLES: 4,\n\t\tTRIANGLE_STRIP: 5,\n\t\tTRIANGLE_FAN: 6,\n\t\tUNSIGNED_BYTE: 5121,\n\t\tUNSIGNED_SHORT: 5123\n\t};\n\n\tvar WEBGL_COMPONENT_TYPES = {\n\t\t5120: Int8Array,\n\t\t5121: Uint8Array,\n\t\t5122: Int16Array,\n\t\t5123: Uint16Array,\n\t\t5125: Uint32Array,\n\t\t5126: Float32Array\n\t};\n\n\tvar WEBGL_FILTERS = {\n\t\t9728: NearestFilter,\n\t\t9729: LinearFilter,\n\t\t9984: NearestMipmapNearestFilter,\n\t\t9985: LinearMipmapNearestFilter,\n\t\t9986: NearestMipmapLinearFilter,\n\t\t9987: LinearMipmapLinearFilter\n\t};\n\n\tvar WEBGL_WRAPPINGS = {\n\t\t33071: ClampToEdgeWrapping,\n\t\t33648: MirroredRepeatWrapping,\n\t\t10497: RepeatWrapping\n\t};\n\n\tvar WEBGL_TYPE_SIZES = {\n\t\t'SCALAR': 1,\n\t\t'VEC2': 2,\n\t\t'VEC3': 3,\n\t\t'VEC4': 4,\n\t\t'MAT2': 4,\n\t\t'MAT3': 9,\n\t\t'MAT4': 16\n\t};\n\n\tvar ATTRIBUTES = {\n\t\tPOSITION: 'position',\n\t\tNORMAL: 'normal',\n\t\tTANGENT: 'tangent',\n\t\tTEXCOORD_0: 'uv',\n\t\tTEXCOORD_1: 'uv2',\n\t\tCOLOR_0: 'color',\n\t\tWEIGHTS_0: 'skinWeight',\n\t\tJOINTS_0: 'skinIndex',\n\t};\n\n\tvar PATH_PROPERTIES = {\n\t\tscale: 'scale',\n\t\ttranslation: 'position',\n\t\trotation: 'quaternion',\n\t\tweights: 'morphTargetInfluences'\n\t};\n\n\tvar INTERPOLATION = {\n\t\tCUBICSPLINE: undefined, // We use a custom interpolant (GLTFCubicSplineInterpolation) for CUBICSPLINE tracks. Each\n\t\t                        // keyframe track will be initialized with a default interpolation type, then modified.\n\t\tLINEAR: InterpolateLinear,\n\t\tSTEP: InterpolateDiscrete\n\t};\n\n\tvar ALPHA_MODES = {\n\t\tOPAQUE: 'OPAQUE',\n\t\tMASK: 'MASK',\n\t\tBLEND: 'BLEND'\n\t};\n\n\tvar MIME_TYPE_FORMATS = {\n\t\t'image/png': RGBAFormat,\n\t\t'image/jpeg': RGBFormat\n\t};\n\n\t/* UTILITY FUNCTIONS */\n\n\tfunction resolveURL( url, path ) {\n\n\t\t// Invalid URL\n\t\tif ( typeof url !== 'string' || url === '' ) return '';\n\n\t\t// Host Relative URL\n\t\tif ( /^https?:\\/\\//i.test( path ) && /^\\//.test( url ) ) {\n\n\t\t\tpath = path.replace( /(^https?:\\/\\/[^\\/]+).*/i, '$1' );\n\n\t\t}\n\n\t\t// Absolute URL http://,https://,//\n\t\tif ( /^(https?:)?\\/\\//i.test( url ) ) return url;\n\n\t\t// Data URI\n\t\tif ( /^data:.*,.*$/i.test( url ) ) return url;\n\n\t\t// Blob URL\n\t\tif ( /^blob:.*$/i.test( url ) ) return url;\n\n\t\t// Relative URL\n\t\treturn path + url;\n\n\t}\n\n\tvar defaultMaterial;\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#default-material\n\t */\n\tfunction createDefaultMaterial() {\n\n\t\tdefaultMaterial = defaultMaterial || new MeshStandardMaterial( {\n\t\t\tcolor: 0xFFFFFF,\n\t\t\temissive: 0x000000,\n\t\t\tmetalness: 1,\n\t\t\troughness: 1,\n\t\t\ttransparent: false,\n\t\t\tdepthTest: true,\n\t\t\tside: FrontSide\n\t\t} );\n\n\t\treturn defaultMaterial;\n\n\t}\n\n\tfunction addUnknownExtensionsToUserData( knownExtensions, object, objectDef ) {\n\n\t\t// Add unknown glTF extensions to an object's userData.\n\n\t\tfor ( var name in objectDef.extensions ) {\n\n\t\t\tif ( knownExtensions[ name ] === undefined ) {\n\n\t\t\t\tobject.userData.gltfExtensions = object.userData.gltfExtensions || {};\n\t\t\t\tobject.userData.gltfExtensions[ name ] = objectDef.extensions[ name ];\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t/**\n\t * @param {Object3D|Material|BufferGeometry} object\n\t * @param {GLTF.definition} gltfDef\n\t */\n\tfunction assignExtrasToUserData( object, gltfDef ) {\n\n\t\tif ( gltfDef.extras !== undefined ) {\n\n\t\t\tif ( typeof gltfDef.extras === 'object' ) {\n\n\t\t\t\tObject.assign( object.userData, gltfDef.extras );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'THREE.GLTFLoader: Ignoring primitive type .extras, ' + gltfDef.extras );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#morph-targets\n\t *\n\t * @param {BufferGeometry} geometry\n\t * @param {Array<GLTF.Target>} targets\n\t * @param {GLTFParser} parser\n\t * @return {Promise<BufferGeometry>}\n\t */\n\tfunction addMorphTargets( geometry, targets, parser ) {\n\n\t\tvar hasMorphPosition = false;\n\t\tvar hasMorphNormal = false;\n\n\t\tfor ( var i = 0, il = targets.length; i < il; i ++ ) {\n\n\t\t\tvar target = targets[ i ];\n\n\t\t\tif ( target.POSITION !== undefined ) hasMorphPosition = true;\n\t\t\tif ( target.NORMAL !== undefined ) hasMorphNormal = true;\n\n\t\t\tif ( hasMorphPosition && hasMorphNormal ) break;\n\n\t\t}\n\n\t\tif ( ! hasMorphPosition && ! hasMorphNormal ) return Promise.resolve( geometry );\n\n\t\tvar pendingPositionAccessors = [];\n\t\tvar pendingNormalAccessors = [];\n\n\t\tfor ( var i = 0, il = targets.length; i < il; i ++ ) {\n\n\t\t\tvar target = targets[ i ];\n\n\t\t\tif ( hasMorphPosition ) {\n\n\t\t\t\tvar pendingAccessor = target.POSITION !== undefined\n\t\t\t\t\t? parser.getDependency( 'accessor', target.POSITION )\n\t\t\t\t\t: geometry.attributes.position;\n\n\t\t\t\tpendingPositionAccessors.push( pendingAccessor );\n\n\t\t\t}\n\n\t\t\tif ( hasMorphNormal ) {\n\n\t\t\t\tvar pendingAccessor = target.NORMAL !== undefined\n\t\t\t\t\t? parser.getDependency( 'accessor', target.NORMAL )\n\t\t\t\t\t: geometry.attributes.normal;\n\n\t\t\t\tpendingNormalAccessors.push( pendingAccessor );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn Promise.all( [\n\t\t\tPromise.all( pendingPositionAccessors ),\n\t\t\tPromise.all( pendingNormalAccessors )\n\t\t] ).then( function ( accessors ) {\n\n\t\t\tvar morphPositions = accessors[ 0 ];\n\t\t\tvar morphNormals = accessors[ 1 ];\n\n\t\t\tif ( hasMorphPosition ) geometry.morphAttributes.position = morphPositions;\n\t\t\tif ( hasMorphNormal ) geometry.morphAttributes.normal = morphNormals;\n\t\t\tgeometry.morphTargetsRelative = true;\n\n\t\t\treturn geometry;\n\n\t\t} );\n\n\t}\n\n\t/**\n\t * @param {Mesh} mesh\n\t * @param {GLTF.Mesh} meshDef\n\t */\n\tfunction updateMorphTargets( mesh, meshDef ) {\n\n\t\tmesh.updateMorphTargets();\n\n\t\tif ( meshDef.weights !== undefined ) {\n\n\t\t\tfor ( var i = 0, il = meshDef.weights.length; i < il; i ++ ) {\n\n\t\t\t\tmesh.morphTargetInfluences[ i ] = meshDef.weights[ i ];\n\n\t\t\t}\n\n\t\t}\n\n\t\t// .extras has user-defined data, so check that .extras.targetNames is an array.\n\t\tif ( meshDef.extras && Array.isArray( meshDef.extras.targetNames ) ) {\n\n\t\t\tvar targetNames = meshDef.extras.targetNames;\n\n\t\t\tif ( mesh.morphTargetInfluences.length === targetNames.length ) {\n\n\t\t\t\tmesh.morphTargetDictionary = {};\n\n\t\t\t\tfor ( var i = 0, il = targetNames.length; i < il; i ++ ) {\n\n\t\t\t\t\tmesh.morphTargetDictionary[ targetNames[ i ] ] = i;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'THREE.GLTFLoader: Invalid extras.targetNames length. Ignoring names.' );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction createPrimitiveKey( primitiveDef ) {\n\n\t\tvar dracoExtension = primitiveDef.extensions && primitiveDef.extensions[ EXTENSIONS.KHR_DRACO_MESH_COMPRESSION ];\n\t\tvar geometryKey;\n\n\t\tif ( dracoExtension ) {\n\n\t\t\tgeometryKey = 'draco:' + dracoExtension.bufferView\n\t\t\t\t+ ':' + dracoExtension.indices\n\t\t\t\t+ ':' + createAttributesKey( dracoExtension.attributes );\n\n\t\t} else {\n\n\t\t\tgeometryKey = primitiveDef.indices + ':' + createAttributesKey( primitiveDef.attributes ) + ':' + primitiveDef.mode;\n\n\t\t}\n\n\t\treturn geometryKey;\n\n\t}\n\n\tfunction createAttributesKey( attributes ) {\n\n\t\tvar attributesKey = '';\n\n\t\tvar keys = Object.keys( attributes ).sort();\n\n\t\tfor ( var i = 0, il = keys.length; i < il; i ++ ) {\n\n\t\t\tattributesKey += keys[ i ] + ':' + attributes[ keys[ i ] ] + ';';\n\n\t\t}\n\n\t\treturn attributesKey;\n\n\t}\n\n\t/* GLTF PARSER */\n\n\tfunction GLTFParser( json, extensions, options ) {\n\n\t\tthis.json = json || {};\n\t\tthis.extensions = extensions || {};\n\t\tthis.options = options || {};\n\n\t\t// loader object cache\n\t\tthis.cache = new GLTFRegistry();\n\n\t\t// BufferGeometry caching\n\t\tthis.primitiveCache = {};\n\n\t\tthis.textureLoader = new TextureLoader( this.options.manager );\n\t\tthis.textureLoader.setCrossOrigin( this.options.crossOrigin );\n\n\t\tthis.fileLoader = new FileLoader( this.options.manager );\n\t\tthis.fileLoader.setResponseType( 'arraybuffer' );\n\n\t\tif ( this.options.crossOrigin === 'use-credentials' ) {\n\n\t\t\tthis.fileLoader.setWithCredentials( true );\n\n\t\t}\n\n\t}\n\n\tGLTFParser.prototype.parse = function ( onLoad, onError ) {\n\n\t\tvar parser = this;\n\t\tvar json = this.json;\n\t\tvar extensions = this.extensions;\n\n\t\t// Clear the loader cache\n\t\tthis.cache.removeAll();\n\n\t\t// Mark the special nodes/meshes in json for efficient parse\n\t\tthis.markDefs();\n\n\t\tPromise.all( [\n\n\t\t\tthis.getDependencies( 'scene' ),\n\t\t\tthis.getDependencies( 'animation' ),\n\t\t\tthis.getDependencies( 'camera' ),\n\n\t\t] ).then( function ( dependencies ) {\n\n\t\t\tvar result = {\n\t\t\t\tscene: dependencies[ 0 ][ json.scene || 0 ],\n\t\t\t\tscenes: dependencies[ 0 ],\n\t\t\t\tanimations: dependencies[ 1 ],\n\t\t\t\tcameras: dependencies[ 2 ],\n\t\t\t\tasset: json.asset,\n\t\t\t\tparser: parser,\n\t\t\t\tuserData: {}\n\t\t\t};\n\n\t\t\taddUnknownExtensionsToUserData( extensions, result, json );\n\n\t\t\tassignExtrasToUserData( result, json );\n\n\t\t\tonLoad( result );\n\n\t\t} ).catch( onError );\n\n\t};\n\n\t/**\n\t * Marks the special nodes/meshes in json for efficient parse.\n\t */\n\tGLTFParser.prototype.markDefs = function () {\n\n\t\tvar nodeDefs = this.json.nodes || [];\n\t\tvar skinDefs = this.json.skins || [];\n\t\tvar meshDefs = this.json.meshes || [];\n\n\t\tvar meshReferences = {};\n\t\tvar meshUses = {};\n\n\t\t// Nothing in the node definition indicates whether it is a Bone or an\n\t\t// Object3D. Use the skins' joint references to mark bones.\n\t\tfor ( var skinIndex = 0, skinLength = skinDefs.length; skinIndex < skinLength; skinIndex ++ ) {\n\n\t\t\tvar joints = skinDefs[ skinIndex ].joints;\n\n\t\t\tfor ( var i = 0, il = joints.length; i < il; i ++ ) {\n\n\t\t\t\tnodeDefs[ joints[ i ] ].isBone = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Meshes can (and should) be reused by multiple nodes in a glTF asset. To\n\t\t// avoid having more than one Mesh with the same name, count\n\t\t// references and rename instances below.\n\t\t//\n\t\t// Example: CesiumMilkTruck sample model reuses \"Wheel\" meshes.\n\t\tfor ( var nodeIndex = 0, nodeLength = nodeDefs.length; nodeIndex < nodeLength; nodeIndex ++ ) {\n\n\t\t\tvar nodeDef = nodeDefs[ nodeIndex ];\n\n\t\t\tif ( nodeDef.mesh !== undefined ) {\n\n\t\t\t\tif ( meshReferences[ nodeDef.mesh ] === undefined ) {\n\n\t\t\t\t\tmeshReferences[ nodeDef.mesh ] = meshUses[ nodeDef.mesh ] = 0;\n\n\t\t\t\t}\n\n\t\t\t\tmeshReferences[ nodeDef.mesh ] ++;\n\n\t\t\t\t// Nothing in the mesh definition indicates whether it is\n\t\t\t\t// a SkinnedMesh or Mesh. Use the node's mesh reference\n\t\t\t\t// to mark SkinnedMesh if node has skin.\n\t\t\t\tif ( nodeDef.skin !== undefined ) {\n\n\t\t\t\t\tmeshDefs[ nodeDef.mesh ].isSkinnedMesh = true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.json.meshReferences = meshReferences;\n\t\tthis.json.meshUses = meshUses;\n\n\t};\n\n\t/**\n\t * Requests the specified dependency asynchronously, with caching.\n\t * @param {string} type\n\t * @param {number} index\n\t * @return {Promise<Object3D|Material|THREE.Texture|AnimationClip|ArrayBuffer|Object>}\n\t */\n\tGLTFParser.prototype.getDependency = function ( type, index ) {\n\n\t\tvar cacheKey = type + ':' + index;\n\t\tvar dependency = this.cache.get( cacheKey );\n\n\t\tif ( ! dependency ) {\n\n\t\t\tswitch ( type ) {\n\n\t\t\t\tcase 'scene':\n\t\t\t\t\tdependency = this.loadScene( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'node':\n\t\t\t\t\tdependency = this.loadNode( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'mesh':\n\t\t\t\t\tdependency = this.loadMesh( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'accessor':\n\t\t\t\t\tdependency = this.loadAccessor( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'bufferView':\n\t\t\t\t\tdependency = this.loadBufferView( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'buffer':\n\t\t\t\t\tdependency = this.loadBuffer( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'material':\n\t\t\t\t\tdependency = this.loadMaterial( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'texture':\n\t\t\t\t\tdependency = this.loadTexture( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'skin':\n\t\t\t\t\tdependency = this.loadSkin( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'animation':\n\t\t\t\t\tdependency = this.loadAnimation( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'camera':\n\t\t\t\t\tdependency = this.loadCamera( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'light':\n\t\t\t\t\tdependency = this.extensions[ EXTENSIONS.KHR_LIGHTS_PUNCTUAL ].loadLight( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error( 'Unknown type: ' + type );\n\n\t\t\t}\n\n\t\t\tthis.cache.add( cacheKey, dependency );\n\n\t\t}\n\n\t\treturn dependency;\n\n\t};\n\n\t/**\n\t * Requests all dependencies of the specified type asynchronously, with caching.\n\t * @param {string} type\n\t * @return {Promise<Array<Object>>}\n\t */\n\tGLTFParser.prototype.getDependencies = function ( type ) {\n\n\t\tvar dependencies = this.cache.get( type );\n\n\t\tif ( ! dependencies ) {\n\n\t\t\tvar parser = this;\n\t\t\tvar defs = this.json[ type + ( type === 'mesh' ? 'es' : 's' ) ] || [];\n\n\t\t\tdependencies = Promise.all( defs.map( function ( def, index ) {\n\n\t\t\t\treturn parser.getDependency( type, index );\n\n\t\t\t} ) );\n\n\t\t\tthis.cache.add( type, dependencies );\n\n\t\t}\n\n\t\treturn dependencies;\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#buffers-and-buffer-views\n\t * @param {number} bufferIndex\n\t * @return {Promise<ArrayBuffer>}\n\t */\n\tGLTFParser.prototype.loadBuffer = function ( bufferIndex ) {\n\n\t\tvar bufferDef = this.json.buffers[ bufferIndex ];\n\t\tvar loader = this.fileLoader;\n\n\t\tif ( bufferDef.type && bufferDef.type !== 'arraybuffer' ) {\n\n\t\t\tthrow new Error( 'THREE.GLTFLoader: ' + bufferDef.type + ' buffer type is not supported.' );\n\n\t\t}\n\n\t\t// If present, GLB container is required to be the first buffer.\n\t\tif ( bufferDef.uri === undefined && bufferIndex === 0 ) {\n\n\t\t\treturn Promise.resolve( this.extensions[ EXTENSIONS.KHR_BINARY_GLTF ].body );\n\n\t\t}\n\n\t\tvar options = this.options;\n\n\t\treturn new Promise( function ( resolve, reject ) {\n\n\t\t\tloader.load( resolveURL( bufferDef.uri, options.path ), resolve, undefined, function () {\n\n\t\t\t\treject( new Error( 'THREE.GLTFLoader: Failed to load buffer \"' + bufferDef.uri + '\".' ) );\n\n\t\t\t} );\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#buffers-and-buffer-views\n\t * @param {number} bufferViewIndex\n\t * @return {Promise<ArrayBuffer>}\n\t */\n\tGLTFParser.prototype.loadBufferView = function ( bufferViewIndex ) {\n\n\t\tvar bufferViewDef = this.json.bufferViews[ bufferViewIndex ];\n\n\t\treturn this.getDependency( 'buffer', bufferViewDef.buffer ).then( function ( buffer ) {\n\n\t\t\tvar byteLength = bufferViewDef.byteLength || 0;\n\t\t\tvar byteOffset = bufferViewDef.byteOffset || 0;\n\t\t\treturn buffer.slice( byteOffset, byteOffset + byteLength );\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#accessors\n\t * @param {number} accessorIndex\n\t * @return {Promise<BufferAttribute|InterleavedBufferAttribute>}\n\t */\n\tGLTFParser.prototype.loadAccessor = function ( accessorIndex ) {\n\n\t\tvar parser = this;\n\t\tvar json = this.json;\n\n\t\tvar accessorDef = this.json.accessors[ accessorIndex ];\n\n\t\tif ( accessorDef.bufferView === undefined && accessorDef.sparse === undefined ) {\n\n\t\t\t// Ignore empty accessors, which may be used to declare runtime\n\t\t\t// information about attributes coming from another source (e.g. Draco\n\t\t\t// compression extension).\n\t\t\treturn Promise.resolve( null );\n\n\t\t}\n\n\t\tvar pendingBufferViews = [];\n\n\t\tif ( accessorDef.bufferView !== undefined ) {\n\n\t\t\tpendingBufferViews.push( this.getDependency( 'bufferView', accessorDef.bufferView ) );\n\n\t\t} else {\n\n\t\t\tpendingBufferViews.push( null );\n\n\t\t}\n\n\t\tif ( accessorDef.sparse !== undefined ) {\n\n\t\t\tpendingBufferViews.push( this.getDependency( 'bufferView', accessorDef.sparse.indices.bufferView ) );\n\t\t\tpendingBufferViews.push( this.getDependency( 'bufferView', accessorDef.sparse.values.bufferView ) );\n\n\t\t}\n\n\t\treturn Promise.all( pendingBufferViews ).then( function ( bufferViews ) {\n\n\t\t\tvar bufferView = bufferViews[ 0 ];\n\n\t\t\tvar itemSize = WEBGL_TYPE_SIZES[ accessorDef.type ];\n\t\t\tvar TypedArray = WEBGL_COMPONENT_TYPES[ accessorDef.componentType ];\n\n\t\t\t// For VEC3: itemSize is 3, elementBytes is 4, itemBytes is 12.\n\t\t\tvar elementBytes = TypedArray.BYTES_PER_ELEMENT;\n\t\t\tvar itemBytes = elementBytes * itemSize;\n\t\t\tvar byteOffset = accessorDef.byteOffset || 0;\n\t\t\tvar byteStride = accessorDef.bufferView !== undefined ? json.bufferViews[ accessorDef.bufferView ].byteStride : undefined;\n\t\t\tvar normalized = accessorDef.normalized === true;\n\t\t\tvar array, bufferAttribute;\n\n\t\t\t// The buffer is not interleaved if the stride is the item size in bytes.\n\t\t\tif ( byteStride && byteStride !== itemBytes ) {\n\n\t\t\t\t// Each \"slice\" of the buffer, as defined by 'count' elements of 'byteStride' bytes, gets its own InterleavedBuffer\n\t\t\t\t// This makes sure that IBA.count reflects accessor.count properly\n\t\t\t\tvar ibSlice = Math.floor( byteOffset / byteStride );\n\t\t\t\tvar ibCacheKey = 'InterleavedBuffer:' + accessorDef.bufferView + ':' + accessorDef.componentType + ':' + ibSlice + ':' + accessorDef.count;\n\t\t\t\tvar ib = parser.cache.get( ibCacheKey );\n\n\t\t\t\tif ( ! ib ) {\n\n\t\t\t\t\tarray = new TypedArray( bufferView, ibSlice * byteStride, accessorDef.count * byteStride / elementBytes );\n\n\t\t\t\t\t// Integer parameters to IB/IBA are in array elements, not bytes.\n\t\t\t\t\tib = new InterleavedBuffer( array, byteStride / elementBytes );\n\n\t\t\t\t\tparser.cache.add( ibCacheKey, ib );\n\n\t\t\t\t}\n\n\t\t\t\tbufferAttribute = new InterleavedBufferAttribute( ib, itemSize, ( byteOffset % byteStride ) / elementBytes, normalized );\n\n\t\t\t} else {\n\n\t\t\t\tif ( bufferView === null ) {\n\n\t\t\t\t\tarray = new TypedArray( accessorDef.count * itemSize );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tarray = new TypedArray( bufferView, byteOffset, accessorDef.count * itemSize );\n\n\t\t\t\t}\n\n\t\t\t\tbufferAttribute = new BufferAttribute( array, itemSize, normalized );\n\n\t\t\t}\n\n\t\t\t// https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#sparse-accessors\n\t\t\tif ( accessorDef.sparse !== undefined ) {\n\n\t\t\t\tvar itemSizeIndices = WEBGL_TYPE_SIZES.SCALAR;\n\t\t\t\tvar TypedArrayIndices = WEBGL_COMPONENT_TYPES[ accessorDef.sparse.indices.componentType ];\n\n\t\t\t\tvar byteOffsetIndices = accessorDef.sparse.indices.byteOffset || 0;\n\t\t\t\tvar byteOffsetValues = accessorDef.sparse.values.byteOffset || 0;\n\n\t\t\t\tvar sparseIndices = new TypedArrayIndices( bufferViews[ 1 ], byteOffsetIndices, accessorDef.sparse.count * itemSizeIndices );\n\t\t\t\tvar sparseValues = new TypedArray( bufferViews[ 2 ], byteOffsetValues, accessorDef.sparse.count * itemSize );\n\n\t\t\t\tif ( bufferView !== null ) {\n\n\t\t\t\t\t// Avoid modifying the original ArrayBuffer, if the bufferView wasn't initialized with zeroes.\n\t\t\t\t\tbufferAttribute = new BufferAttribute( bufferAttribute.array.slice(), bufferAttribute.itemSize, bufferAttribute.normalized );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( var i = 0, il = sparseIndices.length; i < il; i ++ ) {\n\n\t\t\t\t\tvar index = sparseIndices[ i ];\n\n\t\t\t\t\tbufferAttribute.setX( index, sparseValues[ i * itemSize ] );\n\t\t\t\t\tif ( itemSize >= 2 ) bufferAttribute.setY( index, sparseValues[ i * itemSize + 1 ] );\n\t\t\t\t\tif ( itemSize >= 3 ) bufferAttribute.setZ( index, sparseValues[ i * itemSize + 2 ] );\n\t\t\t\t\tif ( itemSize >= 4 ) bufferAttribute.setW( index, sparseValues[ i * itemSize + 3 ] );\n\t\t\t\t\tif ( itemSize >= 5 ) throw new Error( 'THREE.GLTFLoader: Unsupported itemSize in sparse BufferAttribute.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn bufferAttribute;\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#textures\n\t * @param {number} textureIndex\n\t * @return {Promise<THREE.Texture>}\n\t */\n\tGLTFParser.prototype.loadTexture = function ( textureIndex ) {\n\n\t\tvar parser = this;\n\t\tvar json = this.json;\n\t\tvar options = this.options;\n\t\tvar textureLoader = this.textureLoader;\n\n\t\tvar URL = window.URL || window.webkitURL;\n\n\t\tvar textureDef = json.textures[ textureIndex ];\n\n\t\tvar textureExtensions = textureDef.extensions || {};\n\n\t\tvar source;\n\n\t\tif ( textureExtensions[ EXTENSIONS.MSFT_TEXTURE_DDS ] ) {\n\n\t\t\tsource = json.images[ textureExtensions[ EXTENSIONS.MSFT_TEXTURE_DDS ].source ];\n\n\t\t} else {\n\n\t\t\tsource = json.images[ textureDef.source ];\n\n\t\t}\n\n\t\tvar sourceURI = source.uri;\n\t\tvar isObjectURL = false;\n\n\t\tif ( source.bufferView !== undefined ) {\n\n\t\t\t// Load binary image data from bufferView, if provided.\n\n\t\t\tsourceURI = parser.getDependency( 'bufferView', source.bufferView ).then( function ( bufferView ) {\n\n\t\t\t\tisObjectURL = true;\n\t\t\t\tvar blob = new Blob( [ bufferView ], { type: source.mimeType } );\n\t\t\t\tsourceURI = URL.createObjectURL( blob );\n\t\t\t\treturn sourceURI;\n\n\t\t\t} );\n\n\t\t}\n\n\t\treturn Promise.resolve( sourceURI ).then( function ( sourceURI ) {\n\n\t\t\t// Load Texture resource.\n\n\t\t\tvar loader = options.manager.getHandler( sourceURI );\n\n\t\t\tif ( ! loader ) {\n\n\t\t\t\tloader = textureExtensions[ EXTENSIONS.MSFT_TEXTURE_DDS ]\n\t\t\t\t\t? parser.extensions[ EXTENSIONS.MSFT_TEXTURE_DDS ].ddsLoader\n\t\t\t\t\t: textureLoader;\n\n\t\t\t}\n\n\t\t\treturn new Promise( function ( resolve, reject ) {\n\n\t\t\t\tloader.load( resolveURL( sourceURI, options.path ), resolve, undefined, reject );\n\n\t\t\t} );\n\n\t\t} ).then( function ( texture ) {\n\n\t\t\t// Clean up resources and configure Texture.\n\n\t\t\tif ( isObjectURL === true ) {\n\n\t\t\t\tURL.revokeObjectURL( sourceURI );\n\n\t\t\t}\n\n\t\t\ttexture.flipY = false;\n\n\t\t\tif ( textureDef.name !== undefined ) texture.name = textureDef.name;\n\n\t\t\t// Ignore unknown mime types, like DDS files.\n\t\t\tif ( source.mimeType in MIME_TYPE_FORMATS ) {\n\n\t\t\t\ttexture.format = MIME_TYPE_FORMATS[ source.mimeType ];\n\n\t\t\t}\n\n\t\t\tvar samplers = json.samplers || {};\n\t\t\tvar sampler = samplers[ textureDef.sampler ] || {};\n\n\t\t\ttexture.magFilter = WEBGL_FILTERS[ sampler.magFilter ] || LinearFilter;\n\t\t\ttexture.minFilter = WEBGL_FILTERS[ sampler.minFilter ] || LinearMipmapLinearFilter;\n\t\t\ttexture.wrapS = WEBGL_WRAPPINGS[ sampler.wrapS ] || RepeatWrapping;\n\t\t\ttexture.wrapT = WEBGL_WRAPPINGS[ sampler.wrapT ] || RepeatWrapping;\n\n\t\t\treturn texture;\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * Asynchronously assigns a texture to the given material parameters.\n\t * @param {Object} materialParams\n\t * @param {string} mapName\n\t * @param {Object} mapDef\n\t * @return {Promise}\n\t */\n\tGLTFParser.prototype.assignTexture = function ( materialParams, mapName, mapDef ) {\n\n\t\tvar parser = this;\n\n\t\treturn this.getDependency( 'texture', mapDef.index ).then( function ( texture ) {\n\n\t\t\tif ( ! texture.isCompressedTexture ) {\n\n\t\t\t\tswitch ( mapName ) {\n\n\t\t\t\t\tcase 'aoMap':\n\t\t\t\t\tcase 'emissiveMap':\n\t\t\t\t\tcase 'metalnessMap':\n\t\t\t\t\tcase 'normalMap':\n\t\t\t\t\tcase 'roughnessMap':\n\t\t\t\t\t\ttexture.format = RGBFormat;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( parser.extensions[ EXTENSIONS.KHR_TEXTURE_TRANSFORM ] ) {\n\n\t\t\t\tvar transform = mapDef.extensions !== undefined ? mapDef.extensions[ EXTENSIONS.KHR_TEXTURE_TRANSFORM ] : undefined;\n\n\t\t\t\tif ( transform ) {\n\n\t\t\t\t\ttexture = parser.extensions[ EXTENSIONS.KHR_TEXTURE_TRANSFORM ].extendTexture( texture, transform );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tmaterialParams[ mapName ] = texture;\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * Assigns final material to a Mesh, Line, or Points instance. The instance\n\t * already has a material (generated from the glTF material options alone)\n\t * but reuse of the same glTF material may require multiple threejs materials\n\t * to accomodate different primitive types, defines, etc. New materials will\n\t * be created if necessary, and reused from a cache.\n\t * @param  {Object3D} mesh Mesh, Line, or Points instance.\n\t */\n\tGLTFParser.prototype.assignFinalMaterial = function ( mesh ) {\n\n\t\tvar geometry = mesh.geometry;\n\t\tvar material = mesh.material;\n\t\tvar extensions = this.extensions;\n\n\t\tvar useVertexTangents = geometry.attributes.tangent !== undefined;\n\t\tvar useVertexColors = geometry.attributes.color !== undefined;\n\t\tvar useFlatShading = geometry.attributes.normal === undefined;\n\t\tvar useSkinning = mesh.isSkinnedMesh === true;\n\t\tvar useMorphTargets = Object.keys( geometry.morphAttributes ).length > 0;\n\t\tvar useMorphNormals = useMorphTargets && geometry.morphAttributes.normal !== undefined;\n\n\t\tif ( mesh.isPoints ) {\n\n\t\t\tvar cacheKey = 'PointsMaterial:' + material.uuid;\n\n\t\t\tvar pointsMaterial = this.cache.get( cacheKey );\n\n\t\t\tif ( ! pointsMaterial ) {\n\n\t\t\t\tpointsMaterial = new PointsMaterial();\n\t\t\t\tMaterial.prototype.copy.call( pointsMaterial, material );\n\t\t\t\tpointsMaterial.color.copy( material.color );\n\t\t\t\tpointsMaterial.map = material.map;\n\t\t\t\tpointsMaterial.sizeAttenuation = false; // glTF spec says points should be 1px\n\n\t\t\t\tthis.cache.add( cacheKey, pointsMaterial );\n\n\t\t\t}\n\n\t\t\tmaterial = pointsMaterial;\n\n\t\t} else if ( mesh.isLine ) {\n\n\t\t\tvar cacheKey = 'LineBasicMaterial:' + material.uuid;\n\n\t\t\tvar lineMaterial = this.cache.get( cacheKey );\n\n\t\t\tif ( ! lineMaterial ) {\n\n\t\t\t\tlineMaterial = new LineBasicMaterial();\n\t\t\t\tMaterial.prototype.copy.call( lineMaterial, material );\n\t\t\t\tlineMaterial.color.copy( material.color );\n\n\t\t\t\tthis.cache.add( cacheKey, lineMaterial );\n\n\t\t\t}\n\n\t\t\tmaterial = lineMaterial;\n\n\t\t}\n\n\t\t// Clone the material if it will be modified\n\t\tif ( useVertexTangents || useVertexColors || useFlatShading || useSkinning || useMorphTargets ) {\n\n\t\t\tvar cacheKey = 'ClonedMaterial:' + material.uuid + ':';\n\n\t\t\tif ( material.isGLTFSpecularGlossinessMaterial ) cacheKey += 'specular-glossiness:';\n\t\t\tif ( useSkinning ) cacheKey += 'skinning:';\n\t\t\tif ( useVertexTangents ) cacheKey += 'vertex-tangents:';\n\t\t\tif ( useVertexColors ) cacheKey += 'vertex-colors:';\n\t\t\tif ( useFlatShading ) cacheKey += 'flat-shading:';\n\t\t\tif ( useMorphTargets ) cacheKey += 'morph-targets:';\n\t\t\tif ( useMorphNormals ) cacheKey += 'morph-normals:';\n\n\t\t\tvar cachedMaterial = this.cache.get( cacheKey );\n\n\t\t\tif ( ! cachedMaterial ) {\n\n\t\t\t\tcachedMaterial = material.isGLTFSpecularGlossinessMaterial\n\t\t\t\t\t? extensions[ EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS ].cloneMaterial( material )\n\t\t\t\t\t: material.clone();\n\n\t\t\t\tif ( useSkinning ) cachedMaterial.skinning = true;\n\t\t\t\tif ( useVertexTangents ) cachedMaterial.vertexTangents = true;\n\t\t\t\tif ( useVertexColors ) cachedMaterial.vertexColors = VertexColors;\n\t\t\t\tif ( useFlatShading ) cachedMaterial.flatShading = true;\n\t\t\t\tif ( useMorphTargets ) cachedMaterial.morphTargets = true;\n\t\t\t\tif ( useMorphNormals ) cachedMaterial.morphNormals = true;\n\n\t\t\t\tthis.cache.add( cacheKey, cachedMaterial );\n\n\t\t\t}\n\n\t\t\tmaterial = cachedMaterial;\n\n\t\t}\n\n\t\t// workarounds for mesh and geometry\n\n\t\tif ( material.aoMap && geometry.attributes.uv2 === undefined && geometry.attributes.uv !== undefined ) {\n\n\t\t\tconsole.log( 'THREE.GLTFLoader: Duplicating UVs to support aoMap.' );\n\t\t\tgeometry.setAttribute( 'uv2', new BufferAttribute( geometry.attributes.uv.array, 2 ) );\n\n\t\t}\n\n\t\tif ( material.isGLTFSpecularGlossinessMaterial ) {\n\n\t\t\t// for GLTFSpecularGlossinessMaterial(ShaderMaterial) uniforms runtime update\n\t\t\tmesh.onBeforeRender = extensions[ EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS ].refreshUniforms;\n\n\t\t}\n\n\t\tmesh.material = material;\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#materials\n\t * @param {number} materialIndex\n\t * @return {Promise<Material>}\n\t */\n\tGLTFParser.prototype.loadMaterial = function ( materialIndex ) {\n\n\t\tvar parser = this;\n\t\tvar json = this.json;\n\t\tvar extensions = this.extensions;\n\t\tvar materialDef = json.materials[ materialIndex ];\n\n\t\tvar materialType;\n\t\tvar materialParams = {};\n\t\tvar materialExtensions = materialDef.extensions || {};\n\n\t\tvar pending = [];\n\n\t\tif ( materialExtensions[ EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS ] ) {\n\n\t\t\tvar sgExtension = extensions[ EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS ];\n\t\t\tmaterialType = sgExtension.getMaterialType();\n\t\t\tpending.push( sgExtension.extendParams( materialParams, materialDef, parser ) );\n\n\t\t} else if ( materialExtensions[ EXTENSIONS.KHR_MATERIALS_UNLIT ] ) {\n\n\t\t\tvar kmuExtension = extensions[ EXTENSIONS.KHR_MATERIALS_UNLIT ];\n\t\t\tmaterialType = kmuExtension.getMaterialType();\n\t\t\tpending.push( kmuExtension.extendParams( materialParams, materialDef, parser ) );\n\n\t\t} else {\n\n\t\t\t// Specification:\n\t\t\t// https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#metallic-roughness-material\n\n\t\t\tmaterialType = MeshStandardMaterial;\n\n\t\t\tvar metallicRoughness = materialDef.pbrMetallicRoughness || {};\n\n\t\t\tmaterialParams.color = new Color( 1.0, 1.0, 1.0 );\n\t\t\tmaterialParams.opacity = 1.0;\n\n\t\t\tif ( Array.isArray( metallicRoughness.baseColorFactor ) ) {\n\n\t\t\t\tvar array = metallicRoughness.baseColorFactor;\n\n\t\t\t\tmaterialParams.color.fromArray( array );\n\t\t\t\tmaterialParams.opacity = array[ 3 ];\n\n\t\t\t}\n\n\t\t\tif ( metallicRoughness.baseColorTexture !== undefined ) {\n\n\t\t\t\tpending.push( parser.assignTexture( materialParams, 'map', metallicRoughness.baseColorTexture ) );\n\n\t\t\t}\n\n\t\t\tmaterialParams.metalness = metallicRoughness.metallicFactor !== undefined ? metallicRoughness.metallicFactor : 1.0;\n\t\t\tmaterialParams.roughness = metallicRoughness.roughnessFactor !== undefined ? metallicRoughness.roughnessFactor : 1.0;\n\n\t\t\tif ( metallicRoughness.metallicRoughnessTexture !== undefined ) {\n\n\t\t\t\tpending.push( parser.assignTexture( materialParams, 'metalnessMap', metallicRoughness.metallicRoughnessTexture ) );\n\t\t\t\tpending.push( parser.assignTexture( materialParams, 'roughnessMap', metallicRoughness.metallicRoughnessTexture ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( materialDef.doubleSided === true ) {\n\n\t\t\tmaterialParams.side = DoubleSide;\n\n\t\t}\n\n\t\tvar alphaMode = materialDef.alphaMode || ALPHA_MODES.OPAQUE;\n\n\t\tif ( alphaMode === ALPHA_MODES.BLEND ) {\n\n\t\t\tmaterialParams.transparent = true;\n\n\t\t} else {\n\n\t\t\tmaterialParams.transparent = false;\n\n\t\t\tif ( alphaMode === ALPHA_MODES.MASK ) {\n\n\t\t\t\tmaterialParams.alphaTest = materialDef.alphaCutoff !== undefined ? materialDef.alphaCutoff : 0.5;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( materialDef.normalTexture !== undefined && materialType !== MeshBasicMaterial ) {\n\n\t\t\tpending.push( parser.assignTexture( materialParams, 'normalMap', materialDef.normalTexture ) );\n\n\t\t\tmaterialParams.normalScale = new Vector2( 1, 1 );\n\n\t\t\tif ( materialDef.normalTexture.scale !== undefined ) {\n\n\t\t\t\tmaterialParams.normalScale.set( materialDef.normalTexture.scale, materialDef.normalTexture.scale );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( materialDef.occlusionTexture !== undefined && materialType !== MeshBasicMaterial ) {\n\n\t\t\tpending.push( parser.assignTexture( materialParams, 'aoMap', materialDef.occlusionTexture ) );\n\n\t\t\tif ( materialDef.occlusionTexture.strength !== undefined ) {\n\n\t\t\t\tmaterialParams.aoMapIntensity = materialDef.occlusionTexture.strength;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( materialDef.emissiveFactor !== undefined && materialType !== MeshBasicMaterial ) {\n\n\t\t\tmaterialParams.emissive = new Color().fromArray( materialDef.emissiveFactor );\n\n\t\t}\n\n\t\tif ( materialDef.emissiveTexture !== undefined && materialType !== MeshBasicMaterial ) {\n\n\t\t\tpending.push( parser.assignTexture( materialParams, 'emissiveMap', materialDef.emissiveTexture ) );\n\n\t\t}\n\n\t\treturn Promise.all( pending ).then( function () {\n\n\t\t\tvar material;\n\n\t\t\tif ( materialType === ShaderMaterial ) {\n\n\t\t\t\tmaterial = extensions[ EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS ].createMaterial( materialParams );\n\n\t\t\t} else {\n\n\t\t\t\tmaterial = new materialType( materialParams );\n\n\t\t\t}\n\n\t\t\tif ( materialDef.name !== undefined ) material.name = materialDef.name;\n\n\t\t\t// baseColorTexture, emissiveTexture, and specularGlossinessTexture use sRGB encoding.\n\t\t\tif ( material.map ) material.map.encoding = sRGBEncoding;\n\t\t\tif ( material.emissiveMap ) material.emissiveMap.encoding = sRGBEncoding;\n\t\t\tif ( material.specularMap ) material.specularMap.encoding = sRGBEncoding;\n\n\t\t\tassignExtrasToUserData( material, materialDef );\n\n\t\t\tif ( materialDef.extensions ) addUnknownExtensionsToUserData( extensions, material, materialDef );\n\n\t\t\treturn material;\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * @param {BufferGeometry} geometry\n\t * @param {GLTF.Primitive} primitiveDef\n\t * @param {GLTFParser} parser\n\t */\n\tfunction computeBounds( geometry, primitiveDef, parser ) {\n\n\t\tvar attributes = primitiveDef.attributes;\n\n\t\tvar box = new Box3();\n\n\t\tif ( attributes.POSITION !== undefined ) {\n\n\t\t\tvar accessor = parser.json.accessors[ attributes.POSITION ];\n\t\t\tvar min = accessor.min;\n\t\t\tvar max = accessor.max;\n\n\t\t\tbox.set(\n\t\t\t\tnew Vector3( min[ 0 ], min[ 1 ], min[ 2 ] ),\n\t\t\t\tnew Vector3( max[ 0 ], max[ 1 ], max[ 2 ] ) );\n\n\t\t} else {\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tvar targets = primitiveDef.targets;\n\n\t\tif ( targets !== undefined ) {\n\n\t\t\tvar vector = new Vector3();\n\n\t\t\tfor ( var i = 0, il = targets.length; i < il; i ++ ) {\n\n\t\t\t\tvar target = targets[ i ];\n\n\t\t\t\tif ( target.POSITION !== undefined ) {\n\n\t\t\t\t\tvar accessor = parser.json.accessors[ target.POSITION ];\n\t\t\t\t\tvar min = accessor.min;\n\t\t\t\t\tvar max = accessor.max;\n\n\t\t\t\t\t// we need to get max of absolute components because target weight is [-1,1]\n\t\t\t\t\tvector.setX( Math.max( Math.abs( min[ 0 ] ), Math.abs( max[ 0 ] ) ) );\n\t\t\t\t\tvector.setY( Math.max( Math.abs( min[ 1 ] ), Math.abs( max[ 1 ] ) ) );\n\t\t\t\t\tvector.setZ( Math.max( Math.abs( min[ 2 ] ), Math.abs( max[ 2 ] ) ) );\n\n\t\t\t\t\tbox.expandByVector( vector );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tgeometry.boundingBox = box;\n\n\t\tvar sphere = new Sphere();\n\n\t\tbox.getCenter( sphere.center );\n\t\tsphere.radius = box.min.distanceTo( box.max ) / 2;\n\n\t\tgeometry.boundingSphere = sphere;\n\n\t}\n\n\t/**\n\t * @param {BufferGeometry} geometry\n\t * @param {GLTF.Primitive} primitiveDef\n\t * @param {GLTFParser} parser\n\t * @return {Promise<BufferGeometry>}\n\t */\n\tfunction addPrimitiveAttributes( geometry, primitiveDef, parser ) {\n\n\t\tvar attributes = primitiveDef.attributes;\n\n\t\tvar pending = [];\n\n\t\tfunction assignAttributeAccessor( accessorIndex, attributeName ) {\n\n\t\t\treturn parser.getDependency( 'accessor', accessorIndex )\n\t\t\t\t.then( function ( accessor ) {\n\n\t\t\t\t\tgeometry.setAttribute( attributeName, accessor );\n\n\t\t\t\t} );\n\n\t\t}\n\n\t\tfor ( var gltfAttributeName in attributes ) {\n\n\t\t\tvar threeAttributeName = ATTRIBUTES[ gltfAttributeName ] || gltfAttributeName.toLowerCase();\n\n\t\t\t// Skip attributes already provided by e.g. Draco extension.\n\t\t\tif ( threeAttributeName in geometry.attributes ) continue;\n\n\t\t\tpending.push( assignAttributeAccessor( attributes[ gltfAttributeName ], threeAttributeName ) );\n\n\t\t}\n\n\t\tif ( primitiveDef.indices !== undefined && ! geometry.index ) {\n\n\t\t\tvar accessor = parser.getDependency( 'accessor', primitiveDef.indices ).then( function ( accessor ) {\n\n\t\t\t\tgeometry.setIndex( accessor );\n\n\t\t\t} );\n\n\t\t\tpending.push( accessor );\n\n\t\t}\n\n\t\tassignExtrasToUserData( geometry, primitiveDef );\n\n\t\tcomputeBounds( geometry, primitiveDef, parser );\n\n\t\treturn Promise.all( pending ).then( function () {\n\n\t\t\treturn primitiveDef.targets !== undefined\n\t\t\t\t? addMorphTargets( geometry, primitiveDef.targets, parser )\n\t\t\t\t: geometry;\n\n\t\t} );\n\n\t}\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#geometry\n\t *\n\t * Creates BufferGeometries from primitives.\n\t *\n\t * @param {Array<GLTF.Primitive>} primitives\n\t * @return {Promise<Array<BufferGeometry>>}\n\t */\n\tGLTFParser.prototype.loadGeometries = function ( primitives ) {\n\n\t\tvar parser = this;\n\t\tvar extensions = this.extensions;\n\t\tvar cache = this.primitiveCache;\n\n\t\tfunction createDracoPrimitive( primitive ) {\n\n\t\t\treturn extensions[ EXTENSIONS.KHR_DRACO_MESH_COMPRESSION ]\n\t\t\t\t.decodePrimitive( primitive, parser )\n\t\t\t\t.then( function ( geometry ) {\n\n\t\t\t\t\treturn addPrimitiveAttributes( geometry, primitive, parser );\n\n\t\t\t\t} );\n\n\t\t}\n\n\t\tvar pending = [];\n\n\t\tfor ( var i = 0, il = primitives.length; i < il; i ++ ) {\n\n\t\t\tvar primitive = primitives[ i ];\n\t\t\tvar cacheKey = createPrimitiveKey( primitive );\n\n\t\t\t// See if we've already created this geometry\n\t\t\tvar cached = cache[ cacheKey ];\n\n\t\t\tif ( cached ) {\n\n\t\t\t\t// Use the cached geometry if it exists\n\t\t\t\tpending.push( cached.promise );\n\n\t\t\t} else {\n\n\t\t\t\tvar geometryPromise;\n\n\t\t\t\tif ( primitive.extensions && primitive.extensions[ EXTENSIONS.KHR_DRACO_MESH_COMPRESSION ] ) {\n\n\t\t\t\t\t// Use DRACO geometry if available\n\t\t\t\t\tgeometryPromise = createDracoPrimitive( primitive );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// Otherwise create a new geometry\n\t\t\t\t\tgeometryPromise = addPrimitiveAttributes( new BufferGeometry(), primitive, parser );\n\n\t\t\t\t}\n\n\t\t\t\t// Cache this geometry\n\t\t\t\tcache[ cacheKey ] = { primitive: primitive, promise: geometryPromise };\n\n\t\t\t\tpending.push( geometryPromise );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn Promise.all( pending );\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#meshes\n\t * @param {number} meshIndex\n\t * @return {Promise<Group|Mesh|SkinnedMesh>}\n\t */\n\tGLTFParser.prototype.loadMesh = function ( meshIndex ) {\n\n\t\tvar parser = this;\n\t\tvar json = this.json;\n\n\t\tvar meshDef = json.meshes[ meshIndex ];\n\t\tvar primitives = meshDef.primitives;\n\n\t\tvar pending = [];\n\n\t\tfor ( var i = 0, il = primitives.length; i < il; i ++ ) {\n\n\t\t\tvar material = primitives[ i ].material === undefined\n\t\t\t\t? createDefaultMaterial()\n\t\t\t\t: this.getDependency( 'material', primitives[ i ].material );\n\n\t\t\tpending.push( material );\n\n\t\t}\n\n\t\treturn Promise.all( pending ).then( function ( originalMaterials ) {\n\n\t\t\treturn parser.loadGeometries( primitives ).then( function ( geometries ) {\n\n\t\t\t\tvar meshes = [];\n\n\t\t\t\tfor ( var i = 0, il = geometries.length; i < il; i ++ ) {\n\n\t\t\t\t\tvar geometry = geometries[ i ];\n\t\t\t\t\tvar primitive = primitives[ i ];\n\n\t\t\t\t\t// 1. create Mesh\n\n\t\t\t\t\tvar mesh;\n\n\t\t\t\t\tvar material = originalMaterials[ i ];\n\n\t\t\t\t\tif ( primitive.mode === WEBGL_CONSTANTS.TRIANGLES ||\n\t\t\t\t\t\tprimitive.mode === WEBGL_CONSTANTS.TRIANGLE_STRIP ||\n\t\t\t\t\t\tprimitive.mode === WEBGL_CONSTANTS.TRIANGLE_FAN ||\n\t\t\t\t\t\tprimitive.mode === undefined ) {\n\n\t\t\t\t\t\t// .isSkinnedMesh isn't in glTF spec. See .markDefs()\n\t\t\t\t\t\tmesh = meshDef.isSkinnedMesh === true\n\t\t\t\t\t\t\t? new SkinnedMesh( geometry, material )\n\t\t\t\t\t\t\t: new Mesh( geometry, material );\n\n\t\t\t\t\t\tif ( mesh.isSkinnedMesh === true && ! mesh.geometry.attributes.skinWeight.normalized ) {\n\n\t\t\t\t\t\t\t// we normalize floating point skin weight array to fix malformed assets (see #15319)\n\t\t\t\t\t\t\t// it's important to skip this for non-float32 data since normalizeSkinWeights assumes non-normalized inputs\n\t\t\t\t\t\t\tmesh.normalizeSkinWeights();\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( primitive.mode === WEBGL_CONSTANTS.TRIANGLE_STRIP ) {\n\n\t\t\t\t\t\t\tmesh.drawMode = TriangleStripDrawMode;\n\n\t\t\t\t\t\t} else if ( primitive.mode === WEBGL_CONSTANTS.TRIANGLE_FAN ) {\n\n\t\t\t\t\t\t\tmesh.drawMode = TriangleFanDrawMode;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else if ( primitive.mode === WEBGL_CONSTANTS.LINES ) {\n\n\t\t\t\t\t\tmesh = new LineSegments( geometry, material );\n\n\t\t\t\t\t} else if ( primitive.mode === WEBGL_CONSTANTS.LINE_STRIP ) {\n\n\t\t\t\t\t\tmesh = new Line( geometry, material );\n\n\t\t\t\t\t} else if ( primitive.mode === WEBGL_CONSTANTS.LINE_LOOP ) {\n\n\t\t\t\t\t\tmesh = new LineLoop( geometry, material );\n\n\t\t\t\t\t} else if ( primitive.mode === WEBGL_CONSTANTS.POINTS ) {\n\n\t\t\t\t\t\tmesh = new Points( geometry, material );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthrow new Error( 'THREE.GLTFLoader: Primitive mode unsupported: ' + primitive.mode );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( Object.keys( mesh.geometry.morphAttributes ).length > 0 ) {\n\n\t\t\t\t\t\tupdateMorphTargets( mesh, meshDef );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tmesh.name = meshDef.name || ( 'mesh_' + meshIndex );\n\n\t\t\t\t\tif ( geometries.length > 1 ) mesh.name += '_' + i;\n\n\t\t\t\t\tassignExtrasToUserData( mesh, meshDef );\n\n\t\t\t\t\tparser.assignFinalMaterial( mesh );\n\n\t\t\t\t\tmeshes.push( mesh );\n\n\t\t\t\t}\n\n\t\t\t\tif ( meshes.length === 1 ) {\n\n\t\t\t\t\treturn meshes[ 0 ];\n\n\t\t\t\t}\n\n\t\t\t\tvar group = new Group();\n\n\t\t\t\tfor ( var i = 0, il = meshes.length; i < il; i ++ ) {\n\n\t\t\t\t\tgroup.add( meshes[ i ] );\n\n\t\t\t\t}\n\n\t\t\t\treturn group;\n\n\t\t\t} );\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#cameras\n\t * @param {number} cameraIndex\n\t * @return {Promise<THREE.Camera>}\n\t */\n\tGLTFParser.prototype.loadCamera = function ( cameraIndex ) {\n\n\t\tvar camera;\n\t\tvar cameraDef = this.json.cameras[ cameraIndex ];\n\t\tvar params = cameraDef[ cameraDef.type ];\n\n\t\tif ( ! params ) {\n\n\t\t\tconsole.warn( 'THREE.GLTFLoader: Missing camera parameters.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( cameraDef.type === 'perspective' ) {\n\n\t\t\tcamera = new PerspectiveCamera( _Math.radToDeg( params.yfov ), params.aspectRatio || 1, params.znear || 1, params.zfar || 2e6 );\n\n\t\t} else if ( cameraDef.type === 'orthographic' ) {\n\n\t\t\tcamera = new OrthographicCamera( params.xmag / - 2, params.xmag / 2, params.ymag / 2, params.ymag / - 2, params.znear, params.zfar );\n\n\t\t}\n\n\t\tif ( cameraDef.name !== undefined ) camera.name = cameraDef.name;\n\n\t\tassignExtrasToUserData( camera, cameraDef );\n\n\t\treturn Promise.resolve( camera );\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#skins\n\t * @param {number} skinIndex\n\t * @return {Promise<Object>}\n\t */\n\tGLTFParser.prototype.loadSkin = function ( skinIndex ) {\n\n\t\tvar skinDef = this.json.skins[ skinIndex ];\n\n\t\tvar skinEntry = { joints: skinDef.joints };\n\n\t\tif ( skinDef.inverseBindMatrices === undefined ) {\n\n\t\t\treturn Promise.resolve( skinEntry );\n\n\t\t}\n\n\t\treturn this.getDependency( 'accessor', skinDef.inverseBindMatrices ).then( function ( accessor ) {\n\n\t\t\tskinEntry.inverseBindMatrices = accessor;\n\n\t\t\treturn skinEntry;\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#animations\n\t * @param {number} animationIndex\n\t * @return {Promise<AnimationClip>}\n\t */\n\tGLTFParser.prototype.loadAnimation = function ( animationIndex ) {\n\n\t\tvar json = this.json;\n\n\t\tvar animationDef = json.animations[ animationIndex ];\n\n\t\tvar pendingNodes = [];\n\t\tvar pendingInputAccessors = [];\n\t\tvar pendingOutputAccessors = [];\n\t\tvar pendingSamplers = [];\n\t\tvar pendingTargets = [];\n\n\t\tfor ( var i = 0, il = animationDef.channels.length; i < il; i ++ ) {\n\n\t\t\tvar channel = animationDef.channels[ i ];\n\t\t\tvar sampler = animationDef.samplers[ channel.sampler ];\n\t\t\tvar target = channel.target;\n\t\t\tvar name = target.node !== undefined ? target.node : target.id; // NOTE: target.id is deprecated.\n\t\t\tvar input = animationDef.parameters !== undefined ? animationDef.parameters[ sampler.input ] : sampler.input;\n\t\t\tvar output = animationDef.parameters !== undefined ? animationDef.parameters[ sampler.output ] : sampler.output;\n\n\t\t\tpendingNodes.push( this.getDependency( 'node', name ) );\n\t\t\tpendingInputAccessors.push( this.getDependency( 'accessor', input ) );\n\t\t\tpendingOutputAccessors.push( this.getDependency( 'accessor', output ) );\n\t\t\tpendingSamplers.push( sampler );\n\t\t\tpendingTargets.push( target );\n\n\t\t}\n\n\t\treturn Promise.all( [\n\n\t\t\tPromise.all( pendingNodes ),\n\t\t\tPromise.all( pendingInputAccessors ),\n\t\t\tPromise.all( pendingOutputAccessors ),\n\t\t\tPromise.all( pendingSamplers ),\n\t\t\tPromise.all( pendingTargets )\n\n\t\t] ).then( function ( dependencies ) {\n\n\t\t\tvar nodes = dependencies[ 0 ];\n\t\t\tvar inputAccessors = dependencies[ 1 ];\n\t\t\tvar outputAccessors = dependencies[ 2 ];\n\t\t\tvar samplers = dependencies[ 3 ];\n\t\t\tvar targets = dependencies[ 4 ];\n\n\t\t\tvar tracks = [];\n\n\t\t\tfor ( var i = 0, il = nodes.length; i < il; i ++ ) {\n\n\t\t\t\tvar node = nodes[ i ];\n\t\t\t\tvar inputAccessor = inputAccessors[ i ];\n\t\t\t\tvar outputAccessor = outputAccessors[ i ];\n\t\t\t\tvar sampler = samplers[ i ];\n\t\t\t\tvar target = targets[ i ];\n\n\t\t\t\tif ( node === undefined ) continue;\n\n\t\t\t\tnode.updateMatrix();\n\t\t\t\tnode.matrixAutoUpdate = true;\n\n\t\t\t\tvar TypedKeyframeTrack;\n\n\t\t\t\tswitch ( PATH_PROPERTIES[ target.path ] ) {\n\n\t\t\t\t\tcase PATH_PROPERTIES.weights:\n\n\t\t\t\t\t\tTypedKeyframeTrack = NumberKeyframeTrack;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase PATH_PROPERTIES.rotation:\n\n\t\t\t\t\t\tTypedKeyframeTrack = QuaternionKeyframeTrack;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase PATH_PROPERTIES.position:\n\t\t\t\t\tcase PATH_PROPERTIES.scale:\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tTypedKeyframeTrack = VectorKeyframeTrack;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t\tvar targetName = node.name ? node.name : node.uuid;\n\n\t\t\t\tvar interpolation = sampler.interpolation !== undefined ? INTERPOLATION[ sampler.interpolation ] : InterpolateLinear;\n\n\t\t\t\tvar targetNames = [];\n\n\t\t\t\tif ( PATH_PROPERTIES[ target.path ] === PATH_PROPERTIES.weights ) {\n\n\t\t\t\t\t// Node may be a Group (glTF mesh with several primitives) or a Mesh.\n\t\t\t\t\tnode.traverse( function ( object ) {\n\n\t\t\t\t\t\tif ( object.isMesh === true && object.morphTargetInfluences ) {\n\n\t\t\t\t\t\t\ttargetNames.push( object.name ? object.name : object.uuid );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} );\n\n\t\t\t\t} else {\n\n\t\t\t\t\ttargetNames.push( targetName );\n\n\t\t\t\t}\n\n\t\t\t\tvar outputArray = outputAccessor.array;\n\n\t\t\t\tif ( outputAccessor.normalized ) {\n\n\t\t\t\t\tvar scale;\n\n\t\t\t\t\tif ( outputArray.constructor === Int8Array ) {\n\n\t\t\t\t\t\tscale = 1 / 127;\n\n\t\t\t\t\t} else if ( outputArray.constructor === Uint8Array ) {\n\n\t\t\t\t\t\tscale = 1 / 255;\n\n\t\t\t\t\t} else if ( outputArray.constructor == Int16Array ) {\n\n\t\t\t\t\t\tscale = 1 / 32767;\n\n\t\t\t\t\t} else if ( outputArray.constructor === Uint16Array ) {\n\n\t\t\t\t\t\tscale = 1 / 65535;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthrow new Error( 'THREE.GLTFLoader: Unsupported output accessor component type.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tvar scaled = new Float32Array( outputArray.length );\n\n\t\t\t\t\tfor ( var j = 0, jl = outputArray.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\tscaled[ j ] = outputArray[ j ] * scale;\n\n\t\t\t\t\t}\n\n\t\t\t\t\toutputArray = scaled;\n\n\t\t\t\t}\n\n\t\t\t\tfor ( var j = 0, jl = targetNames.length; j < jl; j ++ ) {\n\n\t\t\t\t\tvar track = new TypedKeyframeTrack(\n\t\t\t\t\t\ttargetNames[ j ] + '.' + PATH_PROPERTIES[ target.path ],\n\t\t\t\t\t\tinputAccessor.array,\n\t\t\t\t\t\toutputArray,\n\t\t\t\t\t\tinterpolation\n\t\t\t\t\t);\n\n\t\t\t\t\t// Override interpolation with custom factory method.\n\t\t\t\t\tif ( sampler.interpolation === 'CUBICSPLINE' ) {\n\n\t\t\t\t\t\ttrack.createInterpolant = function InterpolantFactoryMethodGLTFCubicSpline( result ) {\n\n\t\t\t\t\t\t\t// A CUBICSPLINE keyframe in glTF has three output values for each input value,\n\t\t\t\t\t\t\t// representing inTangent, splineVertex, and outTangent. As a result, track.getValueSize()\n\t\t\t\t\t\t\t// must be divided by three to get the interpolant's sampleSize argument.\n\n\t\t\t\t\t\t\treturn new GLTFCubicSplineInterpolant( this.times, this.values, this.getValueSize() / 3, result );\n\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\t// Mark as CUBICSPLINE. `track.getInterpolation()` doesn't support custom interpolants.\n\t\t\t\t\t\ttrack.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline = true;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttracks.push( track );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar name = animationDef.name !== undefined ? animationDef.name : 'animation_' + animationIndex;\n\n\t\t\treturn new AnimationClip( name, undefined, tracks );\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#nodes-and-hierarchy\n\t * @param {number} nodeIndex\n\t * @return {Promise<Object3D>}\n\t */\n\tGLTFParser.prototype.loadNode = function ( nodeIndex ) {\n\n\t\tvar json = this.json;\n\t\tvar extensions = this.extensions;\n\t\tvar parser = this;\n\n\t\tvar meshReferences = json.meshReferences;\n\t\tvar meshUses = json.meshUses;\n\n\t\tvar nodeDef = json.nodes[ nodeIndex ];\n\n\t\treturn ( function () {\n\n\t\t\tvar pending = [];\n\n\t\t\tif ( nodeDef.mesh !== undefined ) {\n\n\t\t\t\tpending.push( parser.getDependency( 'mesh', nodeDef.mesh ).then( function ( mesh ) {\n\n\t\t\t\t\tvar node;\n\n\t\t\t\t\tif ( meshReferences[ nodeDef.mesh ] > 1 ) {\n\n\t\t\t\t\t\tvar instanceNum = meshUses[ nodeDef.mesh ] ++;\n\n\t\t\t\t\t\tnode = mesh.clone();\n\t\t\t\t\t\tnode.name += '_instance_' + instanceNum;\n\n\t\t\t\t\t\t// onBeforeRender copy for Specular-Glossiness\n\t\t\t\t\t\tnode.onBeforeRender = mesh.onBeforeRender;\n\n\t\t\t\t\t\tfor ( var i = 0, il = node.children.length; i < il; i ++ ) {\n\n\t\t\t\t\t\t\tnode.children[ i ].name += '_instance_' + instanceNum;\n\t\t\t\t\t\t\tnode.children[ i ].onBeforeRender = mesh.children[ i ].onBeforeRender;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tnode = mesh;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// if weights are provided on the node, override weights on the mesh.\n\t\t\t\t\tif ( nodeDef.weights !== undefined ) {\n\n\t\t\t\t\t\tnode.traverse( function ( o ) {\n\n\t\t\t\t\t\t\tif ( ! o.isMesh ) return;\n\n\t\t\t\t\t\t\tfor ( var i = 0, il = nodeDef.weights.length; i < il; i ++ ) {\n\n\t\t\t\t\t\t\t\to.morphTargetInfluences[ i ] = nodeDef.weights[ i ];\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} );\n\n\t\t\t\t\t}\n\n\t\t\t\t\treturn node;\n\n\t\t\t\t} ) );\n\n\t\t\t}\n\n\t\t\tif ( nodeDef.camera !== undefined ) {\n\n\t\t\t\tpending.push( parser.getDependency( 'camera', nodeDef.camera ) );\n\n\t\t\t}\n\n\t\t\tif ( nodeDef.extensions\n\t\t\t\t&& nodeDef.extensions[ EXTENSIONS.KHR_LIGHTS_PUNCTUAL ]\n\t\t\t\t&& nodeDef.extensions[ EXTENSIONS.KHR_LIGHTS_PUNCTUAL ].light !== undefined ) {\n\n\t\t\t\tpending.push( parser.getDependency( 'light', nodeDef.extensions[ EXTENSIONS.KHR_LIGHTS_PUNCTUAL ].light ) );\n\n\t\t\t}\n\n\t\t\treturn Promise.all( pending );\n\n\t\t}() ).then( function ( objects ) {\n\n\t\t\tvar node;\n\n\t\t\t// .isBone isn't in glTF spec. See .markDefs\n\t\t\tif ( nodeDef.isBone === true ) {\n\n\t\t\t\tnode = new Bone();\n\n\t\t\t} else if ( objects.length > 1 ) {\n\n\t\t\t\tnode = new Group();\n\n\t\t\t} else if ( objects.length === 1 ) {\n\n\t\t\t\tnode = objects[ 0 ];\n\n\t\t\t} else {\n\n\t\t\t\tnode = new Object3D();\n\n\t\t\t}\n\n\t\t\tif ( node !== objects[ 0 ] ) {\n\n\t\t\t\tfor ( var i = 0, il = objects.length; i < il; i ++ ) {\n\n\t\t\t\t\tnode.add( objects[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( nodeDef.name !== undefined ) {\n\n\t\t\t\tnode.userData.name = nodeDef.name;\n\t\t\t\tnode.name = PropertyBinding.sanitizeNodeName( nodeDef.name );\n\n\t\t\t}\n\n\t\t\tassignExtrasToUserData( node, nodeDef );\n\n\t\t\tif ( nodeDef.extensions ) addUnknownExtensionsToUserData( extensions, node, nodeDef );\n\n\t\t\tif ( nodeDef.matrix !== undefined ) {\n\n\t\t\t\tvar matrix = new Matrix4();\n\t\t\t\tmatrix.fromArray( nodeDef.matrix );\n\t\t\t\tnode.applyMatrix( matrix );\n\n\t\t\t} else {\n\n\t\t\t\tif ( nodeDef.translation !== undefined ) {\n\n\t\t\t\t\tnode.position.fromArray( nodeDef.translation );\n\n\t\t\t\t}\n\n\t\t\t\tif ( nodeDef.rotation !== undefined ) {\n\n\t\t\t\t\tnode.quaternion.fromArray( nodeDef.rotation );\n\n\t\t\t\t}\n\n\t\t\t\tif ( nodeDef.scale !== undefined ) {\n\n\t\t\t\t\tnode.scale.fromArray( nodeDef.scale );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn node;\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#scenes\n\t * @param {number} sceneIndex\n\t * @return {Promise<Scene>}\n\t */\n\tGLTFParser.prototype.loadScene = function () {\n\n\t\t// scene node hierachy builder\n\n\t\tfunction buildNodeHierachy( nodeId, parentObject, json, parser ) {\n\n\t\t\tvar nodeDef = json.nodes[ nodeId ];\n\n\t\t\treturn parser.getDependency( 'node', nodeId ).then( function ( node ) {\n\n\t\t\t\tif ( nodeDef.skin === undefined ) return node;\n\n\t\t\t\t// build skeleton here as well\n\n\t\t\t\tvar skinEntry;\n\n\t\t\t\treturn parser.getDependency( 'skin', nodeDef.skin ).then( function ( skin ) {\n\n\t\t\t\t\tskinEntry = skin;\n\n\t\t\t\t\tvar pendingJoints = [];\n\n\t\t\t\t\tfor ( var i = 0, il = skinEntry.joints.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tpendingJoints.push( parser.getDependency( 'node', skinEntry.joints[ i ] ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t\treturn Promise.all( pendingJoints );\n\n\t\t\t\t} ).then( function ( jointNodes ) {\n\n\t\t\t\t\tnode.traverse( function ( mesh ) {\n\n\t\t\t\t\t\tif ( ! mesh.isMesh ) return;\n\n\t\t\t\t\t\tvar bones = [];\n\t\t\t\t\t\tvar boneInverses = [];\n\n\t\t\t\t\t\tfor ( var j = 0, jl = jointNodes.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\t\tvar jointNode = jointNodes[ j ];\n\n\t\t\t\t\t\t\tif ( jointNode ) {\n\n\t\t\t\t\t\t\t\tbones.push( jointNode );\n\n\t\t\t\t\t\t\t\tvar mat = new Matrix4();\n\n\t\t\t\t\t\t\t\tif ( skinEntry.inverseBindMatrices !== undefined ) {\n\n\t\t\t\t\t\t\t\t\tmat.fromArray( skinEntry.inverseBindMatrices.array, j * 16 );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tboneInverses.push( mat );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tconsole.warn( 'THREE.GLTFLoader: Joint \"%s\" could not be found.', skinEntry.joints[ j ] );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tmesh.bind( new Skeleton( bones, boneInverses ), mesh.matrixWorld );\n\n\t\t\t\t\t} );\n\n\t\t\t\t\treturn node;\n\n\t\t\t\t} );\n\n\t\t\t} ).then( function ( node ) {\n\n\t\t\t\t// build node hierachy\n\n\t\t\t\tparentObject.add( node );\n\n\t\t\t\tvar pending = [];\n\n\t\t\t\tif ( nodeDef.children ) {\n\n\t\t\t\t\tvar children = nodeDef.children;\n\n\t\t\t\t\tfor ( var i = 0, il = children.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tvar child = children[ i ];\n\t\t\t\t\t\tpending.push( buildNodeHierachy( child, node, json, parser ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn Promise.all( pending );\n\n\t\t\t} );\n\n\t\t}\n\n\t\treturn function loadScene( sceneIndex ) {\n\n\t\t\tvar json = this.json;\n\t\t\tvar extensions = this.extensions;\n\t\t\tvar sceneDef = this.json.scenes[ sceneIndex ];\n\t\t\tvar parser = this;\n\n\t\t\tvar scene = new Scene();\n\t\t\tif ( sceneDef.name !== undefined ) scene.name = sceneDef.name;\n\n\t\t\tassignExtrasToUserData( scene, sceneDef );\n\n\t\t\tif ( sceneDef.extensions ) addUnknownExtensionsToUserData( extensions, scene, sceneDef );\n\n\t\t\tvar nodeIds = sceneDef.nodes || [];\n\n\t\t\tvar pending = [];\n\n\t\t\tfor ( var i = 0, il = nodeIds.length; i < il; i ++ ) {\n\n\t\t\t\tpending.push( buildNodeHierachy( nodeIds[ i ], scene, json, parser ) );\n\n\t\t\t}\n\n\t\t\treturn Promise.all( pending ).then( function () {\n\n\t\t\t\treturn scene;\n\n\t\t\t} );\n\n\t\t};\n\n\t}();\n\n\treturn GLTFLoader;\n\n} )();\n\nexport { GLTFLoader };\n"],"names":["GLTFLoader","manager","Loader","call","this","dracoLoader","ddsLoader","GLTFRegistry","objects","get","key","add","object","remove","removeAll","prototype","Object","assign","create","constructor","load","url","onLoad","onProgress","onError","resourcePath","scope","path","LoaderUtils","extractUrlBase","itemStart","_onError","e","console","error","itemError","itemEnd","loader","FileLoader","setPath","setResponseType","crossOrigin","setWithCredentials","data","parse","gltf","setDRACOLoader","setDDSLoader","content","extensions","decodeText","Uint8Array","BINARY_EXTENSION_HEADER_MAGIC","EXTENSIONS","KHR_BINARY_GLTF","GLTFBinaryExtension","json","JSON","undefined","asset","version","Error","extensionsUsed","i","length","extensionName","extensionsRequired","KHR_LIGHTS_PUNCTUAL","GLTFLightsExtension","KHR_MATERIALS_UNLIT","GLTFMaterialsUnlitExtension","KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS","GLTFMaterialsPbrSpecularGlossinessExtension","KHR_DRACO_MESH_COMPRESSION","GLTFDracoMeshCompressionExtension","MSFT_TEXTURE_DDS","GLTFTextureDDSExtension","KHR_TEXTURE_TRANSFORM","GLTFTextureTransformExtension","KHR_MESH_QUANTIZATION","GLTFMeshQuantizationExtension","indexOf","warn","GLTFParser","name","extension","lightDefs","lights","loadLight","lightIndex","lightNode","lightDef","color","Color","fromArray","range","type","DirectionalLight","target","position","set","PointLight","distance","SpotLight","spot","innerConeAngle","outerConeAngle","Math","PI","angle","penumbra","decay","intensity","Promise","resolve","getMaterialType","MeshBasicMaterial","extendParams","materialParams","materialDef","parser","pending","opacity","metallicRoughness","pbrMetallicRoughness","Array","isArray","baseColorFactor","array","baseColorTexture","push","assignTexture","all","BINARY_EXTENSION_HEADER_LENGTH","BINARY_EXTENSION_CHUNK_TYPES","BIN","body","headerView","DataView","header","magic","slice","getUint32","chunkView","chunkIndex","byteLength","chunkLength","chunkType","contentArray","byteOffset","specularGlossinessParams","ShaderMaterial","pbrSpecularGlossiness","shader","ShaderLib","uniforms","UniformsUtils","clone","specularMapParsFragmentChunk","join","glossinessMapParsFragmentChunk","specularMapFragmentChunk","glossinessMapFragmentChunk","lightPhysicalFragmentChunk","fragmentShader","replace","roughness","metalness","roughnessMap","metalnessMap","specular","value","setHex","glossiness","specularMap","glossinessMap","vertexShader","defines","diffuseFactor","diffuseTexture","emissive","glossinessFactor","specularFactor","specularGlossinessTexture","specGlossMapDef","createMaterial","params","material","fog","transparent","isGLTFSpecularGlossinessMaterial","map","lightMap","lightMapIntensity","aoMap","aoMapIntensity","emissiveIntensity","emissiveMap","bumpMap","bumpScale","normalMap","normalScale","displacementMap","displacementScale","displacementBias","alphaMap","envMap","envMapIntensity","refractionRatio","derivatives","cloneMaterial","source","il","isColor","refreshUniforms","renderer","scene","camera","geometry","uvScaleMap","diffuse","copy","multiplyScalar","isWebGLRenderTarget","texture","matrixAutoUpdate","updateMatrix","uvTransform","matrix","flipEnvMap","isCubeTexture","reflectivity","maxMipLevel","properties","__maxMipLevel","USE_GLOSSINESSMAP","USE_ROUGHNESSMAP","GLTFCubicSplineInterpolant","parameterPositions","sampleValues","sampleSize","resultBuffer","Interpolant","decodePrimitive","primitive","bufferViewIndex","bufferView","gltfAttributeMap","attributes","threeAttributeMap","attributeNormalizedMap","attributeTypeMap","attributeName","threeAttributeName","ATTRIBUTES","toLowerCase","accessorDef","accessors","componentType","WEBGL_COMPONENT_TYPES","normalized","getDependency","then","decodeDracoFile","attribute","extendTexture","transform","offset","rotation","scale","repeat","texCoord","needsUpdate","copySampleValue_","index","result","values","valueSize","beforeStart_","afterEnd_","interpolate_","i1","t0","t","t1","stride","stride2","stride3","td","p","pp","ppp","offset1","offset0","s2","s3","s0","s1","p0","m0","p1","m1","defaultMaterial","WEBGL_CONSTANTS","Int8Array","Int16Array","Uint16Array","Uint32Array","Float32Array","WEBGL_FILTERS","NearestFilter","LinearFilter","NearestMipmapNearestFilter","LinearMipmapNearestFilter","NearestMipmapLinearFilter","LinearMipmapLinearFilter","WEBGL_WRAPPINGS","ClampToEdgeWrapping","MirroredRepeatWrapping","RepeatWrapping","WEBGL_TYPE_SIZES","POSITION","NORMAL","TANGENT","TEXCOORD_0","TEXCOORD_1","COLOR_0","WEIGHTS_0","JOINTS_0","PATH_PROPERTIES","translation","weights","INTERPOLATION","CUBICSPLINE","LINEAR","InterpolateLinear","STEP","InterpolateDiscrete","ALPHA_MODES","MIME_TYPE_FORMATS","RGBAFormat","RGBFormat","resolveURL","test","addUnknownExtensionsToUserData","knownExtensions","objectDef","userData","gltfExtensions","assignExtrasToUserData","gltfDef","extras","_typeof","updateMorphTargets","mesh","meshDef","morphTargetInfluences","targetNames","morphTargetDictionary","createAttributesKey","attributesKey","keys","sort","options","cache","primitiveCache","textureLoader","TextureLoader","setCrossOrigin","fileLoader","addPrimitiveAttributes","primitiveDef","assignAttributeAccessor","accessorIndex","accessor","setAttribute","gltfAttributeName","indices","setIndex","box","Box3","min","max","Vector3","targets","vector","setX","abs","setY","setZ","expandByVector","boundingBox","sphere","Sphere","getCenter","center","radius","distanceTo","boundingSphere","computeBounds","hasMorphPosition","hasMorphNormal","pendingPositionAccessors","pendingNormalAccessors","pendingAccessor","normal","morphPositions","morphNormals","morphAttributes","morphTargetsRelative","addMorphTargets","markDefs","getDependencies","dependencies","scenes","animations","cameras","catch","nodeDefs","nodes","skinDefs","skins","meshDefs","meshes","meshReferences","meshUses","skinIndex","skinLength","joints","isBone","nodeIndex","nodeLength","nodeDef","skin","isSkinnedMesh","cacheKey","dependency","loadScene","loadNode","loadMesh","loadAccessor","loadBufferView","loadBuffer","loadMaterial","loadTexture","loadSkin","loadAnimation","loadCamera","defs","def","bufferIndex","bufferDef","buffers","uri","reject","bufferViewDef","bufferViews","buffer","sparse","pendingBufferViews","bufferAttribute","itemSize","TypedArray","elementBytes","BYTES_PER_ELEMENT","itemBytes","byteStride","ibSlice","floor","ibCacheKey","count","ib","InterleavedBuffer","InterleavedBufferAttribute","BufferAttribute","itemSizeIndices","SCALAR","TypedArrayIndices","byteOffsetIndices","byteOffsetValues","sparseIndices","sparseValues","setW","textureIndex","URL","window","webkitURL","textureDef","textures","textureExtensions","sourceURI","images","isObjectURL","blob","Blob","mimeType","createObjectURL","getHandler","revokeObjectURL","flipY","format","sampler","samplers","magFilter","minFilter","wrapS","wrapT","mapName","mapDef","isCompressedTexture","assignFinalMaterial","useVertexTangents","tangent","useVertexColors","useFlatShading","useSkinning","useMorphTargets","useMorphNormals","isPoints","uuid","pointsMaterial","PointsMaterial","Material","sizeAttenuation","isLine","lineMaterial","LineBasicMaterial","cachedMaterial","skinning","vertexTangents","vertexColors","VertexColors","flatShading","morphTargets","uv2","uv","log","onBeforeRender","materialIndex","materialType","materials","materialExtensions","sgExtension","kmuExtension","MeshStandardMaterial","metallicFactor","roughnessFactor","metallicRoughnessTexture","doubleSided","side","DoubleSide","alphaMode","alphaTest","alphaCutoff","normalTexture","Vector2","occlusionTexture","strength","emissiveFactor","emissiveTexture","encoding","sRGBEncoding","loadGeometries","primitives","createDracoPrimitive","dracoExtension","geometryPromise","mode","cached","promise","BufferGeometry","meshIndex","depthTest","FrontSide","originalMaterials","geometries","SkinnedMesh","Mesh","skinWeight","normalizeSkinWeights","drawMode","TriangleStripDrawMode","TriangleFanDrawMode","LineSegments","Line","LineLoop","Points","group","Group","cameraIndex","cameraDef","PerspectiveCamera","_Math","radToDeg","yfov","aspectRatio","znear","zfar","OrthographicCamera","xmag","ymag","skinDef","skinEntry","inverseBindMatrices","animationIndex","animationDef","pendingNodes","pendingInputAccessors","pendingOutputAccessors","pendingSamplers","pendingTargets","channels","channel","node","id","input","parameters","output","inputAccessors","outputAccessors","tracks","inputAccessor","outputAccessor","TypedKeyframeTrack","NumberKeyframeTrack","QuaternionKeyframeTrack","VectorKeyframeTrack","targetName","interpolation","traverse","isMesh","outputArray","scaled","j","jl","track","createInterpolant","times","getValueSize","isInterpolantFactoryMethodGLTFCubicSpline","AnimationClip","instanceNum","children","o","light","Bone","Object3D","PropertyBinding","sanitizeNodeName","Matrix4","applyMatrix","quaternion","buildNodeHierachy","nodeId","parentObject","pendingJoints","jointNodes","bones","boneInverses","jointNode","mat","bind","Skeleton","matrixWorld","child","sceneIndex","sceneDef","Scene","nodeIds"],"mappings":"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"}
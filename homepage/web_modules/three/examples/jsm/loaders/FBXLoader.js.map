{"version":3,"file":"FBXLoader.js","sources":["../../../../../node_modules/three/examples/jsm/libs/inflate.module.min.js","../../../../../node_modules/three/examples/jsm/curves/NURBSUtils.js","../../../../../node_modules/three/examples/jsm/curves/NURBSCurve.js","../../../../../node_modules/three/examples/jsm/loaders/FBXLoader.js"],"sourcesContent":["/** @license zlib.js 2012 - imaya [ https://github.com/imaya/zlib.js ] The MIT License */var mod={}, l=void 0,aa=mod;function r(c,d){var a=c.split(\".\"),b=aa;!(a[0]in b)&&b.execScript&&b.execScript(\"var \"+a[0]);for(var e;a.length&&(e=a.shift());)!a.length&&d!==l?b[e]=d:b=b[e]?b[e]:b[e]={}};var t=\"undefined\"!==typeof Uint8Array&&\"undefined\"!==typeof Uint16Array&&\"undefined\"!==typeof Uint32Array&&\"undefined\"!==typeof DataView;function v(c){var d=c.length,a=0,b=Number.POSITIVE_INFINITY,e,f,g,h,k,m,n,p,s,x;for(p=0;p<d;++p)c[p]>a&&(a=c[p]),c[p]<b&&(b=c[p]);e=1<<a;f=new (t?Uint32Array:Array)(e);g=1;h=0;for(k=2;g<=a;){for(p=0;p<d;++p)if(c[p]===g){m=0;n=h;for(s=0;s<g;++s)m=m<<1|n&1,n>>=1;x=g<<16|p;for(s=m;s<e;s+=k)f[s]=x;++h}++g;h<<=1;k<<=1}return[f,a,b]};function w(c,d){this.g=[];this.h=32768;this.d=this.f=this.a=this.l=0;this.input=t?new Uint8Array(c):c;this.m=!1;this.i=y;this.r=!1;if(d||!(d={}))d.index&&(this.a=d.index),d.bufferSize&&(this.h=d.bufferSize),d.bufferType&&(this.i=d.bufferType),d.resize&&(this.r=d.resize);switch(this.i){case A:this.b=32768;this.c=new (t?Uint8Array:Array)(32768+this.h+258);break;case y:this.b=0;this.c=new (t?Uint8Array:Array)(this.h);this.e=this.z;this.n=this.v;this.j=this.w;break;default:throw Error(\"invalid inflate mode\");\n}}var A=0,y=1,B={t:A,s:y};\nw.prototype.k=function(){for(;!this.m;){var c=C(this,3);c&1&&(this.m=!0);c>>>=1;switch(c){case 0:var d=this.input,a=this.a,b=this.c,e=this.b,f=d.length,g=l,h=l,k=b.length,m=l;this.d=this.f=0;if(a+1>=f)throw Error(\"invalid uncompressed block header: LEN\");g=d[a++]|d[a++]<<8;if(a+1>=f)throw Error(\"invalid uncompressed block header: NLEN\");h=d[a++]|d[a++]<<8;if(g===~h)throw Error(\"invalid uncompressed block header: length verify\");if(a+g>d.length)throw Error(\"input buffer is broken\");switch(this.i){case A:for(;e+\ng>b.length;){m=k-e;g-=m;if(t)b.set(d.subarray(a,a+m),e),e+=m,a+=m;else for(;m--;)b[e++]=d[a++];this.b=e;b=this.e();e=this.b}break;case y:for(;e+g>b.length;)b=this.e({p:2});break;default:throw Error(\"invalid inflate mode\");}if(t)b.set(d.subarray(a,a+g),e),e+=g,a+=g;else for(;g--;)b[e++]=d[a++];this.a=a;this.b=e;this.c=b;break;case 1:this.j(ba,ca);break;case 2:for(var n=C(this,5)+257,p=C(this,5)+1,s=C(this,4)+4,x=new (t?Uint8Array:Array)(D.length),S=l,T=l,U=l,u=l,M=l,F=l,z=l,q=l,V=l,q=0;q<s;++q)x[D[q]]=\nC(this,3);if(!t){q=s;for(s=x.length;q<s;++q)x[D[q]]=0}S=v(x);u=new (t?Uint8Array:Array)(n+p);q=0;for(V=n+p;q<V;)switch(M=E(this,S),M){case 16:for(z=3+C(this,2);z--;)u[q++]=F;break;case 17:for(z=3+C(this,3);z--;)u[q++]=0;F=0;break;case 18:for(z=11+C(this,7);z--;)u[q++]=0;F=0;break;default:F=u[q++]=M}T=t?v(u.subarray(0,n)):v(u.slice(0,n));U=t?v(u.subarray(n)):v(u.slice(n));this.j(T,U);break;default:throw Error(\"unknown BTYPE: \"+c);}}return this.n()};\nvar G=[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15],D=t?new Uint16Array(G):G,H=[3,4,5,6,7,8,9,10,11,13,15,17,19,23,27,31,35,43,51,59,67,83,99,115,131,163,195,227,258,258,258],I=t?new Uint16Array(H):H,J=[0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0,0,0],K=t?new Uint8Array(J):J,L=[1,2,3,4,5,7,9,13,17,25,33,49,65,97,129,193,257,385,513,769,1025,1537,2049,3073,4097,6145,8193,12289,16385,24577],da=t?new Uint16Array(L):L,ea=[0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,\n13,13],N=t?new Uint8Array(ea):ea,O=new (t?Uint8Array:Array)(288),P,fa;P=0;for(fa=O.length;P<fa;++P)O[P]=143>=P?8:255>=P?9:279>=P?7:8;var ba=v(O),Q=new (t?Uint8Array:Array)(30),R,ga;R=0;for(ga=Q.length;R<ga;++R)Q[R]=5;var ca=v(Q);function C(c,d){for(var a=c.f,b=c.d,e=c.input,f=c.a,g=e.length,h;b<d;){if(f>=g)throw Error(\"input buffer is broken\");a|=e[f++]<<b;b+=8}h=a&(1<<d)-1;c.f=a>>>d;c.d=b-d;c.a=f;return h}\nfunction E(c,d){for(var a=c.f,b=c.d,e=c.input,f=c.a,g=e.length,h=d[0],k=d[1],m,n;b<k&&!(f>=g);)a|=e[f++]<<b,b+=8;m=h[a&(1<<k)-1];n=m>>>16;if(n>b)throw Error(\"invalid code length: \"+n);c.f=a>>n;c.d=b-n;c.a=f;return m&65535}\nw.prototype.j=function(c,d){var a=this.c,b=this.b;this.o=c;for(var e=a.length-258,f,g,h,k;256!==(f=E(this,c));)if(256>f)b>=e&&(this.b=b,a=this.e(),b=this.b),a[b++]=f;else{g=f-257;k=I[g];0<K[g]&&(k+=C(this,K[g]));f=E(this,d);h=da[f];0<N[f]&&(h+=C(this,N[f]));b>=e&&(this.b=b,a=this.e(),b=this.b);for(;k--;)a[b]=a[b++-h]}for(;8<=this.d;)this.d-=8,this.a--;this.b=b};\nw.prototype.w=function(c,d){var a=this.c,b=this.b;this.o=c;for(var e=a.length,f,g,h,k;256!==(f=E(this,c));)if(256>f)b>=e&&(a=this.e(),e=a.length),a[b++]=f;else{g=f-257;k=I[g];0<K[g]&&(k+=C(this,K[g]));f=E(this,d);h=da[f];0<N[f]&&(h+=C(this,N[f]));b+k>e&&(a=this.e(),e=a.length);for(;k--;)a[b]=a[b++-h]}for(;8<=this.d;)this.d-=8,this.a--;this.b=b};\nw.prototype.e=function(){var c=new (t?Uint8Array:Array)(this.b-32768),d=this.b-32768,a,b,e=this.c;if(t)c.set(e.subarray(32768,c.length));else{a=0;for(b=c.length;a<b;++a)c[a]=e[a+32768]}this.g.push(c);this.l+=c.length;if(t)e.set(e.subarray(d,d+32768));else for(a=0;32768>a;++a)e[a]=e[d+a];this.b=32768;return e};\nw.prototype.z=function(c){var d,a=this.input.length/this.a+1|0,b,e,f,g=this.input,h=this.c;c&&(\"number\"===typeof c.p&&(a=c.p),\"number\"===typeof c.u&&(a+=c.u));2>a?(b=(g.length-this.a)/this.o[2],f=258*(b/2)|0,e=f<h.length?h.length+f:h.length<<1):e=h.length*a;t?(d=new Uint8Array(e),d.set(h)):d=h;return this.c=d};\nw.prototype.n=function(){var c=0,d=this.c,a=this.g,b,e=new (t?Uint8Array:Array)(this.l+(this.b-32768)),f,g,h,k;if(0===a.length)return t?this.c.subarray(32768,this.b):this.c.slice(32768,this.b);f=0;for(g=a.length;f<g;++f){b=a[f];h=0;for(k=b.length;h<k;++h)e[c++]=b[h]}f=32768;for(g=this.b;f<g;++f)e[c++]=d[f];this.g=[];return this.buffer=e};\nw.prototype.v=function(){var c,d=this.b;t?this.r?(c=new Uint8Array(d),c.set(this.c.subarray(0,d))):c=this.c.subarray(0,d):(this.c.length>d&&(this.c.length=d),c=this.c);return this.buffer=c};function W(c,d){var a,b;this.input=c;this.a=0;if(d||!(d={}))d.index&&(this.a=d.index),d.verify&&(this.A=d.verify);a=c[this.a++];b=c[this.a++];switch(a&15){case ha:this.method=ha;break;default:throw Error(\"unsupported compression method\");}if(0!==((a<<8)+b)%31)throw Error(\"invalid fcheck flag:\"+((a<<8)+b)%31);if(b&32)throw Error(\"fdict flag is not supported\");this.q=new w(c,{index:this.a,bufferSize:d.bufferSize,bufferType:d.bufferType,resize:d.resize})}\nW.prototype.k=function(){var c=this.input,d,a;d=this.q.k();this.a=this.q.a;if(this.A){a=(c[this.a++]<<24|c[this.a++]<<16|c[this.a++]<<8|c[this.a++])>>>0;var b=d;if(\"string\"===typeof b){var e=b.split(\"\"),f,g;f=0;for(g=e.length;f<g;f++)e[f]=(e[f].charCodeAt(0)&255)>>>0;b=e}for(var h=1,k=0,m=b.length,n,p=0;0<m;){n=1024<m?1024:m;m-=n;do h+=b[p++],k+=h;while(--n);h%=65521;k%=65521}if(a!==(k<<16|h)>>>0)throw Error(\"invalid adler-32 checksum\");}return d};var ha=8;r(\"Zlib.Inflate\",W);r(\"Zlib.Inflate.prototype.decompress\",W.prototype.k);var X={ADAPTIVE:B.s,BLOCK:B.t},Y,Z,$,ia;if(Object.keys)Y=Object.keys(X);else for(Z in Y=[],$=0,X)Y[$++]=Z;$=0;for(ia=Y.length;$<ia;++$)Z=Y[$],r(\"Zlib.Inflate.BufferType.\"+Z,X[Z]);\nvar Zlib=mod.Zlib;\nexport { Zlib }","/**\n * @author renej\n * NURBS utils\n *\n * See NURBSCurve and NURBSSurface.\n *\n **/\n\nimport {\n\tVector3,\n\tVector4\n} from \"../../../build/three.module.js\";\n\n\n/**************************************************************\n *\tNURBS Utils\n **************************************************************/\n\nvar NURBSUtils = {\n\n\t/*\n\tFinds knot vector span.\n\n\tp : degree\n\tu : parametric value\n\tU : knot vector\n\n\treturns the span\n\t*/\n\tfindSpan: function ( p, u, U ) {\n\n\t\tvar n = U.length - p - 1;\n\n\t\tif ( u >= U[ n ] ) {\n\n\t\t\treturn n - 1;\n\n\t\t}\n\n\t\tif ( u <= U[ p ] ) {\n\n\t\t\treturn p;\n\n\t\t}\n\n\t\tvar low = p;\n\t\tvar high = n;\n\t\tvar mid = Math.floor( ( low + high ) / 2 );\n\n\t\twhile ( u < U[ mid ] || u >= U[ mid + 1 ] ) {\n\n\t\t\tif ( u < U[ mid ] ) {\n\n\t\t\t\thigh = mid;\n\n\t\t\t} else {\n\n\t\t\t\tlow = mid;\n\n\t\t\t}\n\n\t\t\tmid = Math.floor( ( low + high ) / 2 );\n\n\t\t}\n\n\t\treturn mid;\n\n\t},\n\n\n\t/*\n\tCalculate basis functions. See The NURBS Book, page 70, algorithm A2.2\n\n\tspan : span in which u lies\n\tu    : parametric point\n\tp    : degree\n\tU    : knot vector\n\n\treturns array[p+1] with basis functions values.\n\t*/\n\tcalcBasisFunctions: function ( span, u, p, U ) {\n\n\t\tvar N = [];\n\t\tvar left = [];\n\t\tvar right = [];\n\t\tN[ 0 ] = 1.0;\n\n\t\tfor ( var j = 1; j <= p; ++ j ) {\n\n\t\t\tleft[ j ] = u - U[ span + 1 - j ];\n\t\t\tright[ j ] = U[ span + j ] - u;\n\n\t\t\tvar saved = 0.0;\n\n\t\t\tfor ( var r = 0; r < j; ++ r ) {\n\n\t\t\t\tvar rv = right[ r + 1 ];\n\t\t\t\tvar lv = left[ j - r ];\n\t\t\t\tvar temp = N[ r ] / ( rv + lv );\n\t\t\t\tN[ r ] = saved + rv * temp;\n\t\t\t\tsaved = lv * temp;\n\n\t\t\t }\n\n\t\t\t N[ j ] = saved;\n\n\t\t }\n\n\t\t return N;\n\n\t},\n\n\n\t/*\n\tCalculate B-Spline curve points. See The NURBS Book, page 82, algorithm A3.1.\n\n\tp : degree of B-Spline\n\tU : knot vector\n\tP : control points (x, y, z, w)\n\tu : parametric point\n\n\treturns point for given u\n\t*/\n\tcalcBSplinePoint: function ( p, U, P, u ) {\n\n\t\tvar span = this.findSpan( p, u, U );\n\t\tvar N = this.calcBasisFunctions( span, u, p, U );\n\t\tvar C = new Vector4( 0, 0, 0, 0 );\n\n\t\tfor ( var j = 0; j <= p; ++ j ) {\n\n\t\t\tvar point = P[ span - p + j ];\n\t\t\tvar Nj = N[ j ];\n\t\t\tvar wNj = point.w * Nj;\n\t\t\tC.x += point.x * wNj;\n\t\t\tC.y += point.y * wNj;\n\t\t\tC.z += point.z * wNj;\n\t\t\tC.w += point.w * Nj;\n\n\t\t}\n\n\t\treturn C;\n\n\t},\n\n\n\t/*\n\tCalculate basis functions derivatives. See The NURBS Book, page 72, algorithm A2.3.\n\n\tspan : span in which u lies\n\tu    : parametric point\n\tp    : degree\n\tn    : number of derivatives to calculate\n\tU    : knot vector\n\n\treturns array[n+1][p+1] with basis functions derivatives\n\t*/\n\tcalcBasisFunctionDerivatives: function ( span, u, p, n, U ) {\n\n\t\tvar zeroArr = [];\n\t\tfor ( var i = 0; i <= p; ++ i )\n\t\t\tzeroArr[ i ] = 0.0;\n\n\t\tvar ders = [];\n\t\tfor ( var i = 0; i <= n; ++ i )\n\t\t\tders[ i ] = zeroArr.slice( 0 );\n\n\t\tvar ndu = [];\n\t\tfor ( var i = 0; i <= p; ++ i )\n\t\t\tndu[ i ] = zeroArr.slice( 0 );\n\n\t\tndu[ 0 ][ 0 ] = 1.0;\n\n\t\tvar left = zeroArr.slice( 0 );\n\t\tvar right = zeroArr.slice( 0 );\n\n\t\tfor ( var j = 1; j <= p; ++ j ) {\n\n\t\t\tleft[ j ] = u - U[ span + 1 - j ];\n\t\t\tright[ j ] = U[ span + j ] - u;\n\n\t\t\tvar saved = 0.0;\n\n\t\t\tfor ( var r = 0; r < j; ++ r ) {\n\n\t\t\t\tvar rv = right[ r + 1 ];\n\t\t\t\tvar lv = left[ j - r ];\n\t\t\t\tndu[ j ][ r ] = rv + lv;\n\n\t\t\t\tvar temp = ndu[ r ][ j - 1 ] / ndu[ j ][ r ];\n\t\t\t\tndu[ r ][ j ] = saved + rv * temp;\n\t\t\t\tsaved = lv * temp;\n\n\t\t\t}\n\n\t\t\tndu[ j ][ j ] = saved;\n\n\t\t}\n\n\t\tfor ( var j = 0; j <= p; ++ j ) {\n\n\t\t\tders[ 0 ][ j ] = ndu[ j ][ p ];\n\n\t\t}\n\n\t\tfor ( var r = 0; r <= p; ++ r ) {\n\n\t\t\tvar s1 = 0;\n\t\t\tvar s2 = 1;\n\n\t\t\tvar a = [];\n\t\t\tfor ( var i = 0; i <= p; ++ i ) {\n\n\t\t\t\ta[ i ] = zeroArr.slice( 0 );\n\n\t\t\t}\n\t\t\ta[ 0 ][ 0 ] = 1.0;\n\n\t\t\tfor ( var k = 1; k <= n; ++ k ) {\n\n\t\t\t\tvar d = 0.0;\n\t\t\t\tvar rk = r - k;\n\t\t\t\tvar pk = p - k;\n\n\t\t\t\tif ( r >= k ) {\n\n\t\t\t\t\ta[ s2 ][ 0 ] = a[ s1 ][ 0 ] / ndu[ pk + 1 ][ rk ];\n\t\t\t\t\td = a[ s2 ][ 0 ] * ndu[ rk ][ pk ];\n\n\t\t\t\t}\n\n\t\t\t\tvar j1 = ( rk >= - 1 ) ? 1 : - rk;\n\t\t\t\tvar j2 = ( r - 1 <= pk ) ? k - 1 : p - r;\n\n\t\t\t\tfor ( var j = j1; j <= j2; ++ j ) {\n\n\t\t\t\t\ta[ s2 ][ j ] = ( a[ s1 ][ j ] - a[ s1 ][ j - 1 ] ) / ndu[ pk + 1 ][ rk + j ];\n\t\t\t\t\td += a[ s2 ][ j ] * ndu[ rk + j ][ pk ];\n\n\t\t\t\t}\n\n\t\t\t\tif ( r <= pk ) {\n\n\t\t\t\t\ta[ s2 ][ k ] = - a[ s1 ][ k - 1 ] / ndu[ pk + 1 ][ r ];\n\t\t\t\t\td += a[ s2 ][ k ] * ndu[ r ][ pk ];\n\n\t\t\t\t}\n\n\t\t\t\tders[ k ][ r ] = d;\n\n\t\t\t\tvar j = s1;\n\t\t\t\ts1 = s2;\n\t\t\t\ts2 = j;\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar r = p;\n\n\t\tfor ( var k = 1; k <= n; ++ k ) {\n\n\t\t\tfor ( var j = 0; j <= p; ++ j ) {\n\n\t\t\t\tders[ k ][ j ] *= r;\n\n\t\t\t}\n\t\t\tr *= p - k;\n\n\t\t}\n\n\t\treturn ders;\n\n\t},\n\n\n\t/*\n\t\tCalculate derivatives of a B-Spline. See The NURBS Book, page 93, algorithm A3.2.\n\n\t\tp  : degree\n\t\tU  : knot vector\n\t\tP  : control points\n\t\tu  : Parametric points\n\t\tnd : number of derivatives\n\n\t\treturns array[d+1] with derivatives\n\t\t*/\n\tcalcBSplineDerivatives: function ( p, U, P, u, nd ) {\n\n\t\tvar du = nd < p ? nd : p;\n\t\tvar CK = [];\n\t\tvar span = this.findSpan( p, u, U );\n\t\tvar nders = this.calcBasisFunctionDerivatives( span, u, p, du, U );\n\t\tvar Pw = [];\n\n\t\tfor ( var i = 0; i < P.length; ++ i ) {\n\n\t\t\tvar point = P[ i ].clone();\n\t\t\tvar w = point.w;\n\n\t\t\tpoint.x *= w;\n\t\t\tpoint.y *= w;\n\t\t\tpoint.z *= w;\n\n\t\t\tPw[ i ] = point;\n\n\t\t}\n\t\tfor ( var k = 0; k <= du; ++ k ) {\n\n\t\t\tvar point = Pw[ span - p ].clone().multiplyScalar( nders[ k ][ 0 ] );\n\n\t\t\tfor ( var j = 1; j <= p; ++ j ) {\n\n\t\t\t\tpoint.add( Pw[ span - p + j ].clone().multiplyScalar( nders[ k ][ j ] ) );\n\n\t\t\t}\n\n\t\t\tCK[ k ] = point;\n\n\t\t}\n\n\t\tfor ( var k = du + 1; k <= nd + 1; ++ k ) {\n\n\t\t\tCK[ k ] = new Vector4( 0, 0, 0 );\n\n\t\t}\n\n\t\treturn CK;\n\n\t},\n\n\n\t/*\n\tCalculate \"K over I\"\n\n\treturns k!/(i!(k-i)!)\n\t*/\n\tcalcKoverI: function ( k, i ) {\n\n\t\tvar nom = 1;\n\n\t\tfor ( var j = 2; j <= k; ++ j ) {\n\n\t\t\tnom *= j;\n\n\t\t}\n\n\t\tvar denom = 1;\n\n\t\tfor ( var j = 2; j <= i; ++ j ) {\n\n\t\t\tdenom *= j;\n\n\t\t}\n\n\t\tfor ( var j = 2; j <= k - i; ++ j ) {\n\n\t\t\tdenom *= j;\n\n\t\t}\n\n\t\treturn nom / denom;\n\n\t},\n\n\n\t/*\n\tCalculate derivatives (0-nd) of rational curve. See The NURBS Book, page 127, algorithm A4.2.\n\n\tPders : result of function calcBSplineDerivatives\n\n\treturns array with derivatives for rational curve.\n\t*/\n\tcalcRationalCurveDerivatives: function ( Pders ) {\n\n\t\tvar nd = Pders.length;\n\t\tvar Aders = [];\n\t\tvar wders = [];\n\n\t\tfor ( var i = 0; i < nd; ++ i ) {\n\n\t\t\tvar point = Pders[ i ];\n\t\t\tAders[ i ] = new Vector3( point.x, point.y, point.z );\n\t\t\twders[ i ] = point.w;\n\n\t\t}\n\n\t\tvar CK = [];\n\n\t\tfor ( var k = 0; k < nd; ++ k ) {\n\n\t\t\tvar v = Aders[ k ].clone();\n\n\t\t\tfor ( var i = 1; i <= k; ++ i ) {\n\n\t\t\t\tv.sub( CK[ k - i ].clone().multiplyScalar( this.calcKoverI( k, i ) * wders[ i ] ) );\n\n\t\t\t}\n\n\t\t\tCK[ k ] = v.divideScalar( wders[ 0 ] );\n\n\t\t}\n\n\t\treturn CK;\n\n\t},\n\n\n\t/*\n\tCalculate NURBS curve derivatives. See The NURBS Book, page 127, algorithm A4.2.\n\n\tp  : degree\n\tU  : knot vector\n\tP  : control points in homogeneous space\n\tu  : parametric points\n\tnd : number of derivatives\n\n\treturns array with derivatives.\n\t*/\n\tcalcNURBSDerivatives: function ( p, U, P, u, nd ) {\n\n\t\tvar Pders = this.calcBSplineDerivatives( p, U, P, u, nd );\n\t\treturn this.calcRationalCurveDerivatives( Pders );\n\n\t},\n\n\n\t/*\n\tCalculate rational B-Spline surface point. See The NURBS Book, page 134, algorithm A4.3.\n\n\tp1, p2 : degrees of B-Spline surface\n\tU1, U2 : knot vectors\n\tP      : control points (x, y, z, w)\n\tu, v   : parametric values\n\n\treturns point for given (u, v)\n\t*/\n\tcalcSurfacePoint: function ( p, q, U, V, P, u, v, target ) {\n\n\t\tvar uspan = this.findSpan( p, u, U );\n\t\tvar vspan = this.findSpan( q, v, V );\n\t\tvar Nu = this.calcBasisFunctions( uspan, u, p, U );\n\t\tvar Nv = this.calcBasisFunctions( vspan, v, q, V );\n\t\tvar temp = [];\n\n\t\tfor ( var l = 0; l <= q; ++ l ) {\n\n\t\t\ttemp[ l ] = new Vector4( 0, 0, 0, 0 );\n\t\t\tfor ( var k = 0; k <= p; ++ k ) {\n\n\t\t\t\tvar point = P[ uspan - p + k ][ vspan - q + l ].clone();\n\t\t\t\tvar w = point.w;\n\t\t\t\tpoint.x *= w;\n\t\t\t\tpoint.y *= w;\n\t\t\t\tpoint.z *= w;\n\t\t\t\ttemp[ l ].add( point.multiplyScalar( Nu[ k ] ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar Sw = new Vector4( 0, 0, 0, 0 );\n\t\tfor ( var l = 0; l <= q; ++ l ) {\n\n\t\t\tSw.add( temp[ l ].multiplyScalar( Nv[ l ] ) );\n\n\t\t}\n\n\t\tSw.divideScalar( Sw.w );\n\t\ttarget.set( Sw.x, Sw.y, Sw.z );\n\n\t}\n\n};\n\nexport { NURBSUtils };\n","/**\n * @author renej\n * NURBS curve object\n *\n * Derives from Curve, overriding getPoint and getTangent.\n *\n * Implementation is based on (x, y [, z=0 [, w=1]]) control points with w=weight.\n *\n **/\n\nimport {\n\tCurve,\n\tVector3,\n\tVector4\n} from \"../../../build/three.module.js\";\nimport { NURBSUtils } from \"../curves/NURBSUtils.js\";\n\n\n/**************************************************************\n *\tNURBS curve\n **************************************************************/\n\nvar NURBSCurve = function ( degree, knots /* array of reals */, controlPoints /* array of Vector(2|3|4) */, startKnot /* index in knots */, endKnot /* index in knots */ ) {\n\n\tCurve.call( this );\n\n\tthis.degree = degree;\n\tthis.knots = knots;\n\tthis.controlPoints = [];\n\t// Used by periodic NURBS to remove hidden spans\n\tthis.startKnot = startKnot || 0;\n\tthis.endKnot = endKnot || ( this.knots.length - 1 );\n\tfor ( var i = 0; i < controlPoints.length; ++ i ) {\n\n\t\t// ensure Vector4 for control points\n\t\tvar point = controlPoints[ i ];\n\t\tthis.controlPoints[ i ] = new Vector4( point.x, point.y, point.z, point.w );\n\n\t}\n\n};\n\n\nNURBSCurve.prototype = Object.create( Curve.prototype );\nNURBSCurve.prototype.constructor = NURBSCurve;\n\n\nNURBSCurve.prototype.getPoint = function ( t ) {\n\n\tvar u = this.knots[ this.startKnot ] + t * ( this.knots[ this.endKnot ] - this.knots[ this.startKnot ] ); // linear mapping t->u\n\n\t// following results in (wx, wy, wz, w) homogeneous point\n\tvar hpoint = NURBSUtils.calcBSplinePoint( this.degree, this.knots, this.controlPoints, u );\n\n\tif ( hpoint.w != 1.0 ) {\n\n\t\t// project to 3D space: (wx, wy, wz, w) -> (x, y, z, 1)\n\t\thpoint.divideScalar( hpoint.w );\n\n\t}\n\n\treturn new Vector3( hpoint.x, hpoint.y, hpoint.z );\n\n};\n\n\nNURBSCurve.prototype.getTangent = function ( t ) {\n\n\tvar u = this.knots[ 0 ] + t * ( this.knots[ this.knots.length - 1 ] - this.knots[ 0 ] );\n\tvar ders = NURBSUtils.calcNURBSDerivatives( this.degree, this.knots, this.controlPoints, u, 1 );\n\tvar tangent = ders[ 1 ].clone();\n\ttangent.normalize();\n\n\treturn tangent;\n\n};\n\nexport { NURBSCurve };\n","/**\n * @author Kyle-Larson https://github.com/Kyle-Larson\n * @author Takahiro https://github.com/takahirox\n * @author Lewy Blue https://github.com/looeee\n *\n * Loader loads FBX file and generates Group representing FBX scene.\n * Requires FBX file to be >= 7.0 and in ASCII or >= 6400 in Binary format\n * Versions lower than this may load but will probably have errors\n *\n * Needs Support:\n *  Morph normals / blend shape normals\n *\n * FBX format references:\n * \thttps://wiki.blender.org/index.php/User:Mont29/Foundation/FBX_File_Structure\n * \thttp://help.autodesk.com/view/FBX/2017/ENU/?guid=__cpp_ref_index_html (C++ SDK reference)\n *\n * \tBinary format specification:\n *\t\thttps://code.blender.org/2013/08/fbx-binary-file-format-specification/\n */\n\nimport {\n\tAmbientLight,\n\tAnimationClip,\n\tBone,\n\tBufferAttribute,\n\tBufferGeometry,\n\tClampToEdgeWrapping,\n\tColor,\n\tDirectionalLight,\n\tEquirectangularReflectionMapping,\n\tEuler,\n\tFileLoader,\n\tFloat32BufferAttribute,\n\tGroup,\n\tLine,\n\tLineBasicMaterial,\n\tLoader,\n\tLoaderUtils,\n\tMath as _Math,\n\tMatrix3,\n\tMatrix4,\n\tMesh,\n\tMeshLambertMaterial,\n\tMeshPhongMaterial,\n\tNumberKeyframeTrack,\n\tObject3D,\n\tOrthographicCamera,\n\tPerspectiveCamera,\n\tPointLight,\n\tPropertyBinding,\n\tQuaternion,\n\tQuaternionKeyframeTrack,\n\tRepeatWrapping,\n\tSkeleton,\n\tSkinnedMesh,\n\tSpotLight,\n\tTexture,\n\tTextureLoader,\n\tUint16BufferAttribute,\n\tVector3,\n\tVector4,\n\tVectorKeyframeTrack,\n\tVertexColors,\n\tsRGBEncoding\n} from \"../../../build/three.module.js\";\nimport { Zlib } from \"../libs/inflate.module.min.js\";\nimport { NURBSCurve } from \"../curves/NURBSCurve.js\";\n\n\nvar FBXLoader = ( function () {\n\n\tvar fbxTree;\n\tvar connections;\n\tvar sceneGraph;\n\n\tfunction FBXLoader( manager ) {\n\n\t\tLoader.call( this, manager );\n\n\t}\n\n\tFBXLoader.prototype = Object.assign( Object.create( Loader.prototype ), {\n\n\t\tconstructor: FBXLoader,\n\n\t\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\t\tvar self = this;\n\n\t\t\tvar path = ( self.path === '' ) ? LoaderUtils.extractUrlBase( url ) : self.path;\n\n\t\t\tvar loader = new FileLoader( this.manager );\n\t\t\tloader.setPath( self.path );\n\t\t\tloader.setResponseType( 'arraybuffer' );\n\n\t\t\tloader.load( url, function ( buffer ) {\n\n\t\t\t\ttry {\n\n\t\t\t\t\tonLoad( self.parse( buffer, path ) );\n\n\t\t\t\t} catch ( error ) {\n\n\t\t\t\t\tsetTimeout( function () {\n\n\t\t\t\t\t\tif ( onError ) onError( error );\n\n\t\t\t\t\t\tself.manager.itemError( url );\n\n\t\t\t\t\t}, 0 );\n\n\t\t\t\t}\n\n\t\t\t}, onProgress, onError );\n\n\t\t},\n\n\t\tparse: function ( FBXBuffer, path ) {\n\n\t\t\tif ( isFbxFormatBinary( FBXBuffer ) ) {\n\n\t\t\t\tfbxTree = new BinaryParser().parse( FBXBuffer );\n\n\t\t\t} else {\n\n\t\t\t\tvar FBXText = convertArrayBufferToString( FBXBuffer );\n\n\t\t\t\tif ( ! isFbxFormatASCII( FBXText ) ) {\n\n\t\t\t\t\tthrow new Error( 'THREE.FBXLoader: Unknown format.' );\n\n\t\t\t\t}\n\n\t\t\t\tif ( getFbxVersion( FBXText ) < 7000 ) {\n\n\t\t\t\t\tthrow new Error( 'THREE.FBXLoader: FBX version not supported, FileVersion: ' + getFbxVersion( FBXText ) );\n\n\t\t\t\t}\n\n\t\t\t\tfbxTree = new TextParser().parse( FBXText );\n\n\t\t\t}\n\n\t\t\t// console.log( fbxTree );\n\n\t\t\tvar textureLoader = new TextureLoader( this.manager ).setPath( this.resourcePath || path ).setCrossOrigin( this.crossOrigin );\n\n\t\t\treturn new FBXTreeParser( textureLoader, this.manager ).parse( fbxTree );\n\n\t\t}\n\n\t} );\n\n\t// Parse the FBXTree object returned by the BinaryParser or TextParser and return a Group\n\tfunction FBXTreeParser( textureLoader, manager ) {\n\n\t\tthis.textureLoader = textureLoader;\n\t\tthis.manager = manager;\n\n\t}\n\n\tFBXTreeParser.prototype = {\n\n\t\tconstructor: FBXTreeParser,\n\n\t\tparse: function () {\n\n\t\t\tconnections = this.parseConnections();\n\n\t\t\tvar images = this.parseImages();\n\t\t\tvar textures = this.parseTextures( images );\n\t\t\tvar materials = this.parseMaterials( textures );\n\t\t\tvar deformers = this.parseDeformers();\n\t\t\tvar geometryMap = new GeometryParser().parse( deformers );\n\n\t\t\tthis.parseScene( deformers, geometryMap, materials );\n\n\t\t\treturn sceneGraph;\n\n\t\t},\n\n\t\t// Parses FBXTree.Connections which holds parent-child connections between objects (e.g. material -> texture, model->geometry )\n\t\t// and details the connection type\n\t\tparseConnections: function () {\n\n\t\t\tvar connectionMap = new Map();\n\n\t\t\tif ( 'Connections' in fbxTree ) {\n\n\t\t\t\tvar rawConnections = fbxTree.Connections.connections;\n\n\t\t\t\trawConnections.forEach( function ( rawConnection ) {\n\n\t\t\t\t\tvar fromID = rawConnection[ 0 ];\n\t\t\t\t\tvar toID = rawConnection[ 1 ];\n\t\t\t\t\tvar relationship = rawConnection[ 2 ];\n\n\t\t\t\t\tif ( ! connectionMap.has( fromID ) ) {\n\n\t\t\t\t\t\tconnectionMap.set( fromID, {\n\t\t\t\t\t\t\tparents: [],\n\t\t\t\t\t\t\tchildren: []\n\t\t\t\t\t\t} );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tvar parentRelationship = { ID: toID, relationship: relationship };\n\t\t\t\t\tconnectionMap.get( fromID ).parents.push( parentRelationship );\n\n\t\t\t\t\tif ( ! connectionMap.has( toID ) ) {\n\n\t\t\t\t\t\tconnectionMap.set( toID, {\n\t\t\t\t\t\t\tparents: [],\n\t\t\t\t\t\t\tchildren: []\n\t\t\t\t\t\t} );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tvar childRelationship = { ID: fromID, relationship: relationship };\n\t\t\t\t\tconnectionMap.get( toID ).children.push( childRelationship );\n\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t\treturn connectionMap;\n\n\t\t},\n\n\t\t// Parse FBXTree.Objects.Video for embedded image data\n\t\t// These images are connected to textures in FBXTree.Objects.Textures\n\t\t// via FBXTree.Connections.\n\t\tparseImages: function () {\n\n\t\t\tvar images = {};\n\t\t\tvar blobs = {};\n\n\t\t\tif ( 'Video' in fbxTree.Objects ) {\n\n\t\t\t\tvar videoNodes = fbxTree.Objects.Video;\n\n\t\t\t\tfor ( var nodeID in videoNodes ) {\n\n\t\t\t\t\tvar videoNode = videoNodes[ nodeID ];\n\n\t\t\t\t\tvar id = parseInt( nodeID );\n\n\t\t\t\t\timages[ id ] = videoNode.RelativeFilename || videoNode.Filename;\n\n\t\t\t\t\t// raw image data is in videoNode.Content\n\t\t\t\t\tif ( 'Content' in videoNode ) {\n\n\t\t\t\t\t\tvar arrayBufferContent = ( videoNode.Content instanceof ArrayBuffer ) && ( videoNode.Content.byteLength > 0 );\n\t\t\t\t\t\tvar base64Content = ( typeof videoNode.Content === 'string' ) && ( videoNode.Content !== '' );\n\n\t\t\t\t\t\tif ( arrayBufferContent || base64Content ) {\n\n\t\t\t\t\t\t\tvar image = this.parseImage( videoNodes[ nodeID ] );\n\n\t\t\t\t\t\t\tblobs[ videoNode.RelativeFilename || videoNode.Filename ] = image;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfor ( var id in images ) {\n\n\t\t\t\tvar filename = images[ id ];\n\n\t\t\t\tif ( blobs[ filename ] !== undefined ) images[ id ] = blobs[ filename ];\n\t\t\t\telse images[ id ] = images[ id ].split( '\\\\' ).pop();\n\n\t\t\t}\n\n\t\t\treturn images;\n\n\t\t},\n\n\t\t// Parse embedded image data in FBXTree.Video.Content\n\t\tparseImage: function ( videoNode ) {\n\n\t\t\tvar content = videoNode.Content;\n\t\t\tvar fileName = videoNode.RelativeFilename || videoNode.Filename;\n\t\t\tvar extension = fileName.slice( fileName.lastIndexOf( '.' ) + 1 ).toLowerCase();\n\n\t\t\tvar type;\n\n\t\t\tswitch ( extension ) {\n\n\t\t\t\tcase 'bmp':\n\n\t\t\t\t\ttype = 'image/bmp';\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'jpg':\n\t\t\t\tcase 'jpeg':\n\n\t\t\t\t\ttype = 'image/jpeg';\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'png':\n\n\t\t\t\t\ttype = 'image/png';\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'tif':\n\n\t\t\t\t\ttype = 'image/tiff';\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'tga':\n\n\t\t\t\t\tif ( this.manager.getHandler( '.tga' ) === null ) {\n\n\t\t\t\t\t\tconsole.warn( 'FBXLoader: TGA loader not found, skipping ', fileName );\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttype = 'image/tga';\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tconsole.warn( 'FBXLoader: Image type \"' + extension + '\" is not supported.' );\n\t\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tif ( typeof content === 'string' ) { // ASCII format\n\n\t\t\t\treturn 'data:' + type + ';base64,' + content;\n\n\t\t\t} else { // Binary Format\n\n\t\t\t\tvar array = new Uint8Array( content );\n\t\t\t\treturn window.URL.createObjectURL( new Blob( [ array ], { type: type } ) );\n\n\t\t\t}\n\n\t\t},\n\n\t\t// Parse nodes in FBXTree.Objects.Texture\n\t\t// These contain details such as UV scaling, cropping, rotation etc and are connected\n\t\t// to images in FBXTree.Objects.Video\n\t\tparseTextures: function ( images ) {\n\n\t\t\tvar textureMap = new Map();\n\n\t\t\tif ( 'Texture' in fbxTree.Objects ) {\n\n\t\t\t\tvar textureNodes = fbxTree.Objects.Texture;\n\t\t\t\tfor ( var nodeID in textureNodes ) {\n\n\t\t\t\t\tvar texture = this.parseTexture( textureNodes[ nodeID ], images );\n\t\t\t\t\ttextureMap.set( parseInt( nodeID ), texture );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn textureMap;\n\n\t\t},\n\n\t\t// Parse individual node in FBXTree.Objects.Texture\n\t\tparseTexture: function ( textureNode, images ) {\n\n\t\t\tvar texture = this.loadTexture( textureNode, images );\n\n\t\t\ttexture.ID = textureNode.id;\n\n\t\t\ttexture.name = textureNode.attrName;\n\n\t\t\tvar wrapModeU = textureNode.WrapModeU;\n\t\t\tvar wrapModeV = textureNode.WrapModeV;\n\n\t\t\tvar valueU = wrapModeU !== undefined ? wrapModeU.value : 0;\n\t\t\tvar valueV = wrapModeV !== undefined ? wrapModeV.value : 0;\n\n\t\t\t// http://download.autodesk.com/us/fbx/SDKdocs/FBX_SDK_Help/files/fbxsdkref/class_k_fbx_texture.html#889640e63e2e681259ea81061b85143a\n\t\t\t// 0: repeat(default), 1: clamp\n\n\t\t\ttexture.wrapS = valueU === 0 ? RepeatWrapping : ClampToEdgeWrapping;\n\t\t\ttexture.wrapT = valueV === 0 ? RepeatWrapping : ClampToEdgeWrapping;\n\n\t\t\tif ( 'Scaling' in textureNode ) {\n\n\t\t\t\tvar values = textureNode.Scaling.value;\n\n\t\t\t\ttexture.repeat.x = values[ 0 ];\n\t\t\t\ttexture.repeat.y = values[ 1 ];\n\n\t\t\t}\n\n\t\t\treturn texture;\n\n\t\t},\n\n\t\t// load a texture specified as a blob or data URI, or via an external URL using TextureLoader\n\t\tloadTexture: function ( textureNode, images ) {\n\n\t\t\tvar fileName;\n\n\t\t\tvar currentPath = this.textureLoader.path;\n\n\t\t\tvar children = connections.get( textureNode.id ).children;\n\n\t\t\tif ( children !== undefined && children.length > 0 && images[ children[ 0 ].ID ] !== undefined ) {\n\n\t\t\t\tfileName = images[ children[ 0 ].ID ];\n\n\t\t\t\tif ( fileName.indexOf( 'blob:' ) === 0 || fileName.indexOf( 'data:' ) === 0 ) {\n\n\t\t\t\t\tthis.textureLoader.setPath( undefined );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar texture;\n\n\t\t\tvar extension = textureNode.FileName.slice( - 3 ).toLowerCase();\n\n\t\t\tif ( extension === 'tga' ) {\n\n\t\t\t\tvar loader = this.manager.getHandler( '.tga' );\n\n\t\t\t\tif ( loader === null ) {\n\n\t\t\t\t\tconsole.warn( 'FBXLoader: TGA loader not found, creating placeholder texture for', textureNode.RelativeFilename );\n\t\t\t\t\ttexture = new Texture();\n\n\t\t\t\t} else {\n\n\t\t\t\t\ttexture = loader.load( fileName );\n\n\t\t\t\t}\n\n\t\t\t} else if ( extension === 'psd' ) {\n\n\t\t\t\tconsole.warn( 'FBXLoader: PSD textures are not supported, creating placeholder texture for', textureNode.RelativeFilename );\n\t\t\t\ttexture = new Texture();\n\n\t\t\t} else {\n\n\t\t\t\ttexture = this.textureLoader.load( fileName );\n\n\t\t\t}\n\n\t\t\tthis.textureLoader.setPath( currentPath );\n\n\t\t\treturn texture;\n\n\t\t},\n\n\t\t// Parse nodes in FBXTree.Objects.Material\n\t\tparseMaterials: function ( textureMap ) {\n\n\t\t\tvar materialMap = new Map();\n\n\t\t\tif ( 'Material' in fbxTree.Objects ) {\n\n\t\t\t\tvar materialNodes = fbxTree.Objects.Material;\n\n\t\t\t\tfor ( var nodeID in materialNodes ) {\n\n\t\t\t\t\tvar material = this.parseMaterial( materialNodes[ nodeID ], textureMap );\n\n\t\t\t\t\tif ( material !== null ) materialMap.set( parseInt( nodeID ), material );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn materialMap;\n\n\t\t},\n\n\t\t// Parse single node in FBXTree.Objects.Material\n\t\t// Materials are connected to texture maps in FBXTree.Objects.Textures\n\t\t// FBX format currently only supports Lambert and Phong shading models\n\t\tparseMaterial: function ( materialNode, textureMap ) {\n\n\t\t\tvar ID = materialNode.id;\n\t\t\tvar name = materialNode.attrName;\n\t\t\tvar type = materialNode.ShadingModel;\n\n\t\t\t// Case where FBX wraps shading model in property object.\n\t\t\tif ( typeof type === 'object' ) {\n\n\t\t\t\ttype = type.value;\n\n\t\t\t}\n\n\t\t\t// Ignore unused materials which don't have any connections.\n\t\t\tif ( ! connections.has( ID ) ) return null;\n\n\t\t\tvar parameters = this.parseParameters( materialNode, textureMap, ID );\n\n\t\t\tvar material;\n\n\t\t\tswitch ( type.toLowerCase() ) {\n\n\t\t\t\tcase 'phong':\n\t\t\t\t\tmaterial = new MeshPhongMaterial();\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'lambert':\n\t\t\t\t\tmaterial = new MeshLambertMaterial();\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tconsole.warn( 'THREE.FBXLoader: unknown material type \"%s\". Defaulting to MeshPhongMaterial.', type );\n\t\t\t\t\tmaterial = new MeshPhongMaterial();\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tmaterial.setValues( parameters );\n\t\t\tmaterial.name = name;\n\n\t\t\treturn material;\n\n\t\t},\n\n\t\t// Parse FBX material and return parameters suitable for a three.js material\n\t\t// Also parse the texture map and return any textures associated with the material\n\t\tparseParameters: function ( materialNode, textureMap, ID ) {\n\n\t\t\tvar parameters = {};\n\n\t\t\tif ( materialNode.BumpFactor ) {\n\n\t\t\t\tparameters.bumpScale = materialNode.BumpFactor.value;\n\n\t\t\t}\n\t\t\tif ( materialNode.Diffuse ) {\n\n\t\t\t\tparameters.color = new Color().fromArray( materialNode.Diffuse.value );\n\n\t\t\t} else if ( materialNode.DiffuseColor && materialNode.DiffuseColor.type === 'Color' ) {\n\n\t\t\t\t// The blender exporter exports diffuse here instead of in materialNode.Diffuse\n\t\t\t\tparameters.color = new Color().fromArray( materialNode.DiffuseColor.value );\n\n\t\t\t}\n\n\t\t\tif ( materialNode.DisplacementFactor ) {\n\n\t\t\t\tparameters.displacementScale = materialNode.DisplacementFactor.value;\n\n\t\t\t}\n\n\t\t\tif ( materialNode.Emissive ) {\n\n\t\t\t\tparameters.emissive = new Color().fromArray( materialNode.Emissive.value );\n\n\t\t\t} else if ( materialNode.EmissiveColor && materialNode.EmissiveColor.type === 'Color' ) {\n\n\t\t\t\t// The blender exporter exports emissive color here instead of in materialNode.Emissive\n\t\t\t\tparameters.emissive = new Color().fromArray( materialNode.EmissiveColor.value );\n\n\t\t\t}\n\n\t\t\tif ( materialNode.EmissiveFactor ) {\n\n\t\t\t\tparameters.emissiveIntensity = parseFloat( materialNode.EmissiveFactor.value );\n\n\t\t\t}\n\n\t\t\tif ( materialNode.Opacity ) {\n\n\t\t\t\tparameters.opacity = parseFloat( materialNode.Opacity.value );\n\n\t\t\t}\n\n\t\t\tif ( parameters.opacity < 1.0 ) {\n\n\t\t\t\tparameters.transparent = true;\n\n\t\t\t}\n\n\t\t\tif ( materialNode.ReflectionFactor ) {\n\n\t\t\t\tparameters.reflectivity = materialNode.ReflectionFactor.value;\n\n\t\t\t}\n\n\t\t\tif ( materialNode.Shininess ) {\n\n\t\t\t\tparameters.shininess = materialNode.Shininess.value;\n\n\t\t\t}\n\n\t\t\tif ( materialNode.Specular ) {\n\n\t\t\t\tparameters.specular = new Color().fromArray( materialNode.Specular.value );\n\n\t\t\t} else if ( materialNode.SpecularColor && materialNode.SpecularColor.type === 'Color' ) {\n\n\t\t\t\t// The blender exporter exports specular color here instead of in materialNode.Specular\n\t\t\t\tparameters.specular = new Color().fromArray( materialNode.SpecularColor.value );\n\n\t\t\t}\n\n\t\t\tvar self = this;\n\t\t\tconnections.get( ID ).children.forEach( function ( child ) {\n\n\t\t\t\tvar type = child.relationship;\n\n\t\t\t\tswitch ( type ) {\n\n\t\t\t\t\tcase 'Bump':\n\t\t\t\t\t\tparameters.bumpMap = self.getTexture( textureMap, child.ID );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'Maya|TEX_ao_map':\n\t\t\t\t\t\tparameters.aoMap = self.getTexture( textureMap, child.ID );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'DiffuseColor':\n\t\t\t\t\tcase 'Maya|TEX_color_map':\n\t\t\t\t\t\tparameters.map = self.getTexture( textureMap, child.ID );\n\t\t\t\t\t\tparameters.map.encoding = sRGBEncoding;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'DisplacementColor':\n\t\t\t\t\t\tparameters.displacementMap = self.getTexture( textureMap, child.ID );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'EmissiveColor':\n\t\t\t\t\t\tparameters.emissiveMap = self.getTexture( textureMap, child.ID );\n\t\t\t\t\t\tparameters.emissiveMap.encoding = sRGBEncoding;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'NormalMap':\n\t\t\t\t\tcase 'Maya|TEX_normal_map':\n\t\t\t\t\t\tparameters.normalMap = self.getTexture( textureMap, child.ID );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'ReflectionColor':\n\t\t\t\t\t\tparameters.envMap = self.getTexture( textureMap, child.ID );\n\t\t\t\t\t\tparameters.envMap.mapping = EquirectangularReflectionMapping;\n\t\t\t\t\t\tparameters.envMap.encoding = sRGBEncoding;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'SpecularColor':\n\t\t\t\t\t\tparameters.specularMap = self.getTexture( textureMap, child.ID );\n\t\t\t\t\t\tparameters.specularMap.encoding = sRGBEncoding;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'TransparentColor':\n\t\t\t\t\t\tparameters.alphaMap = self.getTexture( textureMap, child.ID );\n\t\t\t\t\t\tparameters.transparent = true;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'AmbientColor':\n\t\t\t\t\tcase 'ShininessExponent': // AKA glossiness map\n\t\t\t\t\tcase 'SpecularFactor': // AKA specularLevel\n\t\t\t\t\tcase 'VectorDisplacementColor': // NOTE: Seems to be a copy of DisplacementColor\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tconsole.warn( 'THREE.FBXLoader: %s map is not supported in three.js, skipping texture.', type );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t\treturn parameters;\n\n\t\t},\n\n\t\t// get a texture from the textureMap for use by a material.\n\t\tgetTexture: function ( textureMap, id ) {\n\n\t\t\t// if the texture is a layered texture, just use the first layer and issue a warning\n\t\t\tif ( 'LayeredTexture' in fbxTree.Objects && id in fbxTree.Objects.LayeredTexture ) {\n\n\t\t\t\tconsole.warn( 'THREE.FBXLoader: layered textures are not supported in three.js. Discarding all but first layer.' );\n\t\t\t\tid = connections.get( id ).children[ 0 ].ID;\n\n\t\t\t}\n\n\t\t\treturn textureMap.get( id );\n\n\t\t},\n\n\t\t// Parse nodes in FBXTree.Objects.Deformer\n\t\t// Deformer node can contain skinning or Vertex Cache animation data, however only skinning is supported here\n\t\t// Generates map of Skeleton-like objects for use later when generating and binding skeletons.\n\t\tparseDeformers: function () {\n\n\t\t\tvar skeletons = {};\n\t\t\tvar morphTargets = {};\n\n\t\t\tif ( 'Deformer' in fbxTree.Objects ) {\n\n\t\t\t\tvar DeformerNodes = fbxTree.Objects.Deformer;\n\n\t\t\t\tfor ( var nodeID in DeformerNodes ) {\n\n\t\t\t\t\tvar deformerNode = DeformerNodes[ nodeID ];\n\n\t\t\t\t\tvar relationships = connections.get( parseInt( nodeID ) );\n\n\t\t\t\t\tif ( deformerNode.attrType === 'Skin' ) {\n\n\t\t\t\t\t\tvar skeleton = this.parseSkeleton( relationships, DeformerNodes );\n\t\t\t\t\t\tskeleton.ID = nodeID;\n\n\t\t\t\t\t\tif ( relationships.parents.length > 1 ) console.warn( 'THREE.FBXLoader: skeleton attached to more than one geometry is not supported.' );\n\t\t\t\t\t\tskeleton.geometryID = relationships.parents[ 0 ].ID;\n\n\t\t\t\t\t\tskeletons[ nodeID ] = skeleton;\n\n\t\t\t\t\t} else if ( deformerNode.attrType === 'BlendShape' ) {\n\n\t\t\t\t\t\tvar morphTarget = {\n\t\t\t\t\t\t\tid: nodeID,\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tmorphTarget.rawTargets = this.parseMorphTargets( relationships, DeformerNodes );\n\t\t\t\t\t\tmorphTarget.id = nodeID;\n\n\t\t\t\t\t\tif ( relationships.parents.length > 1 ) console.warn( 'THREE.FBXLoader: morph target attached to more than one geometry is not supported.' );\n\n\t\t\t\t\t\tmorphTargets[ nodeID ] = morphTarget;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn {\n\n\t\t\t\tskeletons: skeletons,\n\t\t\t\tmorphTargets: morphTargets,\n\n\t\t\t};\n\n\t\t},\n\n\t\t// Parse single nodes in FBXTree.Objects.Deformer\n\t\t// The top level skeleton node has type 'Skin' and sub nodes have type 'Cluster'\n\t\t// Each skin node represents a skeleton and each cluster node represents a bone\n\t\tparseSkeleton: function ( relationships, deformerNodes ) {\n\n\t\t\tvar rawBones = [];\n\n\t\t\trelationships.children.forEach( function ( child ) {\n\n\t\t\t\tvar boneNode = deformerNodes[ child.ID ];\n\n\t\t\t\tif ( boneNode.attrType !== 'Cluster' ) return;\n\n\t\t\t\tvar rawBone = {\n\n\t\t\t\t\tID: child.ID,\n\t\t\t\t\tindices: [],\n\t\t\t\t\tweights: [],\n\t\t\t\t\ttransformLink: new Matrix4().fromArray( boneNode.TransformLink.a ),\n\t\t\t\t\t// transform: new Matrix4().fromArray( boneNode.Transform.a ),\n\t\t\t\t\t// linkMode: boneNode.Mode,\n\n\t\t\t\t};\n\n\t\t\t\tif ( 'Indexes' in boneNode ) {\n\n\t\t\t\t\trawBone.indices = boneNode.Indexes.a;\n\t\t\t\t\trawBone.weights = boneNode.Weights.a;\n\n\t\t\t\t}\n\n\t\t\t\trawBones.push( rawBone );\n\n\t\t\t} );\n\n\t\t\treturn {\n\n\t\t\t\trawBones: rawBones,\n\t\t\t\tbones: []\n\n\t\t\t};\n\n\t\t},\n\n\t\t// The top level morph deformer node has type \"BlendShape\" and sub nodes have type \"BlendShapeChannel\"\n\t\tparseMorphTargets: function ( relationships, deformerNodes ) {\n\n\t\t\tvar rawMorphTargets = [];\n\n\t\t\tfor ( var i = 0; i < relationships.children.length; i ++ ) {\n\n\t\t\t\tvar child = relationships.children[ i ];\n\n\t\t\t\tvar morphTargetNode = deformerNodes[ child.ID ];\n\n\t\t\t\tvar rawMorphTarget = {\n\n\t\t\t\t\tname: morphTargetNode.attrName,\n\t\t\t\t\tinitialWeight: morphTargetNode.DeformPercent,\n\t\t\t\t\tid: morphTargetNode.id,\n\t\t\t\t\tfullWeights: morphTargetNode.FullWeights.a\n\n\t\t\t\t};\n\n\t\t\t\tif ( morphTargetNode.attrType !== 'BlendShapeChannel' ) return;\n\n\t\t\t\trawMorphTarget.geoID = connections.get( parseInt( child.ID ) ).children.filter( function ( child ) {\n\n\t\t\t\t\treturn child.relationship === undefined;\n\n\t\t\t\t} )[ 0 ].ID;\n\n\t\t\t\trawMorphTargets.push( rawMorphTarget );\n\n\t\t\t}\n\n\t\t\treturn rawMorphTargets;\n\n\t\t},\n\n\t\t// create the main Group() to be returned by the loader\n\t\tparseScene: function ( deformers, geometryMap, materialMap ) {\n\n\t\t\tsceneGraph = new Group();\n\n\t\t\tvar modelMap = this.parseModels( deformers.skeletons, geometryMap, materialMap );\n\n\t\t\tvar modelNodes = fbxTree.Objects.Model;\n\n\t\t\tvar self = this;\n\t\t\tmodelMap.forEach( function ( model ) {\n\n\t\t\t\tvar modelNode = modelNodes[ model.ID ];\n\t\t\t\tself.setLookAtProperties( model, modelNode );\n\n\t\t\t\tvar parentConnections = connections.get( model.ID ).parents;\n\n\t\t\t\tparentConnections.forEach( function ( connection ) {\n\n\t\t\t\t\tvar parent = modelMap.get( connection.ID );\n\t\t\t\t\tif ( parent !== undefined ) parent.add( model );\n\n\t\t\t\t} );\n\n\t\t\t\tif ( model.parent === null ) {\n\n\t\t\t\t\tsceneGraph.add( model );\n\n\t\t\t\t}\n\n\n\t\t\t} );\n\n\t\t\tthis.bindSkeleton( deformers.skeletons, geometryMap, modelMap );\n\n\t\t\tthis.createAmbientLight();\n\n\t\t\tthis.setupMorphMaterials();\n\n\t\t\tsceneGraph.traverse( function ( node ) {\n\n\t\t\t\tif ( node.userData.transformData ) {\n\n\t\t\t\t\tif ( node.parent ) node.userData.transformData.parentMatrixWorld = node.parent.matrix;\n\n\t\t\t\t\tvar transform = generateTransform( node.userData.transformData );\n\n\t\t\t\t\tnode.applyMatrix( transform );\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t\tvar animations = new AnimationParser().parse();\n\n\t\t\t// if all the models where already combined in a single group, just return that\n\t\t\tif ( sceneGraph.children.length === 1 && sceneGraph.children[ 0 ].isGroup ) {\n\n\t\t\t\tsceneGraph.children[ 0 ].animations = animations;\n\t\t\t\tsceneGraph = sceneGraph.children[ 0 ];\n\n\t\t\t}\n\n\t\t\tsceneGraph.animations = animations;\n\n\t\t},\n\n\t\t// parse nodes in FBXTree.Objects.Model\n\t\tparseModels: function ( skeletons, geometryMap, materialMap ) {\n\n\t\t\tvar modelMap = new Map();\n\t\t\tvar modelNodes = fbxTree.Objects.Model;\n\n\t\t\tfor ( var nodeID in modelNodes ) {\n\n\t\t\t\tvar id = parseInt( nodeID );\n\t\t\t\tvar node = modelNodes[ nodeID ];\n\t\t\t\tvar relationships = connections.get( id );\n\n\t\t\t\tvar model = this.buildSkeleton( relationships, skeletons, id, node.attrName );\n\n\t\t\t\tif ( ! model ) {\n\n\t\t\t\t\tswitch ( node.attrType ) {\n\n\t\t\t\t\t\tcase 'Camera':\n\t\t\t\t\t\t\tmodel = this.createCamera( relationships );\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'Light':\n\t\t\t\t\t\t\tmodel = this.createLight( relationships );\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'Mesh':\n\t\t\t\t\t\t\tmodel = this.createMesh( relationships, geometryMap, materialMap );\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'NurbsCurve':\n\t\t\t\t\t\t\tmodel = this.createCurve( relationships, geometryMap );\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'LimbNode':\n\t\t\t\t\t\tcase 'Root':\n\t\t\t\t\t\t\tmodel = new Bone();\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'Null':\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tmodel = new Group();\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tmodel.name = node.attrName ? PropertyBinding.sanitizeNodeName( node.attrName ) : '';\n\n\t\t\t\t\tmodel.ID = id;\n\n\t\t\t\t}\n\n\t\t\t\tthis.getTransformData( model, node );\n\t\t\t\tmodelMap.set( id, model );\n\n\t\t\t}\n\n\t\t\treturn modelMap;\n\n\t\t},\n\n\t\tbuildSkeleton: function ( relationships, skeletons, id, name ) {\n\n\t\t\tvar bone = null;\n\n\t\t\trelationships.parents.forEach( function ( parent ) {\n\n\t\t\t\tfor ( var ID in skeletons ) {\n\n\t\t\t\t\tvar skeleton = skeletons[ ID ];\n\n\t\t\t\t\tskeleton.rawBones.forEach( function ( rawBone, i ) {\n\n\t\t\t\t\t\tif ( rawBone.ID === parent.ID ) {\n\n\t\t\t\t\t\t\tvar subBone = bone;\n\t\t\t\t\t\t\tbone = new Bone();\n\n\t\t\t\t\t\t\tbone.matrixWorld.copy( rawBone.transformLink );\n\n\t\t\t\t\t\t\t// set name and id here - otherwise in cases where \"subBone\" is created it will not have a name / id\n\n\t\t\t\t\t\t\tbone.name = name ? PropertyBinding.sanitizeNodeName( name ) : '';\n\t\t\t\t\t\t\tbone.ID = id;\n\n\t\t\t\t\t\t\tskeleton.bones[ i ] = bone;\n\n\t\t\t\t\t\t\t// In cases where a bone is shared between multiple meshes\n\t\t\t\t\t\t\t// duplicate the bone here and and it as a child of the first bone\n\t\t\t\t\t\t\tif ( subBone !== null ) {\n\n\t\t\t\t\t\t\t\tbone.add( subBone );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t\treturn bone;\n\n\t\t},\n\n\t\t// create a PerspectiveCamera or OrthographicCamera\n\t\tcreateCamera: function ( relationships ) {\n\n\t\t\tvar model;\n\t\t\tvar cameraAttribute;\n\n\t\t\trelationships.children.forEach( function ( child ) {\n\n\t\t\t\tvar attr = fbxTree.Objects.NodeAttribute[ child.ID ];\n\n\t\t\t\tif ( attr !== undefined ) {\n\n\t\t\t\t\tcameraAttribute = attr;\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t\tif ( cameraAttribute === undefined ) {\n\n\t\t\t\tmodel = new Object3D();\n\n\t\t\t} else {\n\n\t\t\t\tvar type = 0;\n\t\t\t\tif ( cameraAttribute.CameraProjectionType !== undefined && cameraAttribute.CameraProjectionType.value === 1 ) {\n\n\t\t\t\t\ttype = 1;\n\n\t\t\t\t}\n\n\t\t\t\tvar nearClippingPlane = 1;\n\t\t\t\tif ( cameraAttribute.NearPlane !== undefined ) {\n\n\t\t\t\t\tnearClippingPlane = cameraAttribute.NearPlane.value / 1000;\n\n\t\t\t\t}\n\n\t\t\t\tvar farClippingPlane = 1000;\n\t\t\t\tif ( cameraAttribute.FarPlane !== undefined ) {\n\n\t\t\t\t\tfarClippingPlane = cameraAttribute.FarPlane.value / 1000;\n\n\t\t\t\t}\n\n\n\t\t\t\tvar width = window.innerWidth;\n\t\t\t\tvar height = window.innerHeight;\n\n\t\t\t\tif ( cameraAttribute.AspectWidth !== undefined && cameraAttribute.AspectHeight !== undefined ) {\n\n\t\t\t\t\twidth = cameraAttribute.AspectWidth.value;\n\t\t\t\t\theight = cameraAttribute.AspectHeight.value;\n\n\t\t\t\t}\n\n\t\t\t\tvar aspect = width / height;\n\n\t\t\t\tvar fov = 45;\n\t\t\t\tif ( cameraAttribute.FieldOfView !== undefined ) {\n\n\t\t\t\t\tfov = cameraAttribute.FieldOfView.value;\n\n\t\t\t\t}\n\n\t\t\t\tvar focalLength = cameraAttribute.FocalLength ? cameraAttribute.FocalLength.value : null;\n\n\t\t\t\tswitch ( type ) {\n\n\t\t\t\t\tcase 0: // Perspective\n\t\t\t\t\t\tmodel = new PerspectiveCamera( fov, aspect, nearClippingPlane, farClippingPlane );\n\t\t\t\t\t\tif ( focalLength !== null ) model.setFocalLength( focalLength );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 1: // Orthographic\n\t\t\t\t\t\tmodel = new OrthographicCamera( - width / 2, width / 2, height / 2, - height / 2, nearClippingPlane, farClippingPlane );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tconsole.warn( 'THREE.FBXLoader: Unknown camera type ' + type + '.' );\n\t\t\t\t\t\tmodel = new Object3D();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn model;\n\n\t\t},\n\n\t\t// Create a DirectionalLight, PointLight or SpotLight\n\t\tcreateLight: function ( relationships ) {\n\n\t\t\tvar model;\n\t\t\tvar lightAttribute;\n\n\t\t\trelationships.children.forEach( function ( child ) {\n\n\t\t\t\tvar attr = fbxTree.Objects.NodeAttribute[ child.ID ];\n\n\t\t\t\tif ( attr !== undefined ) {\n\n\t\t\t\t\tlightAttribute = attr;\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t\tif ( lightAttribute === undefined ) {\n\n\t\t\t\tmodel = new Object3D();\n\n\t\t\t} else {\n\n\t\t\t\tvar type;\n\n\t\t\t\t// LightType can be undefined for Point lights\n\t\t\t\tif ( lightAttribute.LightType === undefined ) {\n\n\t\t\t\t\ttype = 0;\n\n\t\t\t\t} else {\n\n\t\t\t\t\ttype = lightAttribute.LightType.value;\n\n\t\t\t\t}\n\n\t\t\t\tvar color = 0xffffff;\n\n\t\t\t\tif ( lightAttribute.Color !== undefined ) {\n\n\t\t\t\t\tcolor = new Color().fromArray( lightAttribute.Color.value );\n\n\t\t\t\t}\n\n\t\t\t\tvar intensity = ( lightAttribute.Intensity === undefined ) ? 1 : lightAttribute.Intensity.value / 100;\n\n\t\t\t\t// light disabled\n\t\t\t\tif ( lightAttribute.CastLightOnObject !== undefined && lightAttribute.CastLightOnObject.value === 0 ) {\n\n\t\t\t\t\tintensity = 0;\n\n\t\t\t\t}\n\n\t\t\t\tvar distance = 0;\n\t\t\t\tif ( lightAttribute.FarAttenuationEnd !== undefined ) {\n\n\t\t\t\t\tif ( lightAttribute.EnableFarAttenuation !== undefined && lightAttribute.EnableFarAttenuation.value === 0 ) {\n\n\t\t\t\t\t\tdistance = 0;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tdistance = lightAttribute.FarAttenuationEnd.value;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// TODO: could this be calculated linearly from FarAttenuationStart to FarAttenuationEnd?\n\t\t\t\tvar decay = 1;\n\n\t\t\t\tswitch ( type ) {\n\n\t\t\t\t\tcase 0: // Point\n\t\t\t\t\t\tmodel = new PointLight( color, intensity, distance, decay );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 1: // Directional\n\t\t\t\t\t\tmodel = new DirectionalLight( color, intensity );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 2: // Spot\n\t\t\t\t\t\tvar angle = Math.PI / 3;\n\n\t\t\t\t\t\tif ( lightAttribute.InnerAngle !== undefined ) {\n\n\t\t\t\t\t\t\tangle = _Math.degToRad( lightAttribute.InnerAngle.value );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar penumbra = 0;\n\t\t\t\t\t\tif ( lightAttribute.OuterAngle !== undefined ) {\n\n\t\t\t\t\t\t\t// TODO: this is not correct - FBX calculates outer and inner angle in degrees\n\t\t\t\t\t\t\t// with OuterAngle > InnerAngle && OuterAngle <= Math.PI\n\t\t\t\t\t\t\t// while three.js uses a penumbra between (0, 1) to attenuate the inner angle\n\t\t\t\t\t\t\tpenumbra = _Math.degToRad( lightAttribute.OuterAngle.value );\n\t\t\t\t\t\t\tpenumbra = Math.max( penumbra, 1 );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tmodel = new SpotLight( color, intensity, distance, angle, penumbra, decay );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tconsole.warn( 'THREE.FBXLoader: Unknown light type ' + lightAttribute.LightType.value + ', defaulting to a PointLight.' );\n\t\t\t\t\t\tmodel = new PointLight( color, intensity );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t\tif ( lightAttribute.CastShadows !== undefined && lightAttribute.CastShadows.value === 1 ) {\n\n\t\t\t\t\tmodel.castShadow = true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn model;\n\n\t\t},\n\n\t\tcreateMesh: function ( relationships, geometryMap, materialMap ) {\n\n\t\t\tvar model;\n\t\t\tvar geometry = null;\n\t\t\tvar material = null;\n\t\t\tvar materials = [];\n\n\t\t\t// get geometry and materials(s) from connections\n\t\t\trelationships.children.forEach( function ( child ) {\n\n\t\t\t\tif ( geometryMap.has( child.ID ) ) {\n\n\t\t\t\t\tgeometry = geometryMap.get( child.ID );\n\n\t\t\t\t}\n\n\t\t\t\tif ( materialMap.has( child.ID ) ) {\n\n\t\t\t\t\tmaterials.push( materialMap.get( child.ID ) );\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t\tif ( materials.length > 1 ) {\n\n\t\t\t\tmaterial = materials;\n\n\t\t\t} else if ( materials.length > 0 ) {\n\n\t\t\t\tmaterial = materials[ 0 ];\n\n\t\t\t} else {\n\n\t\t\t\tmaterial = new MeshPhongMaterial( { color: 0xcccccc } );\n\t\t\t\tmaterials.push( material );\n\n\t\t\t}\n\n\t\t\tif ( 'color' in geometry.attributes ) {\n\n\t\t\t\tmaterials.forEach( function ( material ) {\n\n\t\t\t\t\tmaterial.vertexColors = VertexColors;\n\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t\tif ( geometry.FBX_Deformer ) {\n\n\t\t\t\tmaterials.forEach( function ( material ) {\n\n\t\t\t\t\tmaterial.skinning = true;\n\n\t\t\t\t} );\n\n\t\t\t\tmodel = new SkinnedMesh( geometry, material );\n\t\t\t\tmodel.normalizeSkinWeights();\n\n\t\t\t} else {\n\n\t\t\t\tmodel = new Mesh( geometry, material );\n\n\t\t\t}\n\n\t\t\treturn model;\n\n\t\t},\n\n\t\tcreateCurve: function ( relationships, geometryMap ) {\n\n\t\t\tvar geometry = relationships.children.reduce( function ( geo, child ) {\n\n\t\t\t\tif ( geometryMap.has( child.ID ) ) geo = geometryMap.get( child.ID );\n\n\t\t\t\treturn geo;\n\n\t\t\t}, null );\n\n\t\t\t// FBX does not list materials for Nurbs lines, so we'll just put our own in here.\n\t\t\tvar material = new LineBasicMaterial( { color: 0x3300ff, linewidth: 1 } );\n\t\t\treturn new Line( geometry, material );\n\n\t\t},\n\n\t\t// parse the model node for transform data\n\t\tgetTransformData: function ( model, modelNode ) {\n\n\t\t\tvar transformData = {};\n\n\t\t\tif ( 'InheritType' in modelNode ) transformData.inheritType = parseInt( modelNode.InheritType.value );\n\n\t\t\tif ( 'RotationOrder' in modelNode ) transformData.eulerOrder = getEulerOrder( modelNode.RotationOrder.value );\n\t\t\telse transformData.eulerOrder = 'ZYX';\n\n\t\t\tif ( 'Lcl_Translation' in modelNode ) transformData.translation = modelNode.Lcl_Translation.value;\n\n\t\t\tif ( 'PreRotation' in modelNode ) transformData.preRotation = modelNode.PreRotation.value;\n\t\t\tif ( 'Lcl_Rotation' in modelNode ) transformData.rotation = modelNode.Lcl_Rotation.value;\n\t\t\tif ( 'PostRotation' in modelNode ) transformData.postRotation = modelNode.PostRotation.value;\n\n\t\t\tif ( 'Lcl_Scaling' in modelNode ) transformData.scale = modelNode.Lcl_Scaling.value;\n\n\t\t\tif ( 'ScalingOffset' in modelNode ) transformData.scalingOffset = modelNode.ScalingOffset.value;\n\t\t\tif ( 'ScalingPivot' in modelNode ) transformData.scalingPivot = modelNode.ScalingPivot.value;\n\n\t\t\tif ( 'RotationOffset' in modelNode ) transformData.rotationOffset = modelNode.RotationOffset.value;\n\t\t\tif ( 'RotationPivot' in modelNode ) transformData.rotationPivot = modelNode.RotationPivot.value;\n\n\t\t\tmodel.userData.transformData = transformData;\n\n\t\t},\n\n\t\tsetLookAtProperties: function ( model, modelNode ) {\n\n\t\t\tif ( 'LookAtProperty' in modelNode ) {\n\n\t\t\t\tvar children = connections.get( model.ID ).children;\n\n\t\t\t\tchildren.forEach( function ( child ) {\n\n\t\t\t\t\tif ( child.relationship === 'LookAtProperty' ) {\n\n\t\t\t\t\t\tvar lookAtTarget = fbxTree.Objects.Model[ child.ID ];\n\n\t\t\t\t\t\tif ( 'Lcl_Translation' in lookAtTarget ) {\n\n\t\t\t\t\t\t\tvar pos = lookAtTarget.Lcl_Translation.value;\n\n\t\t\t\t\t\t\t// DirectionalLight, SpotLight\n\t\t\t\t\t\t\tif ( model.target !== undefined ) {\n\n\t\t\t\t\t\t\t\tmodel.target.position.fromArray( pos );\n\t\t\t\t\t\t\t\tsceneGraph.add( model.target );\n\n\t\t\t\t\t\t\t} else { // Cameras and other Object3Ds\n\n\t\t\t\t\t\t\t\tmodel.lookAt( new Vector3().fromArray( pos ) );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t},\n\n\t\tbindSkeleton: function ( skeletons, geometryMap, modelMap ) {\n\n\t\t\tvar bindMatrices = this.parsePoseNodes();\n\n\t\t\tfor ( var ID in skeletons ) {\n\n\t\t\t\tvar skeleton = skeletons[ ID ];\n\n\t\t\t\tvar parents = connections.get( parseInt( skeleton.ID ) ).parents;\n\n\t\t\t\tparents.forEach( function ( parent ) {\n\n\t\t\t\t\tif ( geometryMap.has( parent.ID ) ) {\n\n\t\t\t\t\t\tvar geoID = parent.ID;\n\t\t\t\t\t\tvar geoRelationships = connections.get( geoID );\n\n\t\t\t\t\t\tgeoRelationships.parents.forEach( function ( geoConnParent ) {\n\n\t\t\t\t\t\t\tif ( modelMap.has( geoConnParent.ID ) ) {\n\n\t\t\t\t\t\t\t\tvar model = modelMap.get( geoConnParent.ID );\n\n\t\t\t\t\t\t\t\tmodel.bind( new Skeleton( skeleton.bones ), bindMatrices[ geoConnParent.ID ] );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} );\n\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t},\n\n\t\tparsePoseNodes: function () {\n\n\t\t\tvar bindMatrices = {};\n\n\t\t\tif ( 'Pose' in fbxTree.Objects ) {\n\n\t\t\t\tvar BindPoseNode = fbxTree.Objects.Pose;\n\n\t\t\t\tfor ( var nodeID in BindPoseNode ) {\n\n\t\t\t\t\tif ( BindPoseNode[ nodeID ].attrType === 'BindPose' ) {\n\n\t\t\t\t\t\tvar poseNodes = BindPoseNode[ nodeID ].PoseNode;\n\n\t\t\t\t\t\tif ( Array.isArray( poseNodes ) ) {\n\n\t\t\t\t\t\t\tposeNodes.forEach( function ( poseNode ) {\n\n\t\t\t\t\t\t\t\tbindMatrices[ poseNode.Node ] = new Matrix4().fromArray( poseNode.Matrix.a );\n\n\t\t\t\t\t\t\t} );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tbindMatrices[ poseNodes.Node ] = new Matrix4().fromArray( poseNodes.Matrix.a );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn bindMatrices;\n\n\t\t},\n\n\t\t// Parse ambient color in FBXTree.GlobalSettings - if it's not set to black (default), create an ambient light\n\t\tcreateAmbientLight: function () {\n\n\t\t\tif ( 'GlobalSettings' in fbxTree && 'AmbientColor' in fbxTree.GlobalSettings ) {\n\n\t\t\t\tvar ambientColor = fbxTree.GlobalSettings.AmbientColor.value;\n\t\t\t\tvar r = ambientColor[ 0 ];\n\t\t\t\tvar g = ambientColor[ 1 ];\n\t\t\t\tvar b = ambientColor[ 2 ];\n\n\t\t\t\tif ( r !== 0 || g !== 0 || b !== 0 ) {\n\n\t\t\t\t\tvar color = new Color( r, g, b );\n\t\t\t\t\tsceneGraph.add( new AmbientLight( color, 1 ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t\tsetupMorphMaterials: function () {\n\n\t\t\tvar self = this;\n\t\t\tsceneGraph.traverse( function ( child ) {\n\n\t\t\t\tif ( child.isMesh ) {\n\n\t\t\t\t\tif ( child.geometry.morphAttributes.position && child.geometry.morphAttributes.position.length ) {\n\n\t\t\t\t\t\tif ( Array.isArray( child.material ) ) {\n\n\t\t\t\t\t\t\tchild.material.forEach( function ( material, i ) {\n\n\t\t\t\t\t\t\t\tself.setupMorphMaterial( child, material, i );\n\n\t\t\t\t\t\t\t} );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tself.setupMorphMaterial( child, child.material );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t},\n\n\t\tsetupMorphMaterial: function ( child, material, index ) {\n\n\t\t\tvar uuid = child.uuid;\n\t\t\tvar matUuid = material.uuid;\n\n\t\t\t// if a geometry has morph targets, it cannot share the material with other geometries\n\t\t\tvar sharedMat = false;\n\n\t\t\tsceneGraph.traverse( function ( node ) {\n\n\t\t\t\tif ( node.isMesh ) {\n\n\t\t\t\t\tif ( Array.isArray( node.material ) ) {\n\n\t\t\t\t\t\tnode.material.forEach( function ( mat ) {\n\n\t\t\t\t\t\t\tif ( mat.uuid === matUuid && node.uuid !== uuid ) sharedMat = true;\n\n\t\t\t\t\t\t} );\n\n\t\t\t\t\t} else if ( node.material.uuid === matUuid && node.uuid !== uuid ) sharedMat = true;\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t\tif ( sharedMat === true ) {\n\n\t\t\t\tvar clonedMat = material.clone();\n\t\t\t\tclonedMat.morphTargets = true;\n\n\t\t\t\tif ( index === undefined ) child.material = clonedMat;\n\t\t\t\telse child.material[ index ] = clonedMat;\n\n\t\t\t} else material.morphTargets = true;\n\n\t\t}\n\n\t};\n\n\t// parse Geometry data from FBXTree and return map of BufferGeometries\n\tfunction GeometryParser() {}\n\n\tGeometryParser.prototype = {\n\n\t\tconstructor: GeometryParser,\n\n\t\t// Parse nodes in FBXTree.Objects.Geometry\n\t\tparse: function ( deformers ) {\n\n\t\t\tvar geometryMap = new Map();\n\n\t\t\tif ( 'Geometry' in fbxTree.Objects ) {\n\n\t\t\t\tvar geoNodes = fbxTree.Objects.Geometry;\n\n\t\t\t\tfor ( var nodeID in geoNodes ) {\n\n\t\t\t\t\tvar relationships = connections.get( parseInt( nodeID ) );\n\t\t\t\t\tvar geo = this.parseGeometry( relationships, geoNodes[ nodeID ], deformers );\n\n\t\t\t\t\tgeometryMap.set( parseInt( nodeID ), geo );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn geometryMap;\n\n\t\t},\n\n\t\t// Parse single node in FBXTree.Objects.Geometry\n\t\tparseGeometry: function ( relationships, geoNode, deformers ) {\n\n\t\t\tswitch ( geoNode.attrType ) {\n\n\t\t\t\tcase 'Mesh':\n\t\t\t\t\treturn this.parseMeshGeometry( relationships, geoNode, deformers );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'NurbsCurve':\n\t\t\t\t\treturn this.parseNurbsGeometry( geoNode );\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t},\n\n\n\t\t// Parse single node mesh geometry in FBXTree.Objects.Geometry\n\t\tparseMeshGeometry: function ( relationships, geoNode, deformers ) {\n\n\t\t\tvar skeletons = deformers.skeletons;\n\t\t\tvar morphTargets = [];\n\n\t\t\tvar modelNodes = relationships.parents.map( function ( parent ) {\n\n\t\t\t\treturn fbxTree.Objects.Model[ parent.ID ];\n\n\t\t\t} );\n\n\t\t\t// don't create geometry if it is not associated with any models\n\t\t\tif ( modelNodes.length === 0 ) return;\n\n\t\t\tvar skeleton = relationships.children.reduce( function ( skeleton, child ) {\n\n\t\t\t\tif ( skeletons[ child.ID ] !== undefined ) skeleton = skeletons[ child.ID ];\n\n\t\t\t\treturn skeleton;\n\n\t\t\t}, null );\n\n\t\t\trelationships.children.forEach( function ( child ) {\n\n\t\t\t\tif ( deformers.morphTargets[ child.ID ] !== undefined ) {\n\n\t\t\t\t\tmorphTargets.push( deformers.morphTargets[ child.ID ] );\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t\t// Assume one model and get the preRotation from that\n\t\t\t// if there is more than one model associated with the geometry this may cause problems\n\t\t\tvar modelNode = modelNodes[ 0 ];\n\n\t\t\tvar transformData = {};\n\n\t\t\tif ( 'RotationOrder' in modelNode ) transformData.eulerOrder = getEulerOrder( modelNode.RotationOrder.value );\n\t\t\tif ( 'InheritType' in modelNode ) transformData.inheritType = parseInt( modelNode.InheritType.value );\n\n\t\t\tif ( 'GeometricTranslation' in modelNode ) transformData.translation = modelNode.GeometricTranslation.value;\n\t\t\tif ( 'GeometricRotation' in modelNode ) transformData.rotation = modelNode.GeometricRotation.value;\n\t\t\tif ( 'GeometricScaling' in modelNode ) transformData.scale = modelNode.GeometricScaling.value;\n\n\t\t\tvar transform = generateTransform( transformData );\n\n\t\t\treturn this.genGeometry( geoNode, skeleton, morphTargets, transform );\n\n\t\t},\n\n\t\t// Generate a BufferGeometry from a node in FBXTree.Objects.Geometry\n\t\tgenGeometry: function ( geoNode, skeleton, morphTargets, preTransform ) {\n\n\t\t\tvar geo = new BufferGeometry();\n\t\t\tif ( geoNode.attrName ) geo.name = geoNode.attrName;\n\n\t\t\tvar geoInfo = this.parseGeoNode( geoNode, skeleton );\n\t\t\tvar buffers = this.genBuffers( geoInfo );\n\n\t\t\tvar positionAttribute = new Float32BufferAttribute( buffers.vertex, 3 );\n\n\t\t\tpreTransform.applyToBufferAttribute( positionAttribute );\n\n\t\t\tgeo.setAttribute( 'position', positionAttribute );\n\n\t\t\tif ( buffers.colors.length > 0 ) {\n\n\t\t\t\tgeo.setAttribute( 'color', new Float32BufferAttribute( buffers.colors, 3 ) );\n\n\t\t\t}\n\n\t\t\tif ( skeleton ) {\n\n\t\t\t\tgeo.setAttribute( 'skinIndex', new Uint16BufferAttribute( buffers.weightsIndices, 4 ) );\n\n\t\t\t\tgeo.setAttribute( 'skinWeight', new Float32BufferAttribute( buffers.vertexWeights, 4 ) );\n\n\t\t\t\t// used later to bind the skeleton to the model\n\t\t\t\tgeo.FBX_Deformer = skeleton;\n\n\t\t\t}\n\n\t\t\tif ( buffers.normal.length > 0 ) {\n\n\t\t\t\tvar normalAttribute = new Float32BufferAttribute( buffers.normal, 3 );\n\n\t\t\t\tvar normalMatrix = new Matrix3().getNormalMatrix( preTransform );\n\t\t\t\tnormalMatrix.applyToBufferAttribute( normalAttribute );\n\n\t\t\t\tgeo.setAttribute( 'normal', normalAttribute );\n\n\t\t\t}\n\n\t\t\tbuffers.uvs.forEach( function ( uvBuffer, i ) {\n\n\t\t\t\t// subsequent uv buffers are called 'uv1', 'uv2', ...\n\t\t\t\tvar name = 'uv' + ( i + 1 ).toString();\n\n\t\t\t\t// the first uv buffer is just called 'uv'\n\t\t\t\tif ( i === 0 ) {\n\n\t\t\t\t\tname = 'uv';\n\n\t\t\t\t}\n\n\t\t\t\tgeo.setAttribute( name, new Float32BufferAttribute( buffers.uvs[ i ], 2 ) );\n\n\t\t\t} );\n\n\t\t\tif ( geoInfo.material && geoInfo.material.mappingType !== 'AllSame' ) {\n\n\t\t\t\t// Convert the material indices of each vertex into rendering groups on the geometry.\n\t\t\t\tvar prevMaterialIndex = buffers.materialIndex[ 0 ];\n\t\t\t\tvar startIndex = 0;\n\n\t\t\t\tbuffers.materialIndex.forEach( function ( currentIndex, i ) {\n\n\t\t\t\t\tif ( currentIndex !== prevMaterialIndex ) {\n\n\t\t\t\t\t\tgeo.addGroup( startIndex, i - startIndex, prevMaterialIndex );\n\n\t\t\t\t\t\tprevMaterialIndex = currentIndex;\n\t\t\t\t\t\tstartIndex = i;\n\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t\t// the loop above doesn't add the last group, do that here.\n\t\t\t\tif ( geo.groups.length > 0 ) {\n\n\t\t\t\t\tvar lastGroup = geo.groups[ geo.groups.length - 1 ];\n\t\t\t\t\tvar lastIndex = lastGroup.start + lastGroup.count;\n\n\t\t\t\t\tif ( lastIndex !== buffers.materialIndex.length ) {\n\n\t\t\t\t\t\tgeo.addGroup( lastIndex, buffers.materialIndex.length - lastIndex, prevMaterialIndex );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// case where there are multiple materials but the whole geometry is only\n\t\t\t\t// using one of them\n\t\t\t\tif ( geo.groups.length === 0 ) {\n\n\t\t\t\t\tgeo.addGroup( 0, buffers.materialIndex.length, buffers.materialIndex[ 0 ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.addMorphTargets( geo, geoNode, morphTargets, preTransform );\n\n\t\t\treturn geo;\n\n\t\t},\n\n\t\tparseGeoNode: function ( geoNode, skeleton ) {\n\n\t\t\tvar geoInfo = {};\n\n\t\t\tgeoInfo.vertexPositions = ( geoNode.Vertices !== undefined ) ? geoNode.Vertices.a : [];\n\t\t\tgeoInfo.vertexIndices = ( geoNode.PolygonVertexIndex !== undefined ) ? geoNode.PolygonVertexIndex.a : [];\n\n\t\t\tif ( geoNode.LayerElementColor ) {\n\n\t\t\t\tgeoInfo.color = this.parseVertexColors( geoNode.LayerElementColor[ 0 ] );\n\n\t\t\t}\n\n\t\t\tif ( geoNode.LayerElementMaterial ) {\n\n\t\t\t\tgeoInfo.material = this.parseMaterialIndices( geoNode.LayerElementMaterial[ 0 ] );\n\n\t\t\t}\n\n\t\t\tif ( geoNode.LayerElementNormal ) {\n\n\t\t\t\tgeoInfo.normal = this.parseNormals( geoNode.LayerElementNormal[ 0 ] );\n\n\t\t\t}\n\n\t\t\tif ( geoNode.LayerElementUV ) {\n\n\t\t\t\tgeoInfo.uv = [];\n\n\t\t\t\tvar i = 0;\n\t\t\t\twhile ( geoNode.LayerElementUV[ i ] ) {\n\n\t\t\t\t\tgeoInfo.uv.push( this.parseUVs( geoNode.LayerElementUV[ i ] ) );\n\t\t\t\t\ti ++;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tgeoInfo.weightTable = {};\n\n\t\t\tif ( skeleton !== null ) {\n\n\t\t\t\tgeoInfo.skeleton = skeleton;\n\n\t\t\t\tskeleton.rawBones.forEach( function ( rawBone, i ) {\n\n\t\t\t\t\t// loop over the bone's vertex indices and weights\n\t\t\t\t\trawBone.indices.forEach( function ( index, j ) {\n\n\t\t\t\t\t\tif ( geoInfo.weightTable[ index ] === undefined ) geoInfo.weightTable[ index ] = [];\n\n\t\t\t\t\t\tgeoInfo.weightTable[ index ].push( {\n\n\t\t\t\t\t\t\tid: i,\n\t\t\t\t\t\t\tweight: rawBone.weights[ j ],\n\n\t\t\t\t\t\t} );\n\n\t\t\t\t\t} );\n\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t\treturn geoInfo;\n\n\t\t},\n\n\t\tgenBuffers: function ( geoInfo ) {\n\n\t\t\tvar buffers = {\n\t\t\t\tvertex: [],\n\t\t\t\tnormal: [],\n\t\t\t\tcolors: [],\n\t\t\t\tuvs: [],\n\t\t\t\tmaterialIndex: [],\n\t\t\t\tvertexWeights: [],\n\t\t\t\tweightsIndices: [],\n\t\t\t};\n\n\t\t\tvar polygonIndex = 0;\n\t\t\tvar faceLength = 0;\n\t\t\tvar displayedWeightsWarning = false;\n\n\t\t\t// these will hold data for a single face\n\t\t\tvar facePositionIndexes = [];\n\t\t\tvar faceNormals = [];\n\t\t\tvar faceColors = [];\n\t\t\tvar faceUVs = [];\n\t\t\tvar faceWeights = [];\n\t\t\tvar faceWeightIndices = [];\n\n\t\t\tvar self = this;\n\t\t\tgeoInfo.vertexIndices.forEach( function ( vertexIndex, polygonVertexIndex ) {\n\n\t\t\t\tvar endOfFace = false;\n\n\t\t\t\t// Face index and vertex index arrays are combined in a single array\n\t\t\t\t// A cube with quad faces looks like this:\n\t\t\t\t// PolygonVertexIndex: *24 {\n\t\t\t\t//  a: 0, 1, 3, -3, 2, 3, 5, -5, 4, 5, 7, -7, 6, 7, 1, -1, 1, 7, 5, -4, 6, 0, 2, -5\n\t\t\t\t//  }\n\t\t\t\t// Negative numbers mark the end of a face - first face here is 0, 1, 3, -3\n\t\t\t\t// to find index of last vertex bit shift the index: ^ - 1\n\t\t\t\tif ( vertexIndex < 0 ) {\n\n\t\t\t\t\tvertexIndex = vertexIndex ^ - 1; // equivalent to ( x * -1 ) - 1\n\t\t\t\t\tendOfFace = true;\n\n\t\t\t\t}\n\n\t\t\t\tvar weightIndices = [];\n\t\t\t\tvar weights = [];\n\n\t\t\t\tfacePositionIndexes.push( vertexIndex * 3, vertexIndex * 3 + 1, vertexIndex * 3 + 2 );\n\n\t\t\t\tif ( geoInfo.color ) {\n\n\t\t\t\t\tvar data = getData( polygonVertexIndex, polygonIndex, vertexIndex, geoInfo.color );\n\n\t\t\t\t\tfaceColors.push( data[ 0 ], data[ 1 ], data[ 2 ] );\n\n\t\t\t\t}\n\n\t\t\t\tif ( geoInfo.skeleton ) {\n\n\t\t\t\t\tif ( geoInfo.weightTable[ vertexIndex ] !== undefined ) {\n\n\t\t\t\t\t\tgeoInfo.weightTable[ vertexIndex ].forEach( function ( wt ) {\n\n\t\t\t\t\t\t\tweights.push( wt.weight );\n\t\t\t\t\t\t\tweightIndices.push( wt.id );\n\n\t\t\t\t\t\t} );\n\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( weights.length > 4 ) {\n\n\t\t\t\t\t\tif ( ! displayedWeightsWarning ) {\n\n\t\t\t\t\t\t\tconsole.warn( 'THREE.FBXLoader: Vertex has more than 4 skinning weights assigned to vertex. Deleting additional weights.' );\n\t\t\t\t\t\t\tdisplayedWeightsWarning = true;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar wIndex = [ 0, 0, 0, 0 ];\n\t\t\t\t\t\tvar Weight = [ 0, 0, 0, 0 ];\n\n\t\t\t\t\t\tweights.forEach( function ( weight, weightIndex ) {\n\n\t\t\t\t\t\t\tvar currentWeight = weight;\n\t\t\t\t\t\t\tvar currentIndex = weightIndices[ weightIndex ];\n\n\t\t\t\t\t\t\tWeight.forEach( function ( comparedWeight, comparedWeightIndex, comparedWeightArray ) {\n\n\t\t\t\t\t\t\t\tif ( currentWeight > comparedWeight ) {\n\n\t\t\t\t\t\t\t\t\tcomparedWeightArray[ comparedWeightIndex ] = currentWeight;\n\t\t\t\t\t\t\t\t\tcurrentWeight = comparedWeight;\n\n\t\t\t\t\t\t\t\t\tvar tmp = wIndex[ comparedWeightIndex ];\n\t\t\t\t\t\t\t\t\twIndex[ comparedWeightIndex ] = currentIndex;\n\t\t\t\t\t\t\t\t\tcurrentIndex = tmp;\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} );\n\n\t\t\t\t\t\t} );\n\n\t\t\t\t\t\tweightIndices = wIndex;\n\t\t\t\t\t\tweights = Weight;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// if the weight array is shorter than 4 pad with 0s\n\t\t\t\t\twhile ( weights.length < 4 ) {\n\n\t\t\t\t\t\tweights.push( 0 );\n\t\t\t\t\t\tweightIndices.push( 0 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( var i = 0; i < 4; ++ i ) {\n\n\t\t\t\t\t\tfaceWeights.push( weights[ i ] );\n\t\t\t\t\t\tfaceWeightIndices.push( weightIndices[ i ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( geoInfo.normal ) {\n\n\t\t\t\t\tvar data = getData( polygonVertexIndex, polygonIndex, vertexIndex, geoInfo.normal );\n\n\t\t\t\t\tfaceNormals.push( data[ 0 ], data[ 1 ], data[ 2 ] );\n\n\t\t\t\t}\n\n\t\t\t\tif ( geoInfo.material && geoInfo.material.mappingType !== 'AllSame' ) {\n\n\t\t\t\t\tvar materialIndex = getData( polygonVertexIndex, polygonIndex, vertexIndex, geoInfo.material )[ 0 ];\n\n\t\t\t\t}\n\n\t\t\t\tif ( geoInfo.uv ) {\n\n\t\t\t\t\tgeoInfo.uv.forEach( function ( uv, i ) {\n\n\t\t\t\t\t\tvar data = getData( polygonVertexIndex, polygonIndex, vertexIndex, uv );\n\n\t\t\t\t\t\tif ( faceUVs[ i ] === undefined ) {\n\n\t\t\t\t\t\t\tfaceUVs[ i ] = [];\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tfaceUVs[ i ].push( data[ 0 ] );\n\t\t\t\t\t\tfaceUVs[ i ].push( data[ 1 ] );\n\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t\tfaceLength ++;\n\n\t\t\t\tif ( endOfFace ) {\n\n\t\t\t\t\tself.genFace( buffers, geoInfo, facePositionIndexes, materialIndex, faceNormals, faceColors, faceUVs, faceWeights, faceWeightIndices, faceLength );\n\n\t\t\t\t\tpolygonIndex ++;\n\t\t\t\t\tfaceLength = 0;\n\n\t\t\t\t\t// reset arrays for the next face\n\t\t\t\t\tfacePositionIndexes = [];\n\t\t\t\t\tfaceNormals = [];\n\t\t\t\t\tfaceColors = [];\n\t\t\t\t\tfaceUVs = [];\n\t\t\t\t\tfaceWeights = [];\n\t\t\t\t\tfaceWeightIndices = [];\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t\treturn buffers;\n\n\t\t},\n\n\t\t// Generate data for a single face in a geometry. If the face is a quad then split it into 2 tris\n\t\tgenFace: function ( buffers, geoInfo, facePositionIndexes, materialIndex, faceNormals, faceColors, faceUVs, faceWeights, faceWeightIndices, faceLength ) {\n\n\t\t\tfor ( var i = 2; i < faceLength; i ++ ) {\n\n\t\t\t\tbuffers.vertex.push( geoInfo.vertexPositions[ facePositionIndexes[ 0 ] ] );\n\t\t\t\tbuffers.vertex.push( geoInfo.vertexPositions[ facePositionIndexes[ 1 ] ] );\n\t\t\t\tbuffers.vertex.push( geoInfo.vertexPositions[ facePositionIndexes[ 2 ] ] );\n\n\t\t\t\tbuffers.vertex.push( geoInfo.vertexPositions[ facePositionIndexes[ ( i - 1 ) * 3 ] ] );\n\t\t\t\tbuffers.vertex.push( geoInfo.vertexPositions[ facePositionIndexes[ ( i - 1 ) * 3 + 1 ] ] );\n\t\t\t\tbuffers.vertex.push( geoInfo.vertexPositions[ facePositionIndexes[ ( i - 1 ) * 3 + 2 ] ] );\n\n\t\t\t\tbuffers.vertex.push( geoInfo.vertexPositions[ facePositionIndexes[ i * 3 ] ] );\n\t\t\t\tbuffers.vertex.push( geoInfo.vertexPositions[ facePositionIndexes[ i * 3 + 1 ] ] );\n\t\t\t\tbuffers.vertex.push( geoInfo.vertexPositions[ facePositionIndexes[ i * 3 + 2 ] ] );\n\n\t\t\t\tif ( geoInfo.skeleton ) {\n\n\t\t\t\t\tbuffers.vertexWeights.push( faceWeights[ 0 ] );\n\t\t\t\t\tbuffers.vertexWeights.push( faceWeights[ 1 ] );\n\t\t\t\t\tbuffers.vertexWeights.push( faceWeights[ 2 ] );\n\t\t\t\t\tbuffers.vertexWeights.push( faceWeights[ 3 ] );\n\n\t\t\t\t\tbuffers.vertexWeights.push( faceWeights[ ( i - 1 ) * 4 ] );\n\t\t\t\t\tbuffers.vertexWeights.push( faceWeights[ ( i - 1 ) * 4 + 1 ] );\n\t\t\t\t\tbuffers.vertexWeights.push( faceWeights[ ( i - 1 ) * 4 + 2 ] );\n\t\t\t\t\tbuffers.vertexWeights.push( faceWeights[ ( i - 1 ) * 4 + 3 ] );\n\n\t\t\t\t\tbuffers.vertexWeights.push( faceWeights[ i * 4 ] );\n\t\t\t\t\tbuffers.vertexWeights.push( faceWeights[ i * 4 + 1 ] );\n\t\t\t\t\tbuffers.vertexWeights.push( faceWeights[ i * 4 + 2 ] );\n\t\t\t\t\tbuffers.vertexWeights.push( faceWeights[ i * 4 + 3 ] );\n\n\t\t\t\t\tbuffers.weightsIndices.push( faceWeightIndices[ 0 ] );\n\t\t\t\t\tbuffers.weightsIndices.push( faceWeightIndices[ 1 ] );\n\t\t\t\t\tbuffers.weightsIndices.push( faceWeightIndices[ 2 ] );\n\t\t\t\t\tbuffers.weightsIndices.push( faceWeightIndices[ 3 ] );\n\n\t\t\t\t\tbuffers.weightsIndices.push( faceWeightIndices[ ( i - 1 ) * 4 ] );\n\t\t\t\t\tbuffers.weightsIndices.push( faceWeightIndices[ ( i - 1 ) * 4 + 1 ] );\n\t\t\t\t\tbuffers.weightsIndices.push( faceWeightIndices[ ( i - 1 ) * 4 + 2 ] );\n\t\t\t\t\tbuffers.weightsIndices.push( faceWeightIndices[ ( i - 1 ) * 4 + 3 ] );\n\n\t\t\t\t\tbuffers.weightsIndices.push( faceWeightIndices[ i * 4 ] );\n\t\t\t\t\tbuffers.weightsIndices.push( faceWeightIndices[ i * 4 + 1 ] );\n\t\t\t\t\tbuffers.weightsIndices.push( faceWeightIndices[ i * 4 + 2 ] );\n\t\t\t\t\tbuffers.weightsIndices.push( faceWeightIndices[ i * 4 + 3 ] );\n\n\t\t\t\t}\n\n\t\t\t\tif ( geoInfo.color ) {\n\n\t\t\t\t\tbuffers.colors.push( faceColors[ 0 ] );\n\t\t\t\t\tbuffers.colors.push( faceColors[ 1 ] );\n\t\t\t\t\tbuffers.colors.push( faceColors[ 2 ] );\n\n\t\t\t\t\tbuffers.colors.push( faceColors[ ( i - 1 ) * 3 ] );\n\t\t\t\t\tbuffers.colors.push( faceColors[ ( i - 1 ) * 3 + 1 ] );\n\t\t\t\t\tbuffers.colors.push( faceColors[ ( i - 1 ) * 3 + 2 ] );\n\n\t\t\t\t\tbuffers.colors.push( faceColors[ i * 3 ] );\n\t\t\t\t\tbuffers.colors.push( faceColors[ i * 3 + 1 ] );\n\t\t\t\t\tbuffers.colors.push( faceColors[ i * 3 + 2 ] );\n\n\t\t\t\t}\n\n\t\t\t\tif ( geoInfo.material && geoInfo.material.mappingType !== 'AllSame' ) {\n\n\t\t\t\t\tbuffers.materialIndex.push( materialIndex );\n\t\t\t\t\tbuffers.materialIndex.push( materialIndex );\n\t\t\t\t\tbuffers.materialIndex.push( materialIndex );\n\n\t\t\t\t}\n\n\t\t\t\tif ( geoInfo.normal ) {\n\n\t\t\t\t\tbuffers.normal.push( faceNormals[ 0 ] );\n\t\t\t\t\tbuffers.normal.push( faceNormals[ 1 ] );\n\t\t\t\t\tbuffers.normal.push( faceNormals[ 2 ] );\n\n\t\t\t\t\tbuffers.normal.push( faceNormals[ ( i - 1 ) * 3 ] );\n\t\t\t\t\tbuffers.normal.push( faceNormals[ ( i - 1 ) * 3 + 1 ] );\n\t\t\t\t\tbuffers.normal.push( faceNormals[ ( i - 1 ) * 3 + 2 ] );\n\n\t\t\t\t\tbuffers.normal.push( faceNormals[ i * 3 ] );\n\t\t\t\t\tbuffers.normal.push( faceNormals[ i * 3 + 1 ] );\n\t\t\t\t\tbuffers.normal.push( faceNormals[ i * 3 + 2 ] );\n\n\t\t\t\t}\n\n\t\t\t\tif ( geoInfo.uv ) {\n\n\t\t\t\t\tgeoInfo.uv.forEach( function ( uv, j ) {\n\n\t\t\t\t\t\tif ( buffers.uvs[ j ] === undefined ) buffers.uvs[ j ] = [];\n\n\t\t\t\t\t\tbuffers.uvs[ j ].push( faceUVs[ j ][ 0 ] );\n\t\t\t\t\t\tbuffers.uvs[ j ].push( faceUVs[ j ][ 1 ] );\n\n\t\t\t\t\t\tbuffers.uvs[ j ].push( faceUVs[ j ][ ( i - 1 ) * 2 ] );\n\t\t\t\t\t\tbuffers.uvs[ j ].push( faceUVs[ j ][ ( i - 1 ) * 2 + 1 ] );\n\n\t\t\t\t\t\tbuffers.uvs[ j ].push( faceUVs[ j ][ i * 2 ] );\n\t\t\t\t\t\tbuffers.uvs[ j ].push( faceUVs[ j ][ i * 2 + 1 ] );\n\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t\taddMorphTargets: function ( parentGeo, parentGeoNode, morphTargets, preTransform ) {\n\n\t\t\tif ( morphTargets.length === 0 ) return;\n\n\t\t\tparentGeo.morphTargetsRelative = true;\n\n\t\t\tparentGeo.morphAttributes.position = [];\n\t\t\t// parentGeo.morphAttributes.normal = []; // not implemented\n\n\t\t\tvar self = this;\n\t\t\tmorphTargets.forEach( function ( morphTarget ) {\n\n\t\t\t\tmorphTarget.rawTargets.forEach( function ( rawTarget ) {\n\n\t\t\t\t\tvar morphGeoNode = fbxTree.Objects.Geometry[ rawTarget.geoID ];\n\n\t\t\t\t\tif ( morphGeoNode !== undefined ) {\n\n\t\t\t\t\t\tself.genMorphGeometry( parentGeo, parentGeoNode, morphGeoNode, preTransform, rawTarget.name );\n\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t} );\n\n\t\t},\n\n\t\t// a morph geometry node is similar to a standard  node, and the node is also contained\n\t\t// in FBXTree.Objects.Geometry, however it can only have attributes for position, normal\n\t\t// and a special attribute Index defining which vertices of the original geometry are affected\n\t\t// Normal and position attributes only have data for the vertices that are affected by the morph\n\t\tgenMorphGeometry: function ( parentGeo, parentGeoNode, morphGeoNode, preTransform, name ) {\n\n\t\t\tvar vertexIndices = ( parentGeoNode.PolygonVertexIndex !== undefined ) ? parentGeoNode.PolygonVertexIndex.a : [];\n\n\t\t\tvar morphPositionsSparse = ( morphGeoNode.Vertices !== undefined ) ? morphGeoNode.Vertices.a : [];\n\t\t\tvar indices = ( morphGeoNode.Indexes !== undefined ) ? morphGeoNode.Indexes.a : [];\n\n\t\t\tvar length = parentGeo.attributes.position.count * 3;\n\t\t\tvar morphPositions = new Float32Array( length );\n\n\t\t\tfor ( var i = 0; i < indices.length; i ++ ) {\n\n\t\t\t\tvar morphIndex = indices[ i ] * 3;\n\n\t\t\t\tmorphPositions[ morphIndex ] = morphPositionsSparse[ i * 3 ];\n\t\t\t\tmorphPositions[ morphIndex + 1 ] = morphPositionsSparse[ i * 3 + 1 ];\n\t\t\t\tmorphPositions[ morphIndex + 2 ] = morphPositionsSparse[ i * 3 + 2 ];\n\n\t\t\t}\n\n\t\t\t// TODO: add morph normal support\n\t\t\tvar morphGeoInfo = {\n\t\t\t\tvertexIndices: vertexIndices,\n\t\t\t\tvertexPositions: morphPositions,\n\n\t\t\t};\n\n\t\t\tvar morphBuffers = this.genBuffers( morphGeoInfo );\n\n\t\t\tvar positionAttribute = new Float32BufferAttribute( morphBuffers.vertex, 3 );\n\t\t\tpositionAttribute.name = name || morphGeoNode.attrName;\n\n\t\t\tpreTransform.applyToBufferAttribute( positionAttribute );\n\n\t\t\tparentGeo.morphAttributes.position.push( positionAttribute );\n\n\t\t},\n\n\t\t// Parse normal from FBXTree.Objects.Geometry.LayerElementNormal if it exists\n\t\tparseNormals: function ( NormalNode ) {\n\n\t\t\tvar mappingType = NormalNode.MappingInformationType;\n\t\t\tvar referenceType = NormalNode.ReferenceInformationType;\n\t\t\tvar buffer = NormalNode.Normals.a;\n\t\t\tvar indexBuffer = [];\n\t\t\tif ( referenceType === 'IndexToDirect' ) {\n\n\t\t\t\tif ( 'NormalIndex' in NormalNode ) {\n\n\t\t\t\t\tindexBuffer = NormalNode.NormalIndex.a;\n\n\t\t\t\t} else if ( 'NormalsIndex' in NormalNode ) {\n\n\t\t\t\t\tindexBuffer = NormalNode.NormalsIndex.a;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tdataSize: 3,\n\t\t\t\tbuffer: buffer,\n\t\t\t\tindices: indexBuffer,\n\t\t\t\tmappingType: mappingType,\n\t\t\t\treferenceType: referenceType\n\t\t\t};\n\n\t\t},\n\n\t\t// Parse UVs from FBXTree.Objects.Geometry.LayerElementUV if it exists\n\t\tparseUVs: function ( UVNode ) {\n\n\t\t\tvar mappingType = UVNode.MappingInformationType;\n\t\t\tvar referenceType = UVNode.ReferenceInformationType;\n\t\t\tvar buffer = UVNode.UV.a;\n\t\t\tvar indexBuffer = [];\n\t\t\tif ( referenceType === 'IndexToDirect' ) {\n\n\t\t\t\tindexBuffer = UVNode.UVIndex.a;\n\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tdataSize: 2,\n\t\t\t\tbuffer: buffer,\n\t\t\t\tindices: indexBuffer,\n\t\t\t\tmappingType: mappingType,\n\t\t\t\treferenceType: referenceType\n\t\t\t};\n\n\t\t},\n\n\t\t// Parse Vertex Colors from FBXTree.Objects.Geometry.LayerElementColor if it exists\n\t\tparseVertexColors: function ( ColorNode ) {\n\n\t\t\tvar mappingType = ColorNode.MappingInformationType;\n\t\t\tvar referenceType = ColorNode.ReferenceInformationType;\n\t\t\tvar buffer = ColorNode.Colors.a;\n\t\t\tvar indexBuffer = [];\n\t\t\tif ( referenceType === 'IndexToDirect' ) {\n\n\t\t\t\tindexBuffer = ColorNode.ColorIndex.a;\n\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tdataSize: 4,\n\t\t\t\tbuffer: buffer,\n\t\t\t\tindices: indexBuffer,\n\t\t\t\tmappingType: mappingType,\n\t\t\t\treferenceType: referenceType\n\t\t\t};\n\n\t\t},\n\n\t\t// Parse mapping and material data in FBXTree.Objects.Geometry.LayerElementMaterial if it exists\n\t\tparseMaterialIndices: function ( MaterialNode ) {\n\n\t\t\tvar mappingType = MaterialNode.MappingInformationType;\n\t\t\tvar referenceType = MaterialNode.ReferenceInformationType;\n\n\t\t\tif ( mappingType === 'NoMappingInformation' ) {\n\n\t\t\t\treturn {\n\t\t\t\t\tdataSize: 1,\n\t\t\t\t\tbuffer: [ 0 ],\n\t\t\t\t\tindices: [ 0 ],\n\t\t\t\t\tmappingType: 'AllSame',\n\t\t\t\t\treferenceType: referenceType\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\tvar materialIndexBuffer = MaterialNode.Materials.a;\n\n\t\t\t// Since materials are stored as indices, there's a bit of a mismatch between FBX and what\n\t\t\t// we expect.So we create an intermediate buffer that points to the index in the buffer,\n\t\t\t// for conforming with the other functions we've written for other data.\n\t\t\tvar materialIndices = [];\n\n\t\t\tfor ( var i = 0; i < materialIndexBuffer.length; ++ i ) {\n\n\t\t\t\tmaterialIndices.push( i );\n\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tdataSize: 1,\n\t\t\t\tbuffer: materialIndexBuffer,\n\t\t\t\tindices: materialIndices,\n\t\t\t\tmappingType: mappingType,\n\t\t\t\treferenceType: referenceType\n\t\t\t};\n\n\t\t},\n\n\t\t// Generate a NurbGeometry from a node in FBXTree.Objects.Geometry\n\t\tparseNurbsGeometry: function ( geoNode ) {\n\n\t\t\tif ( NURBSCurve === undefined ) {\n\n\t\t\t\tconsole.error( 'THREE.FBXLoader: The loader relies on NURBSCurve for any nurbs present in the model. Nurbs will show up as empty geometry.' );\n\t\t\t\treturn new BufferGeometry();\n\n\t\t\t}\n\n\t\t\tvar order = parseInt( geoNode.Order );\n\n\t\t\tif ( isNaN( order ) ) {\n\n\t\t\t\tconsole.error( 'THREE.FBXLoader: Invalid Order %s given for geometry ID: %s', geoNode.Order, geoNode.id );\n\t\t\t\treturn new BufferGeometry();\n\n\t\t\t}\n\n\t\t\tvar degree = order - 1;\n\n\t\t\tvar knots = geoNode.KnotVector.a;\n\t\t\tvar controlPoints = [];\n\t\t\tvar pointsValues = geoNode.Points.a;\n\n\t\t\tfor ( var i = 0, l = pointsValues.length; i < l; i += 4 ) {\n\n\t\t\t\tcontrolPoints.push( new Vector4().fromArray( pointsValues, i ) );\n\n\t\t\t}\n\n\t\t\tvar startKnot, endKnot;\n\n\t\t\tif ( geoNode.Form === 'Closed' ) {\n\n\t\t\t\tcontrolPoints.push( controlPoints[ 0 ] );\n\n\t\t\t} else if ( geoNode.Form === 'Periodic' ) {\n\n\t\t\t\tstartKnot = degree;\n\t\t\t\tendKnot = knots.length - 1 - startKnot;\n\n\t\t\t\tfor ( var i = 0; i < degree; ++ i ) {\n\n\t\t\t\t\tcontrolPoints.push( controlPoints[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar curve = new NURBSCurve( degree, knots, controlPoints, startKnot, endKnot );\n\t\t\tvar vertices = curve.getPoints( controlPoints.length * 7 );\n\n\t\t\tvar positions = new Float32Array( vertices.length * 3 );\n\n\t\t\tvertices.forEach( function ( vertex, i ) {\n\n\t\t\t\tvertex.toArray( positions, i * 3 );\n\n\t\t\t} );\n\n\t\t\tvar geometry = new BufferGeometry();\n\t\t\tgeometry.setAttribute( 'position', new BufferAttribute( positions, 3 ) );\n\n\t\t\treturn geometry;\n\n\t\t},\n\n\t};\n\n\t// parse animation data from FBXTree\n\tfunction AnimationParser() {}\n\n\tAnimationParser.prototype = {\n\n\t\tconstructor: AnimationParser,\n\n\t\t// take raw animation clips and turn them into three.js animation clips\n\t\tparse: function () {\n\n\t\t\tvar animationClips = [];\n\n\t\t\tvar rawClips = this.parseClips();\n\n\t\t\tif ( rawClips !== undefined ) {\n\n\t\t\t\tfor ( var key in rawClips ) {\n\n\t\t\t\t\tvar rawClip = rawClips[ key ];\n\n\t\t\t\t\tvar clip = this.addClip( rawClip );\n\n\t\t\t\t\tanimationClips.push( clip );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn animationClips;\n\n\t\t},\n\n\t\tparseClips: function () {\n\n\t\t\t// since the actual transformation data is stored in FBXTree.Objects.AnimationCurve,\n\t\t\t// if this is undefined we can safely assume there are no animations\n\t\t\tif ( fbxTree.Objects.AnimationCurve === undefined ) return undefined;\n\n\t\t\tvar curveNodesMap = this.parseAnimationCurveNodes();\n\n\t\t\tthis.parseAnimationCurves( curveNodesMap );\n\n\t\t\tvar layersMap = this.parseAnimationLayers( curveNodesMap );\n\t\t\tvar rawClips = this.parseAnimStacks( layersMap );\n\n\t\t\treturn rawClips;\n\n\t\t},\n\n\t\t// parse nodes in FBXTree.Objects.AnimationCurveNode\n\t\t// each AnimationCurveNode holds data for an animation transform for a model (e.g. left arm rotation )\n\t\t// and is referenced by an AnimationLayer\n\t\tparseAnimationCurveNodes: function () {\n\n\t\t\tvar rawCurveNodes = fbxTree.Objects.AnimationCurveNode;\n\n\t\t\tvar curveNodesMap = new Map();\n\n\t\t\tfor ( var nodeID in rawCurveNodes ) {\n\n\t\t\t\tvar rawCurveNode = rawCurveNodes[ nodeID ];\n\n\t\t\t\tif ( rawCurveNode.attrName.match( /S|R|T|DeformPercent/ ) !== null ) {\n\n\t\t\t\t\tvar curveNode = {\n\n\t\t\t\t\t\tid: rawCurveNode.id,\n\t\t\t\t\t\tattr: rawCurveNode.attrName,\n\t\t\t\t\t\tcurves: {},\n\n\t\t\t\t\t};\n\n\t\t\t\t\tcurveNodesMap.set( curveNode.id, curveNode );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn curveNodesMap;\n\n\t\t},\n\n\t\t// parse nodes in FBXTree.Objects.AnimationCurve and connect them up to\n\t\t// previously parsed AnimationCurveNodes. Each AnimationCurve holds data for a single animated\n\t\t// axis ( e.g. times and values of x rotation)\n\t\tparseAnimationCurves: function ( curveNodesMap ) {\n\n\t\t\tvar rawCurves = fbxTree.Objects.AnimationCurve;\n\n\t\t\t// TODO: Many values are identical up to roundoff error, but won't be optimised\n\t\t\t// e.g. position times: [0, 0.4, 0. 8]\n\t\t\t// position values: [7.23538335023477e-7, 93.67518615722656, -0.9982695579528809, 7.23538335023477e-7, 93.67518615722656, -0.9982695579528809, 7.235384487103147e-7, 93.67520904541016, -0.9982695579528809]\n\t\t\t// clearly, this should be optimised to\n\t\t\t// times: [0], positions [7.23538335023477e-7, 93.67518615722656, -0.9982695579528809]\n\t\t\t// this shows up in nearly every FBX file, and generally time array is length > 100\n\n\t\t\tfor ( var nodeID in rawCurves ) {\n\n\t\t\t\tvar animationCurve = {\n\n\t\t\t\t\tid: rawCurves[ nodeID ].id,\n\t\t\t\t\ttimes: rawCurves[ nodeID ].KeyTime.a.map( convertFBXTimeToSeconds ),\n\t\t\t\t\tvalues: rawCurves[ nodeID ].KeyValueFloat.a,\n\n\t\t\t\t};\n\n\t\t\t\tvar relationships = connections.get( animationCurve.id );\n\n\t\t\t\tif ( relationships !== undefined ) {\n\n\t\t\t\t\tvar animationCurveID = relationships.parents[ 0 ].ID;\n\t\t\t\t\tvar animationCurveRelationship = relationships.parents[ 0 ].relationship;\n\n\t\t\t\t\tif ( animationCurveRelationship.match( /X/ ) ) {\n\n\t\t\t\t\t\tcurveNodesMap.get( animationCurveID ).curves[ 'x' ] = animationCurve;\n\n\t\t\t\t\t} else if ( animationCurveRelationship.match( /Y/ ) ) {\n\n\t\t\t\t\t\tcurveNodesMap.get( animationCurveID ).curves[ 'y' ] = animationCurve;\n\n\t\t\t\t\t} else if ( animationCurveRelationship.match( /Z/ ) ) {\n\n\t\t\t\t\t\tcurveNodesMap.get( animationCurveID ).curves[ 'z' ] = animationCurve;\n\n\t\t\t\t\t} else if ( animationCurveRelationship.match( /d|DeformPercent/ ) && curveNodesMap.has( animationCurveID ) ) {\n\n\t\t\t\t\t\tcurveNodesMap.get( animationCurveID ).curves[ 'morph' ] = animationCurve;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t\t// parse nodes in FBXTree.Objects.AnimationLayer. Each layers holds references\n\t\t// to various AnimationCurveNodes and is referenced by an AnimationStack node\n\t\t// note: theoretically a stack can have multiple layers, however in practice there always seems to be one per stack\n\t\tparseAnimationLayers: function ( curveNodesMap ) {\n\n\t\t\tvar rawLayers = fbxTree.Objects.AnimationLayer;\n\n\t\t\tvar layersMap = new Map();\n\n\t\t\tfor ( var nodeID in rawLayers ) {\n\n\t\t\t\tvar layerCurveNodes = [];\n\n\t\t\t\tvar connection = connections.get( parseInt( nodeID ) );\n\n\t\t\t\tif ( connection !== undefined ) {\n\n\t\t\t\t\t// all the animationCurveNodes used in the layer\n\t\t\t\t\tvar children = connection.children;\n\n\t\t\t\t\tchildren.forEach( function ( child, i ) {\n\n\t\t\t\t\t\tif ( curveNodesMap.has( child.ID ) ) {\n\n\t\t\t\t\t\t\tvar curveNode = curveNodesMap.get( child.ID );\n\n\t\t\t\t\t\t\t// check that the curves are defined for at least one axis, otherwise ignore the curveNode\n\t\t\t\t\t\t\tif ( curveNode.curves.x !== undefined || curveNode.curves.y !== undefined || curveNode.curves.z !== undefined ) {\n\n\t\t\t\t\t\t\t\tif ( layerCurveNodes[ i ] === undefined ) {\n\n\t\t\t\t\t\t\t\t\tvar modelID = connections.get( child.ID ).parents.filter( function ( parent ) {\n\n\t\t\t\t\t\t\t\t\t\treturn parent.relationship !== undefined;\n\n\t\t\t\t\t\t\t\t\t} )[ 0 ].ID;\n\n\t\t\t\t\t\t\t\t\tif ( modelID !== undefined ) {\n\n\t\t\t\t\t\t\t\t\t\tvar rawModel = fbxTree.Objects.Model[ modelID.toString() ];\n\n\t\t\t\t\t\t\t\t\t\tvar node = {\n\n\t\t\t\t\t\t\t\t\t\t\tmodelName: rawModel.attrName ? PropertyBinding.sanitizeNodeName( rawModel.attrName ) : '',\n\t\t\t\t\t\t\t\t\t\t\tID: rawModel.id,\n\t\t\t\t\t\t\t\t\t\t\tinitialPosition: [ 0, 0, 0 ],\n\t\t\t\t\t\t\t\t\t\t\tinitialRotation: [ 0, 0, 0 ],\n\t\t\t\t\t\t\t\t\t\t\tinitialScale: [ 1, 1, 1 ],\n\n\t\t\t\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\t\t\t\tsceneGraph.traverse( function ( child ) {\n\n\t\t\t\t\t\t\t\t\t\t\tif ( child.ID === rawModel.id ) {\n\n\t\t\t\t\t\t\t\t\t\t\t\tnode.transform = child.matrix;\n\n\t\t\t\t\t\t\t\t\t\t\t\tif ( child.userData.transformData ) node.eulerOrder = child.userData.transformData.eulerOrder;\n\n\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t} );\n\n\t\t\t\t\t\t\t\t\t\tif ( ! node.transform ) node.transform = new Matrix4();\n\n\t\t\t\t\t\t\t\t\t\t// if the animated model is pre rotated, we'll have to apply the pre rotations to every\n\t\t\t\t\t\t\t\t\t\t// animation value as well\n\t\t\t\t\t\t\t\t\t\tif ( 'PreRotation' in rawModel ) node.preRotation = rawModel.PreRotation.value;\n\t\t\t\t\t\t\t\t\t\tif ( 'PostRotation' in rawModel ) node.postRotation = rawModel.PostRotation.value;\n\n\t\t\t\t\t\t\t\t\t\tlayerCurveNodes[ i ] = node;\n\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tif ( layerCurveNodes[ i ] ) layerCurveNodes[ i ][ curveNode.attr ] = curveNode;\n\n\t\t\t\t\t\t\t} else if ( curveNode.curves.morph !== undefined ) {\n\n\t\t\t\t\t\t\t\tif ( layerCurveNodes[ i ] === undefined ) {\n\n\t\t\t\t\t\t\t\t\tvar deformerID = connections.get( child.ID ).parents.filter( function ( parent ) {\n\n\t\t\t\t\t\t\t\t\t\treturn parent.relationship !== undefined;\n\n\t\t\t\t\t\t\t\t\t} )[ 0 ].ID;\n\n\t\t\t\t\t\t\t\t\tvar morpherID = connections.get( deformerID ).parents[ 0 ].ID;\n\t\t\t\t\t\t\t\t\tvar geoID = connections.get( morpherID ).parents[ 0 ].ID;\n\n\t\t\t\t\t\t\t\t\t// assuming geometry is not used in more than one model\n\t\t\t\t\t\t\t\t\tvar modelID = connections.get( geoID ).parents[ 0 ].ID;\n\n\t\t\t\t\t\t\t\t\tvar rawModel = fbxTree.Objects.Model[ modelID ];\n\n\t\t\t\t\t\t\t\t\tvar node = {\n\n\t\t\t\t\t\t\t\t\t\tmodelName: rawModel.attrName ? PropertyBinding.sanitizeNodeName( rawModel.attrName ) : '',\n\t\t\t\t\t\t\t\t\t\tmorphName: fbxTree.Objects.Deformer[ deformerID ].attrName,\n\n\t\t\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\t\t\tlayerCurveNodes[ i ] = node;\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tlayerCurveNodes[ i ][ curveNode.attr ] = curveNode;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} );\n\n\t\t\t\t\tlayersMap.set( parseInt( nodeID ), layerCurveNodes );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn layersMap;\n\n\t\t},\n\n\t\t// parse nodes in FBXTree.Objects.AnimationStack. These are the top level node in the animation\n\t\t// hierarchy. Each Stack node will be used to create a AnimationClip\n\t\tparseAnimStacks: function ( layersMap ) {\n\n\t\t\tvar rawStacks = fbxTree.Objects.AnimationStack;\n\n\t\t\t// connect the stacks (clips) up to the layers\n\t\t\tvar rawClips = {};\n\n\t\t\tfor ( var nodeID in rawStacks ) {\n\n\t\t\t\tvar children = connections.get( parseInt( nodeID ) ).children;\n\n\t\t\t\tif ( children.length > 1 ) {\n\n\t\t\t\t\t// it seems like stacks will always be associated with a single layer. But just in case there are files\n\t\t\t\t\t// where there are multiple layers per stack, we'll display a warning\n\t\t\t\t\tconsole.warn( 'THREE.FBXLoader: Encountered an animation stack with multiple layers, this is currently not supported. Ignoring subsequent layers.' );\n\n\t\t\t\t}\n\n\t\t\t\tvar layer = layersMap.get( children[ 0 ].ID );\n\n\t\t\t\trawClips[ nodeID ] = {\n\n\t\t\t\t\tname: rawStacks[ nodeID ].attrName,\n\t\t\t\t\tlayer: layer,\n\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\treturn rawClips;\n\n\t\t},\n\n\t\taddClip: function ( rawClip ) {\n\n\t\t\tvar tracks = [];\n\n\t\t\tvar self = this;\n\t\t\trawClip.layer.forEach( function ( rawTracks ) {\n\n\t\t\t\ttracks = tracks.concat( self.generateTracks( rawTracks ) );\n\n\t\t\t} );\n\n\t\t\treturn new AnimationClip( rawClip.name, - 1, tracks );\n\n\t\t},\n\n\t\tgenerateTracks: function ( rawTracks ) {\n\n\t\t\tvar tracks = [];\n\n\t\t\tvar initialPosition = new Vector3();\n\t\t\tvar initialRotation = new Quaternion();\n\t\t\tvar initialScale = new Vector3();\n\n\t\t\tif ( rawTracks.transform ) rawTracks.transform.decompose( initialPosition, initialRotation, initialScale );\n\n\t\t\tinitialPosition = initialPosition.toArray();\n\t\t\tinitialRotation = new Euler().setFromQuaternion( initialRotation, rawTracks.eulerOrder ).toArray();\n\t\t\tinitialScale = initialScale.toArray();\n\n\t\t\tif ( rawTracks.T !== undefined && Object.keys( rawTracks.T.curves ).length > 0 ) {\n\n\t\t\t\tvar positionTrack = this.generateVectorTrack( rawTracks.modelName, rawTracks.T.curves, initialPosition, 'position' );\n\t\t\t\tif ( positionTrack !== undefined ) tracks.push( positionTrack );\n\n\t\t\t}\n\n\t\t\tif ( rawTracks.R !== undefined && Object.keys( rawTracks.R.curves ).length > 0 ) {\n\n\t\t\t\tvar rotationTrack = this.generateRotationTrack( rawTracks.modelName, rawTracks.R.curves, initialRotation, rawTracks.preRotation, rawTracks.postRotation, rawTracks.eulerOrder );\n\t\t\t\tif ( rotationTrack !== undefined ) tracks.push( rotationTrack );\n\n\t\t\t}\n\n\t\t\tif ( rawTracks.S !== undefined && Object.keys( rawTracks.S.curves ).length > 0 ) {\n\n\t\t\t\tvar scaleTrack = this.generateVectorTrack( rawTracks.modelName, rawTracks.S.curves, initialScale, 'scale' );\n\t\t\t\tif ( scaleTrack !== undefined ) tracks.push( scaleTrack );\n\n\t\t\t}\n\n\t\t\tif ( rawTracks.DeformPercent !== undefined ) {\n\n\t\t\t\tvar morphTrack = this.generateMorphTrack( rawTracks );\n\t\t\t\tif ( morphTrack !== undefined ) tracks.push( morphTrack );\n\n\t\t\t}\n\n\t\t\treturn tracks;\n\n\t\t},\n\n\t\tgenerateVectorTrack: function ( modelName, curves, initialValue, type ) {\n\n\t\t\tvar times = this.getTimesForAllAxes( curves );\n\t\t\tvar values = this.getKeyframeTrackValues( times, curves, initialValue );\n\n\t\t\treturn new VectorKeyframeTrack( modelName + '.' + type, times, values );\n\n\t\t},\n\n\t\tgenerateRotationTrack: function ( modelName, curves, initialValue, preRotation, postRotation, eulerOrder ) {\n\n\t\t\tif ( curves.x !== undefined ) {\n\n\t\t\t\tthis.interpolateRotations( curves.x );\n\t\t\t\tcurves.x.values = curves.x.values.map( _Math.degToRad );\n\n\t\t\t}\n\t\t\tif ( curves.y !== undefined ) {\n\n\t\t\t\tthis.interpolateRotations( curves.y );\n\t\t\t\tcurves.y.values = curves.y.values.map( _Math.degToRad );\n\n\t\t\t}\n\t\t\tif ( curves.z !== undefined ) {\n\n\t\t\t\tthis.interpolateRotations( curves.z );\n\t\t\t\tcurves.z.values = curves.z.values.map( _Math.degToRad );\n\n\t\t\t}\n\n\t\t\tvar times = this.getTimesForAllAxes( curves );\n\t\t\tvar values = this.getKeyframeTrackValues( times, curves, initialValue );\n\n\t\t\tif ( preRotation !== undefined ) {\n\n\t\t\t\tpreRotation = preRotation.map( _Math.degToRad );\n\t\t\t\tpreRotation.push( eulerOrder );\n\n\t\t\t\tpreRotation = new Euler().fromArray( preRotation );\n\t\t\t\tpreRotation = new Quaternion().setFromEuler( preRotation );\n\n\t\t\t}\n\n\t\t\tif ( postRotation !== undefined ) {\n\n\t\t\t\tpostRotation = postRotation.map( _Math.degToRad );\n\t\t\t\tpostRotation.push( eulerOrder );\n\n\t\t\t\tpostRotation = new Euler().fromArray( postRotation );\n\t\t\t\tpostRotation = new Quaternion().setFromEuler( postRotation ).inverse();\n\n\t\t\t}\n\n\t\t\tvar quaternion = new Quaternion();\n\t\t\tvar euler = new Euler();\n\n\t\t\tvar quaternionValues = [];\n\n\t\t\tfor ( var i = 0; i < values.length; i += 3 ) {\n\n\t\t\t\teuler.set( values[ i ], values[ i + 1 ], values[ i + 2 ], eulerOrder );\n\n\t\t\t\tquaternion.setFromEuler( euler );\n\n\t\t\t\tif ( preRotation !== undefined ) quaternion.premultiply( preRotation );\n\t\t\t\tif ( postRotation !== undefined ) quaternion.multiply( postRotation );\n\n\t\t\t\tquaternion.toArray( quaternionValues, ( i / 3 ) * 4 );\n\n\t\t\t}\n\n\t\t\treturn new QuaternionKeyframeTrack( modelName + '.quaternion', times, quaternionValues );\n\n\t\t},\n\n\t\tgenerateMorphTrack: function ( rawTracks ) {\n\n\t\t\tvar curves = rawTracks.DeformPercent.curves.morph;\n\t\t\tvar values = curves.values.map( function ( val ) {\n\n\t\t\t\treturn val / 100;\n\n\t\t\t} );\n\n\t\t\tvar morphNum = sceneGraph.getObjectByName( rawTracks.modelName ).morphTargetDictionary[ rawTracks.morphName ];\n\n\t\t\treturn new NumberKeyframeTrack( rawTracks.modelName + '.morphTargetInfluences[' + morphNum + ']', curves.times, values );\n\n\t\t},\n\n\t\t// For all animated objects, times are defined separately for each axis\n\t\t// Here we'll combine the times into one sorted array without duplicates\n\t\tgetTimesForAllAxes: function ( curves ) {\n\n\t\t\tvar times = [];\n\n\t\t\t// first join together the times for each axis, if defined\n\t\t\tif ( curves.x !== undefined ) times = times.concat( curves.x.times );\n\t\t\tif ( curves.y !== undefined ) times = times.concat( curves.y.times );\n\t\t\tif ( curves.z !== undefined ) times = times.concat( curves.z.times );\n\n\t\t\t// then sort them and remove duplicates\n\t\t\ttimes = times.sort( function ( a, b ) {\n\n\t\t\t\treturn a - b;\n\n\t\t\t} ).filter( function ( elem, index, array ) {\n\n\t\t\t\treturn array.indexOf( elem ) == index;\n\n\t\t\t} );\n\n\t\t\treturn times;\n\n\t\t},\n\n\t\tgetKeyframeTrackValues: function ( times, curves, initialValue ) {\n\n\t\t\tvar prevValue = initialValue;\n\n\t\t\tvar values = [];\n\n\t\t\tvar xIndex = - 1;\n\t\t\tvar yIndex = - 1;\n\t\t\tvar zIndex = - 1;\n\n\t\t\ttimes.forEach( function ( time ) {\n\n\t\t\t\tif ( curves.x ) xIndex = curves.x.times.indexOf( time );\n\t\t\t\tif ( curves.y ) yIndex = curves.y.times.indexOf( time );\n\t\t\t\tif ( curves.z ) zIndex = curves.z.times.indexOf( time );\n\n\t\t\t\t// if there is an x value defined for this frame, use that\n\t\t\t\tif ( xIndex !== - 1 ) {\n\n\t\t\t\t\tvar xValue = curves.x.values[ xIndex ];\n\t\t\t\t\tvalues.push( xValue );\n\t\t\t\t\tprevValue[ 0 ] = xValue;\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// otherwise use the x value from the previous frame\n\t\t\t\t\tvalues.push( prevValue[ 0 ] );\n\n\t\t\t\t}\n\n\t\t\t\tif ( yIndex !== - 1 ) {\n\n\t\t\t\t\tvar yValue = curves.y.values[ yIndex ];\n\t\t\t\t\tvalues.push( yValue );\n\t\t\t\t\tprevValue[ 1 ] = yValue;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tvalues.push( prevValue[ 1 ] );\n\n\t\t\t\t}\n\n\t\t\t\tif ( zIndex !== - 1 ) {\n\n\t\t\t\t\tvar zValue = curves.z.values[ zIndex ];\n\t\t\t\t\tvalues.push( zValue );\n\t\t\t\t\tprevValue[ 2 ] = zValue;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tvalues.push( prevValue[ 2 ] );\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t\treturn values;\n\n\t\t},\n\n\t\t// Rotations are defined as Euler angles which can have values  of any size\n\t\t// These will be converted to quaternions which don't support values greater than\n\t\t// PI, so we'll interpolate large rotations\n\t\tinterpolateRotations: function ( curve ) {\n\n\t\t\tfor ( var i = 1; i < curve.values.length; i ++ ) {\n\n\t\t\t\tvar initialValue = curve.values[ i - 1 ];\n\t\t\t\tvar valuesSpan = curve.values[ i ] - initialValue;\n\n\t\t\t\tvar absoluteSpan = Math.abs( valuesSpan );\n\n\t\t\t\tif ( absoluteSpan >= 180 ) {\n\n\t\t\t\t\tvar numSubIntervals = absoluteSpan / 180;\n\n\t\t\t\t\tvar step = valuesSpan / numSubIntervals;\n\t\t\t\t\tvar nextValue = initialValue + step;\n\n\t\t\t\t\tvar initialTime = curve.times[ i - 1 ];\n\t\t\t\t\tvar timeSpan = curve.times[ i ] - initialTime;\n\t\t\t\t\tvar interval = timeSpan / numSubIntervals;\n\t\t\t\t\tvar nextTime = initialTime + interval;\n\n\t\t\t\t\tvar interpolatedTimes = [];\n\t\t\t\t\tvar interpolatedValues = [];\n\n\t\t\t\t\twhile ( nextTime < curve.times[ i ] ) {\n\n\t\t\t\t\t\tinterpolatedTimes.push( nextTime );\n\t\t\t\t\t\tnextTime += interval;\n\n\t\t\t\t\t\tinterpolatedValues.push( nextValue );\n\t\t\t\t\t\tnextValue += step;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcurve.times = inject( curve.times, i, interpolatedTimes );\n\t\t\t\t\tcurve.values = inject( curve.values, i, interpolatedValues );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t};\n\n\t// parse an FBX file in ASCII format\n\tfunction TextParser() {}\n\n\tTextParser.prototype = {\n\n\t\tconstructor: TextParser,\n\n\t\tgetPrevNode: function () {\n\n\t\t\treturn this.nodeStack[ this.currentIndent - 2 ];\n\n\t\t},\n\n\t\tgetCurrentNode: function () {\n\n\t\t\treturn this.nodeStack[ this.currentIndent - 1 ];\n\n\t\t},\n\n\t\tgetCurrentProp: function () {\n\n\t\t\treturn this.currentProp;\n\n\t\t},\n\n\t\tpushStack: function ( node ) {\n\n\t\t\tthis.nodeStack.push( node );\n\t\t\tthis.currentIndent += 1;\n\n\t\t},\n\n\t\tpopStack: function () {\n\n\t\t\tthis.nodeStack.pop();\n\t\t\tthis.currentIndent -= 1;\n\n\t\t},\n\n\t\tsetCurrentProp: function ( val, name ) {\n\n\t\t\tthis.currentProp = val;\n\t\t\tthis.currentPropName = name;\n\n\t\t},\n\n\t\tparse: function ( text ) {\n\n\t\t\tthis.currentIndent = 0;\n\n\t\t\tthis.allNodes = new FBXTree();\n\t\t\tthis.nodeStack = [];\n\t\t\tthis.currentProp = [];\n\t\t\tthis.currentPropName = '';\n\n\t\t\tvar self = this;\n\n\t\t\tvar split = text.split( /[\\r\\n]+/ );\n\n\t\t\tsplit.forEach( function ( line, i ) {\n\n\t\t\t\tvar matchComment = line.match( /^[\\s\\t]*;/ );\n\t\t\t\tvar matchEmpty = line.match( /^[\\s\\t]*$/ );\n\n\t\t\t\tif ( matchComment || matchEmpty ) return;\n\n\t\t\t\tvar matchBeginning = line.match( '^\\\\t{' + self.currentIndent + '}(\\\\w+):(.*){', '' );\n\t\t\t\tvar matchProperty = line.match( '^\\\\t{' + ( self.currentIndent ) + '}(\\\\w+):[\\\\s\\\\t\\\\r\\\\n](.*)' );\n\t\t\t\tvar matchEnd = line.match( '^\\\\t{' + ( self.currentIndent - 1 ) + '}}' );\n\n\t\t\t\tif ( matchBeginning ) {\n\n\t\t\t\t\tself.parseNodeBegin( line, matchBeginning );\n\n\t\t\t\t} else if ( matchProperty ) {\n\n\t\t\t\t\tself.parseNodeProperty( line, matchProperty, split[ ++ i ] );\n\n\t\t\t\t} else if ( matchEnd ) {\n\n\t\t\t\t\tself.popStack();\n\n\t\t\t\t} else if ( line.match( /^[^\\s\\t}]/ ) ) {\n\n\t\t\t\t\t// large arrays are split over multiple lines terminated with a ',' character\n\t\t\t\t\t// if this is encountered the line needs to be joined to the previous line\n\t\t\t\t\tself.parseNodePropertyContinued( line );\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t\treturn this.allNodes;\n\n\t\t},\n\n\t\tparseNodeBegin: function ( line, property ) {\n\n\t\t\tvar nodeName = property[ 1 ].trim().replace( /^\"/, '' ).replace( /\"$/, '' );\n\n\t\t\tvar nodeAttrs = property[ 2 ].split( ',' ).map( function ( attr ) {\n\n\t\t\t\treturn attr.trim().replace( /^\"/, '' ).replace( /\"$/, '' );\n\n\t\t\t} );\n\n\t\t\tvar node = { name: nodeName };\n\t\t\tvar attrs = this.parseNodeAttr( nodeAttrs );\n\n\t\t\tvar currentNode = this.getCurrentNode();\n\n\t\t\t// a top node\n\t\t\tif ( this.currentIndent === 0 ) {\n\n\t\t\t\tthis.allNodes.add( nodeName, node );\n\n\t\t\t} else { // a subnode\n\n\t\t\t\t// if the subnode already exists, append it\n\t\t\t\tif ( nodeName in currentNode ) {\n\n\t\t\t\t\t// special case Pose needs PoseNodes as an array\n\t\t\t\t\tif ( nodeName === 'PoseNode' ) {\n\n\t\t\t\t\t\tcurrentNode.PoseNode.push( node );\n\n\t\t\t\t\t} else if ( currentNode[ nodeName ].id !== undefined ) {\n\n\t\t\t\t\t\tcurrentNode[ nodeName ] = {};\n\t\t\t\t\t\tcurrentNode[ nodeName ][ currentNode[ nodeName ].id ] = currentNode[ nodeName ];\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( attrs.id !== '' ) currentNode[ nodeName ][ attrs.id ] = node;\n\n\t\t\t\t} else if ( typeof attrs.id === 'number' ) {\n\n\t\t\t\t\tcurrentNode[ nodeName ] = {};\n\t\t\t\t\tcurrentNode[ nodeName ][ attrs.id ] = node;\n\n\t\t\t\t} else if ( nodeName !== 'Properties70' ) {\n\n\t\t\t\t\tif ( nodeName === 'PoseNode' )\tcurrentNode[ nodeName ] = [ node ];\n\t\t\t\t\telse currentNode[ nodeName ] = node;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( typeof attrs.id === 'number' ) node.id = attrs.id;\n\t\t\tif ( attrs.name !== '' ) node.attrName = attrs.name;\n\t\t\tif ( attrs.type !== '' ) node.attrType = attrs.type;\n\n\t\t\tthis.pushStack( node );\n\n\t\t},\n\n\t\tparseNodeAttr: function ( attrs ) {\n\n\t\t\tvar id = attrs[ 0 ];\n\n\t\t\tif ( attrs[ 0 ] !== '' ) {\n\n\t\t\t\tid = parseInt( attrs[ 0 ] );\n\n\t\t\t\tif ( isNaN( id ) ) {\n\n\t\t\t\t\tid = attrs[ 0 ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar name = '', type = '';\n\n\t\t\tif ( attrs.length > 1 ) {\n\n\t\t\t\tname = attrs[ 1 ].replace( /^(\\w+)::/, '' );\n\t\t\t\ttype = attrs[ 2 ];\n\n\t\t\t}\n\n\t\t\treturn { id: id, name: name, type: type };\n\n\t\t},\n\n\t\tparseNodeProperty: function ( line, property, contentLine ) {\n\n\t\t\tvar propName = property[ 1 ].replace( /^\"/, '' ).replace( /\"$/, '' ).trim();\n\t\t\tvar propValue = property[ 2 ].replace( /^\"/, '' ).replace( /\"$/, '' ).trim();\n\n\t\t\t// for special case: base64 image data follows \"Content: ,\" line\n\t\t\t//\tContent: ,\n\t\t\t//\t \"/9j/4RDaRXhpZgAATU0A...\"\n\t\t\tif ( propName === 'Content' && propValue === ',' ) {\n\n\t\t\t\tpropValue = contentLine.replace( /\"/g, '' ).replace( /,$/, '' ).trim();\n\n\t\t\t}\n\n\t\t\tvar currentNode = this.getCurrentNode();\n\t\t\tvar parentName = currentNode.name;\n\n\t\t\tif ( parentName === 'Properties70' ) {\n\n\t\t\t\tthis.parseNodeSpecialProperty( line, propName, propValue );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\t// Connections\n\t\t\tif ( propName === 'C' ) {\n\n\t\t\t\tvar connProps = propValue.split( ',' ).slice( 1 );\n\t\t\t\tvar from = parseInt( connProps[ 0 ] );\n\t\t\t\tvar to = parseInt( connProps[ 1 ] );\n\n\t\t\t\tvar rest = propValue.split( ',' ).slice( 3 );\n\n\t\t\t\trest = rest.map( function ( elem ) {\n\n\t\t\t\t\treturn elem.trim().replace( /^\"/, '' );\n\n\t\t\t\t} );\n\n\t\t\t\tpropName = 'connections';\n\t\t\t\tpropValue = [ from, to ];\n\t\t\t\tappend( propValue, rest );\n\n\t\t\t\tif ( currentNode[ propName ] === undefined ) {\n\n\t\t\t\t\tcurrentNode[ propName ] = [];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Node\n\t\t\tif ( propName === 'Node' ) currentNode.id = propValue;\n\n\t\t\t// connections\n\t\t\tif ( propName in currentNode && Array.isArray( currentNode[ propName ] ) ) {\n\n\t\t\t\tcurrentNode[ propName ].push( propValue );\n\n\t\t\t} else {\n\n\t\t\t\tif ( propName !== 'a' ) currentNode[ propName ] = propValue;\n\t\t\t\telse currentNode.a = propValue;\n\n\t\t\t}\n\n\t\t\tthis.setCurrentProp( currentNode, propName );\n\n\t\t\t// convert string to array, unless it ends in ',' in which case more will be added to it\n\t\t\tif ( propName === 'a' && propValue.slice( - 1 ) !== ',' ) {\n\n\t\t\t\tcurrentNode.a = parseNumberArray( propValue );\n\n\t\t\t}\n\n\t\t},\n\n\t\tparseNodePropertyContinued: function ( line ) {\n\n\t\t\tvar currentNode = this.getCurrentNode();\n\n\t\t\tcurrentNode.a += line;\n\n\t\t\t// if the line doesn't end in ',' we have reached the end of the property value\n\t\t\t// so convert the string to an array\n\t\t\tif ( line.slice( - 1 ) !== ',' ) {\n\n\t\t\t\tcurrentNode.a = parseNumberArray( currentNode.a );\n\n\t\t\t}\n\n\t\t},\n\n\t\t// parse \"Property70\"\n\t\tparseNodeSpecialProperty: function ( line, propName, propValue ) {\n\n\t\t\t// split this\n\t\t\t// P: \"Lcl Scaling\", \"Lcl Scaling\", \"\", \"A\",1,1,1\n\t\t\t// into array like below\n\t\t\t// [\"Lcl Scaling\", \"Lcl Scaling\", \"\", \"A\", \"1,1,1\" ]\n\t\t\tvar props = propValue.split( '\",' ).map( function ( prop ) {\n\n\t\t\t\treturn prop.trim().replace( /^\\\"/, '' ).replace( /\\s/, '_' );\n\n\t\t\t} );\n\n\t\t\tvar innerPropName = props[ 0 ];\n\t\t\tvar innerPropType1 = props[ 1 ];\n\t\t\tvar innerPropType2 = props[ 2 ];\n\t\t\tvar innerPropFlag = props[ 3 ];\n\t\t\tvar innerPropValue = props[ 4 ];\n\n\t\t\t// cast values where needed, otherwise leave as strings\n\t\t\tswitch ( innerPropType1 ) {\n\n\t\t\t\tcase 'int':\n\t\t\t\tcase 'enum':\n\t\t\t\tcase 'bool':\n\t\t\t\tcase 'ULongLong':\n\t\t\t\tcase 'double':\n\t\t\t\tcase 'Number':\n\t\t\t\tcase 'FieldOfView':\n\t\t\t\t\tinnerPropValue = parseFloat( innerPropValue );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'Color':\n\t\t\t\tcase 'ColorRGB':\n\t\t\t\tcase 'Vector3D':\n\t\t\t\tcase 'Lcl_Translation':\n\t\t\t\tcase 'Lcl_Rotation':\n\t\t\t\tcase 'Lcl_Scaling':\n\t\t\t\t\tinnerPropValue = parseNumberArray( innerPropValue );\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\t// CAUTION: these props must append to parent's parent\n\t\t\tthis.getPrevNode()[ innerPropName ] = {\n\n\t\t\t\t'type': innerPropType1,\n\t\t\t\t'type2': innerPropType2,\n\t\t\t\t'flag': innerPropFlag,\n\t\t\t\t'value': innerPropValue\n\n\t\t\t};\n\n\t\t\tthis.setCurrentProp( this.getPrevNode(), innerPropName );\n\n\t\t},\n\n\t};\n\n\t// Parse an FBX file in Binary format\n\tfunction BinaryParser() {}\n\n\tBinaryParser.prototype = {\n\n\t\tconstructor: BinaryParser,\n\n\t\tparse: function ( buffer ) {\n\n\t\t\tvar reader = new BinaryReader( buffer );\n\t\t\treader.skip( 23 ); // skip magic 23 bytes\n\n\t\t\tvar version = reader.getUint32();\n\n\t\t\tconsole.log( 'THREE.FBXLoader: FBX binary version: ' + version );\n\n\t\t\tvar allNodes = new FBXTree();\n\n\t\t\twhile ( ! this.endOfContent( reader ) ) {\n\n\t\t\t\tvar node = this.parseNode( reader, version );\n\t\t\t\tif ( node !== null ) allNodes.add( node.name, node );\n\n\t\t\t}\n\n\t\t\treturn allNodes;\n\n\t\t},\n\n\t\t// Check if reader has reached the end of content.\n\t\tendOfContent: function ( reader ) {\n\n\t\t\t// footer size: 160bytes + 16-byte alignment padding\n\t\t\t// - 16bytes: magic\n\t\t\t// - padding til 16-byte alignment (at least 1byte?)\n\t\t\t//\t(seems like some exporters embed fixed 15 or 16bytes?)\n\t\t\t// - 4bytes: magic\n\t\t\t// - 4bytes: version\n\t\t\t// - 120bytes: zero\n\t\t\t// - 16bytes: magic\n\t\t\tif ( reader.size() % 16 === 0 ) {\n\n\t\t\t\treturn ( ( reader.getOffset() + 160 + 16 ) & ~ 0xf ) >= reader.size();\n\n\t\t\t} else {\n\n\t\t\t\treturn reader.getOffset() + 160 + 16 >= reader.size();\n\n\t\t\t}\n\n\t\t},\n\n\t\t// recursively parse nodes until the end of the file is reached\n\t\tparseNode: function ( reader, version ) {\n\n\t\t\tvar node = {};\n\n\t\t\t// The first three data sizes depends on version.\n\t\t\tvar endOffset = ( version >= 7500 ) ? reader.getUint64() : reader.getUint32();\n\t\t\tvar numProperties = ( version >= 7500 ) ? reader.getUint64() : reader.getUint32();\n\n\t\t\t// note: do not remove this even if you get a linter warning as it moves the buffer forward\n\t\t\tvar propertyListLen = ( version >= 7500 ) ? reader.getUint64() : reader.getUint32();\n\n\t\t\tvar nameLen = reader.getUint8();\n\t\t\tvar name = reader.getString( nameLen );\n\n\t\t\t// Regards this node as NULL-record if endOffset is zero\n\t\t\tif ( endOffset === 0 ) return null;\n\n\t\t\tvar propertyList = [];\n\n\t\t\tfor ( var i = 0; i < numProperties; i ++ ) {\n\n\t\t\t\tpropertyList.push( this.parseProperty( reader ) );\n\n\t\t\t}\n\n\t\t\t// Regards the first three elements in propertyList as id, attrName, and attrType\n\t\t\tvar id = propertyList.length > 0 ? propertyList[ 0 ] : '';\n\t\t\tvar attrName = propertyList.length > 1 ? propertyList[ 1 ] : '';\n\t\t\tvar attrType = propertyList.length > 2 ? propertyList[ 2 ] : '';\n\n\t\t\t// check if this node represents just a single property\n\t\t\t// like (name, 0) set or (name2, [0, 1, 2]) set of {name: 0, name2: [0, 1, 2]}\n\t\t\tnode.singleProperty = ( numProperties === 1 && reader.getOffset() === endOffset ) ? true : false;\n\n\t\t\twhile ( endOffset > reader.getOffset() ) {\n\n\t\t\t\tvar subNode = this.parseNode( reader, version );\n\n\t\t\t\tif ( subNode !== null ) this.parseSubNode( name, node, subNode );\n\n\t\t\t}\n\n\t\t\tnode.propertyList = propertyList; // raw property list used by parent\n\n\t\t\tif ( typeof id === 'number' ) node.id = id;\n\t\t\tif ( attrName !== '' ) node.attrName = attrName;\n\t\t\tif ( attrType !== '' ) node.attrType = attrType;\n\t\t\tif ( name !== '' ) node.name = name;\n\n\t\t\treturn node;\n\n\t\t},\n\n\t\tparseSubNode: function ( name, node, subNode ) {\n\n\t\t\t// special case: child node is single property\n\t\t\tif ( subNode.singleProperty === true ) {\n\n\t\t\t\tvar value = subNode.propertyList[ 0 ];\n\n\t\t\t\tif ( Array.isArray( value ) ) {\n\n\t\t\t\t\tnode[ subNode.name ] = subNode;\n\n\t\t\t\t\tsubNode.a = value;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tnode[ subNode.name ] = value;\n\n\t\t\t\t}\n\n\t\t\t} else if ( name === 'Connections' && subNode.name === 'C' ) {\n\n\t\t\t\tvar array = [];\n\n\t\t\t\tsubNode.propertyList.forEach( function ( property, i ) {\n\n\t\t\t\t\t// first Connection is FBX type (OO, OP, etc.). We'll discard these\n\t\t\t\t\tif ( i !== 0 ) array.push( property );\n\n\t\t\t\t} );\n\n\t\t\t\tif ( node.connections === undefined ) {\n\n\t\t\t\t\tnode.connections = [];\n\n\t\t\t\t}\n\n\t\t\t\tnode.connections.push( array );\n\n\t\t\t} else if ( subNode.name === 'Properties70' ) {\n\n\t\t\t\tvar keys = Object.keys( subNode );\n\n\t\t\t\tkeys.forEach( function ( key ) {\n\n\t\t\t\t\tnode[ key ] = subNode[ key ];\n\n\t\t\t\t} );\n\n\t\t\t} else if ( name === 'Properties70' && subNode.name === 'P' ) {\n\n\t\t\t\tvar innerPropName = subNode.propertyList[ 0 ];\n\t\t\t\tvar innerPropType1 = subNode.propertyList[ 1 ];\n\t\t\t\tvar innerPropType2 = subNode.propertyList[ 2 ];\n\t\t\t\tvar innerPropFlag = subNode.propertyList[ 3 ];\n\t\t\t\tvar innerPropValue;\n\n\t\t\t\tif ( innerPropName.indexOf( 'Lcl ' ) === 0 ) innerPropName = innerPropName.replace( 'Lcl ', 'Lcl_' );\n\t\t\t\tif ( innerPropType1.indexOf( 'Lcl ' ) === 0 ) innerPropType1 = innerPropType1.replace( 'Lcl ', 'Lcl_' );\n\n\t\t\t\tif ( innerPropType1 === 'Color' || innerPropType1 === 'ColorRGB' || innerPropType1 === 'Vector' || innerPropType1 === 'Vector3D' || innerPropType1.indexOf( 'Lcl_' ) === 0 ) {\n\n\t\t\t\t\tinnerPropValue = [\n\t\t\t\t\t\tsubNode.propertyList[ 4 ],\n\t\t\t\t\t\tsubNode.propertyList[ 5 ],\n\t\t\t\t\t\tsubNode.propertyList[ 6 ]\n\t\t\t\t\t];\n\n\t\t\t\t} else {\n\n\t\t\t\t\tinnerPropValue = subNode.propertyList[ 4 ];\n\n\t\t\t\t}\n\n\t\t\t\t// this will be copied to parent, see above\n\t\t\t\tnode[ innerPropName ] = {\n\n\t\t\t\t\t'type': innerPropType1,\n\t\t\t\t\t'type2': innerPropType2,\n\t\t\t\t\t'flag': innerPropFlag,\n\t\t\t\t\t'value': innerPropValue\n\n\t\t\t\t};\n\n\t\t\t} else if ( node[ subNode.name ] === undefined ) {\n\n\t\t\t\tif ( typeof subNode.id === 'number' ) {\n\n\t\t\t\t\tnode[ subNode.name ] = {};\n\t\t\t\t\tnode[ subNode.name ][ subNode.id ] = subNode;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tnode[ subNode.name ] = subNode;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( subNode.name === 'PoseNode' ) {\n\n\t\t\t\t\tif ( ! Array.isArray( node[ subNode.name ] ) ) {\n\n\t\t\t\t\t\tnode[ subNode.name ] = [ node[ subNode.name ] ];\n\n\t\t\t\t\t}\n\n\t\t\t\t\tnode[ subNode.name ].push( subNode );\n\n\t\t\t\t} else if ( node[ subNode.name ][ subNode.id ] === undefined ) {\n\n\t\t\t\t\tnode[ subNode.name ][ subNode.id ] = subNode;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t\tparseProperty: function ( reader ) {\n\n\t\t\tvar type = reader.getString( 1 );\n\n\t\t\tswitch ( type ) {\n\n\t\t\t\tcase 'C':\n\t\t\t\t\treturn reader.getBoolean();\n\n\t\t\t\tcase 'D':\n\t\t\t\t\treturn reader.getFloat64();\n\n\t\t\t\tcase 'F':\n\t\t\t\t\treturn reader.getFloat32();\n\n\t\t\t\tcase 'I':\n\t\t\t\t\treturn reader.getInt32();\n\n\t\t\t\tcase 'L':\n\t\t\t\t\treturn reader.getInt64();\n\n\t\t\t\tcase 'R':\n\t\t\t\t\tvar length = reader.getUint32();\n\t\t\t\t\treturn reader.getArrayBuffer( length );\n\n\t\t\t\tcase 'S':\n\t\t\t\t\tvar length = reader.getUint32();\n\t\t\t\t\treturn reader.getString( length );\n\n\t\t\t\tcase 'Y':\n\t\t\t\t\treturn reader.getInt16();\n\n\t\t\t\tcase 'b':\n\t\t\t\tcase 'c':\n\t\t\t\tcase 'd':\n\t\t\t\tcase 'f':\n\t\t\t\tcase 'i':\n\t\t\t\tcase 'l':\n\n\t\t\t\t\tvar arrayLength = reader.getUint32();\n\t\t\t\t\tvar encoding = reader.getUint32(); // 0: non-compressed, 1: compressed\n\t\t\t\t\tvar compressedLength = reader.getUint32();\n\n\t\t\t\t\tif ( encoding === 0 ) {\n\n\t\t\t\t\t\tswitch ( type ) {\n\n\t\t\t\t\t\t\tcase 'b':\n\t\t\t\t\t\t\tcase 'c':\n\t\t\t\t\t\t\t\treturn reader.getBooleanArray( arrayLength );\n\n\t\t\t\t\t\t\tcase 'd':\n\t\t\t\t\t\t\t\treturn reader.getFloat64Array( arrayLength );\n\n\t\t\t\t\t\t\tcase 'f':\n\t\t\t\t\t\t\t\treturn reader.getFloat32Array( arrayLength );\n\n\t\t\t\t\t\t\tcase 'i':\n\t\t\t\t\t\t\t\treturn reader.getInt32Array( arrayLength );\n\n\t\t\t\t\t\t\tcase 'l':\n\t\t\t\t\t\t\t\treturn reader.getInt64Array( arrayLength );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( typeof Zlib === 'undefined' ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.FBXLoader: External library Inflate.min.js required, obtain or import from https://github.com/imaya/zlib.js' );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tvar inflate = new Zlib.Inflate( new Uint8Array( reader.getArrayBuffer( compressedLength ) ) ); // eslint-disable-line no-undef\n\t\t\t\t\tvar reader2 = new BinaryReader( inflate.decompress().buffer );\n\n\t\t\t\t\tswitch ( type ) {\n\n\t\t\t\t\t\tcase 'b':\n\t\t\t\t\t\tcase 'c':\n\t\t\t\t\t\t\treturn reader2.getBooleanArray( arrayLength );\n\n\t\t\t\t\t\tcase 'd':\n\t\t\t\t\t\t\treturn reader2.getFloat64Array( arrayLength );\n\n\t\t\t\t\t\tcase 'f':\n\t\t\t\t\t\t\treturn reader2.getFloat32Array( arrayLength );\n\n\t\t\t\t\t\tcase 'i':\n\t\t\t\t\t\t\treturn reader2.getInt32Array( arrayLength );\n\n\t\t\t\t\t\tcase 'l':\n\t\t\t\t\t\t\treturn reader2.getInt64Array( arrayLength );\n\n\t\t\t\t\t}\n\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error( 'THREE.FBXLoader: Unknown property type ' + type );\n\n\t\t\t}\n\n\t\t}\n\n\t};\n\n\tfunction BinaryReader( buffer, littleEndian ) {\n\n\t\tthis.dv = new DataView( buffer );\n\t\tthis.offset = 0;\n\t\tthis.littleEndian = ( littleEndian !== undefined ) ? littleEndian : true;\n\n\t}\n\n\tBinaryReader.prototype = {\n\n\t\tconstructor: BinaryReader,\n\n\t\tgetOffset: function () {\n\n\t\t\treturn this.offset;\n\n\t\t},\n\n\t\tsize: function () {\n\n\t\t\treturn this.dv.buffer.byteLength;\n\n\t\t},\n\n\t\tskip: function ( length ) {\n\n\t\t\tthis.offset += length;\n\n\t\t},\n\n\t\t// seems like true/false representation depends on exporter.\n\t\t// true: 1 or 'Y'(=0x59), false: 0 or 'T'(=0x54)\n\t\t// then sees LSB.\n\t\tgetBoolean: function () {\n\n\t\t\treturn ( this.getUint8() & 1 ) === 1;\n\n\t\t},\n\n\t\tgetBooleanArray: function ( size ) {\n\n\t\t\tvar a = [];\n\n\t\t\tfor ( var i = 0; i < size; i ++ ) {\n\n\t\t\t\ta.push( this.getBoolean() );\n\n\t\t\t}\n\n\t\t\treturn a;\n\n\t\t},\n\n\t\tgetUint8: function () {\n\n\t\t\tvar value = this.dv.getUint8( this.offset );\n\t\t\tthis.offset += 1;\n\t\t\treturn value;\n\n\t\t},\n\n\t\tgetInt16: function () {\n\n\t\t\tvar value = this.dv.getInt16( this.offset, this.littleEndian );\n\t\t\tthis.offset += 2;\n\t\t\treturn value;\n\n\t\t},\n\n\t\tgetInt32: function () {\n\n\t\t\tvar value = this.dv.getInt32( this.offset, this.littleEndian );\n\t\t\tthis.offset += 4;\n\t\t\treturn value;\n\n\t\t},\n\n\t\tgetInt32Array: function ( size ) {\n\n\t\t\tvar a = [];\n\n\t\t\tfor ( var i = 0; i < size; i ++ ) {\n\n\t\t\t\ta.push( this.getInt32() );\n\n\t\t\t}\n\n\t\t\treturn a;\n\n\t\t},\n\n\t\tgetUint32: function () {\n\n\t\t\tvar value = this.dv.getUint32( this.offset, this.littleEndian );\n\t\t\tthis.offset += 4;\n\t\t\treturn value;\n\n\t\t},\n\n\t\t// JavaScript doesn't support 64-bit integer so calculate this here\n\t\t// 1 << 32 will return 1 so using multiply operation instead here.\n\t\t// There's a possibility that this method returns wrong value if the value\n\t\t// is out of the range between Number.MAX_SAFE_INTEGER and Number.MIN_SAFE_INTEGER.\n\t\t// TODO: safely handle 64-bit integer\n\t\tgetInt64: function () {\n\n\t\t\tvar low, high;\n\n\t\t\tif ( this.littleEndian ) {\n\n\t\t\t\tlow = this.getUint32();\n\t\t\t\thigh = this.getUint32();\n\n\t\t\t} else {\n\n\t\t\t\thigh = this.getUint32();\n\t\t\t\tlow = this.getUint32();\n\n\t\t\t}\n\n\t\t\t// calculate negative value\n\t\t\tif ( high & 0x80000000 ) {\n\n\t\t\t\thigh = ~ high & 0xFFFFFFFF;\n\t\t\t\tlow = ~ low & 0xFFFFFFFF;\n\n\t\t\t\tif ( low === 0xFFFFFFFF ) high = ( high + 1 ) & 0xFFFFFFFF;\n\n\t\t\t\tlow = ( low + 1 ) & 0xFFFFFFFF;\n\n\t\t\t\treturn - ( high * 0x100000000 + low );\n\n\t\t\t}\n\n\t\t\treturn high * 0x100000000 + low;\n\n\t\t},\n\n\t\tgetInt64Array: function ( size ) {\n\n\t\t\tvar a = [];\n\n\t\t\tfor ( var i = 0; i < size; i ++ ) {\n\n\t\t\t\ta.push( this.getInt64() );\n\n\t\t\t}\n\n\t\t\treturn a;\n\n\t\t},\n\n\t\t// Note: see getInt64() comment\n\t\tgetUint64: function () {\n\n\t\t\tvar low, high;\n\n\t\t\tif ( this.littleEndian ) {\n\n\t\t\t\tlow = this.getUint32();\n\t\t\t\thigh = this.getUint32();\n\n\t\t\t} else {\n\n\t\t\t\thigh = this.getUint32();\n\t\t\t\tlow = this.getUint32();\n\n\t\t\t}\n\n\t\t\treturn high * 0x100000000 + low;\n\n\t\t},\n\n\t\tgetFloat32: function () {\n\n\t\t\tvar value = this.dv.getFloat32( this.offset, this.littleEndian );\n\t\t\tthis.offset += 4;\n\t\t\treturn value;\n\n\t\t},\n\n\t\tgetFloat32Array: function ( size ) {\n\n\t\t\tvar a = [];\n\n\t\t\tfor ( var i = 0; i < size; i ++ ) {\n\n\t\t\t\ta.push( this.getFloat32() );\n\n\t\t\t}\n\n\t\t\treturn a;\n\n\t\t},\n\n\t\tgetFloat64: function () {\n\n\t\t\tvar value = this.dv.getFloat64( this.offset, this.littleEndian );\n\t\t\tthis.offset += 8;\n\t\t\treturn value;\n\n\t\t},\n\n\t\tgetFloat64Array: function ( size ) {\n\n\t\t\tvar a = [];\n\n\t\t\tfor ( var i = 0; i < size; i ++ ) {\n\n\t\t\t\ta.push( this.getFloat64() );\n\n\t\t\t}\n\n\t\t\treturn a;\n\n\t\t},\n\n\t\tgetArrayBuffer: function ( size ) {\n\n\t\t\tvar value = this.dv.buffer.slice( this.offset, this.offset + size );\n\t\t\tthis.offset += size;\n\t\t\treturn value;\n\n\t\t},\n\n\t\tgetString: function ( size ) {\n\n\t\t\t// note: safari 9 doesn't support Uint8Array.indexOf; create intermediate array instead\n\t\t\tvar a = [];\n\n\t\t\tfor ( var i = 0; i < size; i ++ ) {\n\n\t\t\t\ta[ i ] = this.getUint8();\n\n\t\t\t}\n\n\t\t\tvar nullByte = a.indexOf( 0 );\n\t\t\tif ( nullByte >= 0 ) a = a.slice( 0, nullByte );\n\n\t\t\treturn LoaderUtils.decodeText( new Uint8Array( a ) );\n\n\t\t}\n\n\t};\n\n\t// FBXTree holds a representation of the FBX data, returned by the TextParser ( FBX ASCII format)\n\t// and BinaryParser( FBX Binary format)\n\tfunction FBXTree() {}\n\n\tFBXTree.prototype = {\n\n\t\tconstructor: FBXTree,\n\n\t\tadd: function ( key, val ) {\n\n\t\t\tthis[ key ] = val;\n\n\t\t},\n\n\t};\n\n\t// ************** UTILITY FUNCTIONS **************\n\n\tfunction isFbxFormatBinary( buffer ) {\n\n\t\tvar CORRECT = 'Kaydara FBX Binary  \\0';\n\n\t\treturn buffer.byteLength >= CORRECT.length && CORRECT === convertArrayBufferToString( buffer, 0, CORRECT.length );\n\n\t}\n\n\tfunction isFbxFormatASCII( text ) {\n\n\t\tvar CORRECT = [ 'K', 'a', 'y', 'd', 'a', 'r', 'a', '\\\\', 'F', 'B', 'X', '\\\\', 'B', 'i', 'n', 'a', 'r', 'y', '\\\\', '\\\\' ];\n\n\t\tvar cursor = 0;\n\n\t\tfunction read( offset ) {\n\n\t\t\tvar result = text[ offset - 1 ];\n\t\t\ttext = text.slice( cursor + offset );\n\t\t\tcursor ++;\n\t\t\treturn result;\n\n\t\t}\n\n\t\tfor ( var i = 0; i < CORRECT.length; ++ i ) {\n\n\t\t\tvar num = read( 1 );\n\t\t\tif ( num === CORRECT[ i ] ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tfunction getFbxVersion( text ) {\n\n\t\tvar versionRegExp = /FBXVersion: (\\d+)/;\n\t\tvar match = text.match( versionRegExp );\n\t\tif ( match ) {\n\n\t\t\tvar version = parseInt( match[ 1 ] );\n\t\t\treturn version;\n\n\t\t}\n\t\tthrow new Error( 'THREE.FBXLoader: Cannot find the version number for the file given.' );\n\n\t}\n\n\t// Converts FBX ticks into real time seconds.\n\tfunction convertFBXTimeToSeconds( time ) {\n\n\t\treturn time / 46186158000;\n\n\t}\n\n\tvar dataArray = [];\n\n\t// extracts the data from the correct position in the FBX array based on indexing type\n\tfunction getData( polygonVertexIndex, polygonIndex, vertexIndex, infoObject ) {\n\n\t\tvar index;\n\n\t\tswitch ( infoObject.mappingType ) {\n\n\t\t\tcase 'ByPolygonVertex' :\n\t\t\t\tindex = polygonVertexIndex;\n\t\t\t\tbreak;\n\t\t\tcase 'ByPolygon' :\n\t\t\t\tindex = polygonIndex;\n\t\t\t\tbreak;\n\t\t\tcase 'ByVertice' :\n\t\t\t\tindex = vertexIndex;\n\t\t\t\tbreak;\n\t\t\tcase 'AllSame' :\n\t\t\t\tindex = infoObject.indices[ 0 ];\n\t\t\t\tbreak;\n\t\t\tdefault :\n\t\t\t\tconsole.warn( 'THREE.FBXLoader: unknown attribute mapping type ' + infoObject.mappingType );\n\n\t\t}\n\n\t\tif ( infoObject.referenceType === 'IndexToDirect' ) index = infoObject.indices[ index ];\n\n\t\tvar from = index * infoObject.dataSize;\n\t\tvar to = from + infoObject.dataSize;\n\n\t\treturn slice( dataArray, infoObject.buffer, from, to );\n\n\t}\n\n\tvar tempEuler = new Euler();\n\tvar tempVec = new Vector3();\n\n\t// generate transformation from FBX transform data\n\t// ref: https://help.autodesk.com/view/FBX/2017/ENU/?guid=__files_GUID_10CDD63C_79C1_4F2D_BB28_AD2BE65A02ED_htm\n\t// ref: http://docs.autodesk.com/FBX/2014/ENU/FBX-SDK-Documentation/index.html?url=cpp_ref/_transformations_2main_8cxx-example.html,topicNumber=cpp_ref__transformations_2main_8cxx_example_htmlfc10a1e1-b18d-4e72-9dc0-70d0f1959f5e\n\tfunction generateTransform( transformData ) {\n\n\t\tvar lTranslationM = new Matrix4();\n\t\tvar lPreRotationM = new Matrix4();\n\t\tvar lRotationM = new Matrix4();\n\t\tvar lPostRotationM = new Matrix4();\n\n\t\tvar lScalingM = new Matrix4();\n\t\tvar lScalingPivotM = new Matrix4();\n\t\tvar lScalingOffsetM = new Matrix4();\n\t\tvar lRotationOffsetM = new Matrix4();\n\t\tvar lRotationPivotM = new Matrix4();\n\n\t\tvar lParentGX = new Matrix4();\n\t\tvar lGlobalT = new Matrix4();\n\n\t\tvar inheritType = ( transformData.inheritType ) ? transformData.inheritType : 0;\n\n\t\tif ( transformData.translation ) lTranslationM.setPosition( tempVec.fromArray( transformData.translation ) );\n\n\t\tif ( transformData.preRotation ) {\n\n\t\t\tvar array = transformData.preRotation.map( _Math.degToRad );\n\t\t\tarray.push( transformData.eulerOrder );\n\t\t\tlPreRotationM.makeRotationFromEuler( tempEuler.fromArray( array ) );\n\n\t\t}\n\n\t\tif ( transformData.rotation ) {\n\n\t\t\tvar array = transformData.rotation.map( _Math.degToRad );\n\t\t\tarray.push( transformData.eulerOrder );\n\t\t\tlRotationM.makeRotationFromEuler( tempEuler.fromArray( array ) );\n\n\t\t}\n\n\t\tif ( transformData.postRotation ) {\n\n\t\t\tvar array = transformData.postRotation.map( _Math.degToRad );\n\t\t\tarray.push( transformData.eulerOrder );\n\t\t\tlPostRotationM.makeRotationFromEuler( tempEuler.fromArray( array ) );\n\n\t\t}\n\n\t\tif ( transformData.scale ) lScalingM.scale( tempVec.fromArray( transformData.scale ) );\n\n\t\t// Pivots and offsets\n\t\tif ( transformData.scalingOffset ) lScalingOffsetM.setPosition( tempVec.fromArray( transformData.scalingOffset ) );\n\t\tif ( transformData.scalingPivot ) lScalingPivotM.setPosition( tempVec.fromArray( transformData.scalingPivot ) );\n\t\tif ( transformData.rotationOffset ) lRotationOffsetM.setPosition( tempVec.fromArray( transformData.rotationOffset ) );\n\t\tif ( transformData.rotationPivot ) lRotationPivotM.setPosition( tempVec.fromArray( transformData.rotationPivot ) );\n\n\t\t// parent transform\n\t\tif ( transformData.parentMatrixWorld ) lParentGX = transformData.parentMatrixWorld;\n\n\t\t// Global Rotation\n\t\tvar lLRM = lPreRotationM.multiply( lRotationM ).multiply( lPostRotationM );\n\t\tvar lParentGRM = new Matrix4();\n\t\tlParentGX.extractRotation( lParentGRM );\n\n\t\t// Global Shear*Scaling\n\t\tvar lParentTM = new Matrix4();\n\t\tvar lLSM;\n\t\tvar lParentGSM;\n\t\tvar lParentGRSM;\n\n\t\tlParentTM.copyPosition( lParentGX );\n\t\tlParentGRSM = lParentTM.getInverse( lParentTM ).multiply( lParentGX );\n\t\tlParentGSM = lParentGRM.getInverse( lParentGRM ).multiply( lParentGRSM );\n\t\tlLSM = lScalingM;\n\n\t\tvar lGlobalRS;\n\t\tif ( inheritType === 0 ) {\n\n\t\t\tlGlobalRS = lParentGRM.multiply( lLRM ).multiply( lParentGSM ).multiply( lLSM );\n\n\t\t} else if ( inheritType === 1 ) {\n\n\t\t\tlGlobalRS = lParentGRM.multiply( lParentGSM ).multiply( lLRM ).multiply( lLSM );\n\n\t\t} else {\n\n\t\t\tvar lParentLSM = new Matrix4().copy( lScalingM );\n\n\t\t\tvar lParentGSM_noLocal = lParentGSM.multiply( lParentLSM.getInverse( lParentLSM ) );\n\n\t\t\tlGlobalRS = lParentGRM.multiply( lLRM ).multiply( lParentGSM_noLocal ).multiply( lLSM );\n\n\t\t}\n\n\t\t// Calculate the local transform matrix\n\t\tvar lTransform = lTranslationM.multiply( lRotationOffsetM ).multiply( lRotationPivotM ).multiply( lPreRotationM ).multiply( lRotationM ).multiply( lPostRotationM ).multiply( lRotationPivotM.getInverse( lRotationPivotM ) ).multiply( lScalingOffsetM ).multiply( lScalingPivotM ).multiply( lScalingM ).multiply( lScalingPivotM.getInverse( lScalingPivotM ) );\n\n\t\tvar lLocalTWithAllPivotAndOffsetInfo = new Matrix4().copyPosition( lTransform );\n\n\t\tvar lGlobalTranslation = lParentGX.multiply( lLocalTWithAllPivotAndOffsetInfo );\n\t\tlGlobalT.copyPosition( lGlobalTranslation );\n\n\t\tlTransform = lGlobalT.multiply( lGlobalRS );\n\n\t\treturn lTransform;\n\n\t}\n\n\t// Returns the three.js intrinsic Euler order corresponding to FBX extrinsic Euler order\n\t// ref: http://help.autodesk.com/view/FBX/2017/ENU/?guid=__cpp_ref_class_fbx_euler_html\n\tfunction getEulerOrder( order ) {\n\n\t\torder = order || 0;\n\n\t\tvar enums = [\n\t\t\t'ZYX', // -> XYZ extrinsic\n\t\t\t'YZX', // -> XZY extrinsic\n\t\t\t'XZY', // -> YZX extrinsic\n\t\t\t'ZXY', // -> YXZ extrinsic\n\t\t\t'YXZ', // -> ZXY extrinsic\n\t\t\t'XYZ', // -> ZYX extrinsic\n\t\t\t//'SphericXYZ', // not possible to support\n\t\t];\n\n\t\tif ( order === 6 ) {\n\n\t\t\tconsole.warn( 'THREE.FBXLoader: unsupported Euler Order: Spherical XYZ. Animations and rotations may be incorrect.' );\n\t\t\treturn enums[ 0 ];\n\n\t\t}\n\n\t\treturn enums[ order ];\n\n\t}\n\n\t// Parses comma separated list of numbers and returns them an array.\n\t// Used internally by the TextParser\n\tfunction parseNumberArray( value ) {\n\n\t\tvar array = value.split( ',' ).map( function ( val ) {\n\n\t\t\treturn parseFloat( val );\n\n\t\t} );\n\n\t\treturn array;\n\n\t}\n\n\tfunction convertArrayBufferToString( buffer, from, to ) {\n\n\t\tif ( from === undefined ) from = 0;\n\t\tif ( to === undefined ) to = buffer.byteLength;\n\n\t\treturn LoaderUtils.decodeText( new Uint8Array( buffer, from, to ) );\n\n\t}\n\n\tfunction append( a, b ) {\n\n\t\tfor ( var i = 0, j = a.length, l = b.length; i < l; i ++, j ++ ) {\n\n\t\t\ta[ j ] = b[ i ];\n\n\t\t}\n\n\t}\n\n\tfunction slice( a, b, from, to ) {\n\n\t\tfor ( var i = from, j = 0; i < to; i ++, j ++ ) {\n\n\t\t\ta[ j ] = b[ i ];\n\n\t\t}\n\n\t\treturn a;\n\n\t}\n\n\t// inject array a2 into array a1 at index\n\tfunction inject( a1, index, a2 ) {\n\n\t\treturn a1.slice( 0, index ).concat( a2 ).concat( a1.slice( index ) );\n\n\t}\n\n\treturn FBXLoader;\n\n} )();\n\nexport { FBXLoader };\n"],"names":["mod","l","aa","r","c","d","e","a","split","b","execScript","length","shift","t","Uint8Array","Uint16Array","Uint32Array","DataView","v","f","g","h","k","m","n","p","s","x","Number","POSITIVE_INFINITY","Array","w","this","input","i","y","index","bufferSize","bufferType","resize","A","z","j","Error","B","prototype","C","set","subarray","ba","ca","S","T","U","V","D","u","M","F","q","E","slice","P","fa","G","H","I","J","K","L","da","ea","N","O","R","ga","Q","W","verify","ha","method","o","push","buffer","charCodeAt","Y","Z","$","ia","X","ADAPTIVE","BLOCK","Object","keys","Zlib","NURBSUtils","findSpan","low","high","mid","Math","floor","calcBasisFunctions","span","left","right","saved","rv","lv","temp","calcBSplinePoint","Vector4","point","Nj","wNj","calcBasisFunctionDerivatives","zeroArr","ders","ndu","s1","s2","rk","pk","j2","calcBSplineDerivatives","nd","du","CK","nders","Pw","clone","multiplyScalar","add","calcKoverI","nom","denom","calcRationalCurveDerivatives","Pders","Aders","wders","Vector3","sub","divideScalar","calcNURBSDerivatives","calcSurfacePoint","target","uspan","vspan","Nu","Nv","Sw","NURBSCurve","degree","knots","controlPoints","startKnot","endKnot","Curve","call","create","constructor","getPoint","hpoint","getTangent","tangent","normalize","FBXLoader","fbxTree","connections","sceneGraph","manager","Loader","FBXTreeParser","textureLoader","GeometryParser","AnimationParser","TextParser","BinaryParser","BinaryReader","littleEndian","dv","offset","undefined","FBXTree","getFbxVersion","text","match","parseInt","convertFBXTimeToSeconds","time","assign","load","url","onLoad","onProgress","onError","self","path","LoaderUtils","extractUrlBase","loader","FileLoader","setPath","setResponseType","parse","error","setTimeout","itemError","FBXBuffer","CORRECT","byteLength","convertArrayBufferToString","FBXText","cursor","result","isFbxFormatASCII","TextureLoader","resourcePath","setCrossOrigin","crossOrigin","parseConnections","images","parseImages","textures","parseTextures","materials","parseMaterials","deformers","parseDeformers","geometryMap","parseScene","connectionMap","Map","Connections","forEach","rawConnection","fromID","toID","relationship","has","parents","children","parentRelationship","ID","get","childRelationship","blobs","Objects","videoNodes","Video","nodeID","videoNode","id","RelativeFilename","Filename","arrayBufferContent","Content","ArrayBuffer","base64Content","image","parseImage","filename","pop","type","content","fileName","extension","lastIndexOf","toLowerCase","getHandler","console","warn","array","window","URL","createObjectURL","Blob","textureMap","textureNodes","Texture","texture","parseTexture","textureNode","loadTexture","name","attrName","wrapModeU","WrapModeU","wrapModeV","WrapModeV","valueU","value","valueV","wrapS","RepeatWrapping","ClampToEdgeWrapping","wrapT","values","Scaling","repeat","currentPath","indexOf","FileName","materialMap","materialNodes","Material","material","parseMaterial","materialNode","ShadingModel","_typeof","parameters","parseParameters","MeshPhongMaterial","MeshLambertMaterial","setValues","BumpFactor","bumpScale","Diffuse","color","Color","fromArray","DiffuseColor","DisplacementFactor","displacementScale","Emissive","emissive","EmissiveColor","EmissiveFactor","emissiveIntensity","parseFloat","Opacity","opacity","transparent","ReflectionFactor","reflectivity","Shininess","shininess","Specular","specular","SpecularColor","child","bumpMap","getTexture","aoMap","map","encoding","sRGBEncoding","displacementMap","emissiveMap","normalMap","envMap","mapping","EquirectangularReflectionMapping","specularMap","alphaMap","LayeredTexture","skeletons","morphTargets","DeformerNodes","Deformer","deformerNode","relationships","attrType","skeleton","parseSkeleton","geometryID","morphTarget","rawTargets","parseMorphTargets","deformerNodes","rawBones","boneNode","rawBone","indices","weights","transformLink","Matrix4","TransformLink","Indexes","Weights","bones","rawMorphTargets","morphTargetNode","rawMorphTarget","initialWeight","DeformPercent","fullWeights","FullWeights","geoID","filter","Group","modelMap","parseModels","modelNodes","Model","model","modelNode","setLookAtProperties","connection","parent","bindSkeleton","createAmbientLight","setupMorphMaterials","traverse","node","userData","transformData","parentMatrixWorld","matrix","transform","generateTransform","applyMatrix","animations","isGroup","buildSkeleton","createCamera","createLight","createMesh","createCurve","Bone","PropertyBinding","sanitizeNodeName","getTransformData","bone","subBone","matrixWorld","copy","cameraAttribute","attr","NodeAttribute","Object3D","CameraProjectionType","nearClippingPlane","NearPlane","farClippingPlane","FarPlane","width","innerWidth","height","innerHeight","AspectWidth","AspectHeight","aspect","fov","FieldOfView","focalLength","FocalLength","PerspectiveCamera","setFocalLength","OrthographicCamera","lightAttribute","LightType","intensity","Intensity","CastLightOnObject","distance","FarAttenuationEnd","EnableFarAttenuation","PointLight","DirectionalLight","angle","PI","InnerAngle","_Math","degToRad","penumbra","OuterAngle","max","SpotLight","CastShadows","castShadow","geometry","attributes","vertexColors","VertexColors","FBX_Deformer","skinning","SkinnedMesh","normalizeSkinWeights","Mesh","reduce","geo","LineBasicMaterial","linewidth","Line","inheritType","InheritType","eulerOrder","getEulerOrder","RotationOrder","translation","Lcl_Translation","preRotation","PreRotation","rotation","Lcl_Rotation","postRotation","PostRotation","scale","Lcl_Scaling","scalingOffset","ScalingOffset","scalingPivot","ScalingPivot","rotationOffset","RotationOffset","rotationPivot","RotationPivot","lookAtTarget","pos","position","lookAt","bindMatrices","parsePoseNodes","geoConnParent","bind","Skeleton","BindPoseNode","Pose","poseNodes","PoseNode","isArray","poseNode","Node","Matrix","GlobalSettings","ambientColor","AmbientColor","AmbientLight","isMesh","morphAttributes","setupMorphMaterial","uuid","matUuid","sharedMat","mat","clonedMat","geoNodes","Geometry","parseGeometry","geoNode","parseMeshGeometry","parseNurbsGeometry","GeometricTranslation","GeometricRotation","GeometricScaling","genGeometry","preTransform","BufferGeometry","geoInfo","parseGeoNode","buffers","genBuffers","positionAttribute","Float32BufferAttribute","vertex","applyToBufferAttribute","setAttribute","colors","Uint16BufferAttribute","weightsIndices","vertexWeights","normal","normalAttribute","Matrix3","getNormalMatrix","uvs","uvBuffer","toString","mappingType","prevMaterialIndex","materialIndex","startIndex","currentIndex","addGroup","groups","lastGroup","lastIndex","start","count","addMorphTargets","vertexPositions","Vertices","vertexIndices","PolygonVertexIndex","LayerElementColor","parseVertexColors","LayerElementMaterial","parseMaterialIndices","LayerElementNormal","parseNormals","LayerElementUV","uv","parseUVs","weightTable","weight","polygonIndex","faceLength","displayedWeightsWarning","facePositionIndexes","faceNormals","faceColors","faceUVs","faceWeights","faceWeightIndices","vertexIndex","polygonVertexIndex","endOfFace","weightIndices","data","getData","wt","wIndex","Weight","weightIndex","currentWeight","comparedWeight","comparedWeightIndex","comparedWeightArray","tmp","genFace","parentGeo","parentGeoNode","morphTargetsRelative","rawTarget","morphGeoNode","genMorphGeometry","morphPositionsSparse","morphPositions","Float32Array","morphIndex","morphGeoInfo","morphBuffers","NormalNode","MappingInformationType","referenceType","ReferenceInformationType","Normals","indexBuffer","NormalIndex","NormalsIndex","dataSize","UVNode","UV","UVIndex","ColorNode","Colors","ColorIndex","MaterialNode","materialIndexBuffer","Materials","materialIndices","order","Order","isNaN","KnotVector","pointsValues","Points","Form","vertices","getPoints","positions","toArray","BufferAttribute","animationClips","rawClips","parseClips","key","rawClip","clip","addClip","AnimationCurve","curveNodesMap","parseAnimationCurveNodes","parseAnimationCurves","layersMap","parseAnimationLayers","parseAnimStacks","rawCurveNodes","AnimationCurveNode","rawCurveNode","curveNode","curves","rawCurves","animationCurve","times","KeyTime","KeyValueFloat","animationCurveID","animationCurveRelationship","rawLayers","AnimationLayer","layerCurveNodes","modelID","modelName","rawModel","initialPosition","initialRotation","initialScale","morph","deformerID","morpherID","morphName","rawStacks","AnimationStack","layer","tracks","rawTracks","concat","generateTracks","AnimationClip","Quaternion","decompose","Euler","setFromQuaternion","positionTrack","generateVectorTrack","rotationTrack","generateRotationTrack","scaleTrack","morphTrack","generateMorphTrack","initialValue","getTimesForAllAxes","getKeyframeTrackValues","VectorKeyframeTrack","interpolateRotations","setFromEuler","inverse","quaternion","euler","quaternionValues","premultiply","multiply","QuaternionKeyframeTrack","val","morphNum","getObjectByName","morphTargetDictionary","NumberKeyframeTrack","sort","elem","prevValue","xIndex","yIndex","zIndex","xValue","yValue","zValue","curve","valuesSpan","absoluteSpan","abs","numSubIntervals","step","nextValue","initialTime","interval","nextTime","interpolatedTimes","interpolatedValues","inject","getPrevNode","nodeStack","currentIndent","getCurrentNode","getCurrentProp","currentProp","pushStack","popStack","setCurrentProp","currentPropName","allNodes","line","matchComment","matchEmpty","matchBeginning","matchProperty","matchEnd","parseNodeBegin","parseNodeProperty","parseNodePropertyContinued","property","nodeName","trim","replace","nodeAttrs","attrs","parseNodeAttr","currentNode","contentLine","propName","propValue","connProps","from","to","rest","append","parseNumberArray","parseNodeSpecialProperty","props","prop","innerPropName","innerPropType1","innerPropType2","innerPropFlag","innerPropValue","reader","skip","version","getUint32","log","endOfContent","parseNode","size","getOffset","endOffset","getUint64","numProperties","nameLen","getUint8","getString","propertyList","parseProperty","singleProperty","subNode","parseSubNode","getBoolean","getFloat64","getFloat32","getInt32","getInt64","getArrayBuffer","getInt16","arrayLength","compressedLength","getBooleanArray","getFloat64Array","getFloat32Array","getInt32Array","getInt64Array","reader2","Inflate","decompress","nullByte","decodeText","dataArray","infoObject","tempEuler","tempVec","lTranslationM","lPreRotationM","lRotationM","lPostRotationM","lScalingM","lScalingPivotM","lScalingOffsetM","lRotationOffsetM","lRotationPivotM","lParentGX","lGlobalT","setPosition","makeRotationFromEuler","lLRM","lParentGRM","extractRotation","lLSM","lParentGSM","lParentGRSM","lGlobalRS","lParentTM","copyPosition","getInverse","lParentLSM","lParentGSM_noLocal","lTransform","lLocalTWithAllPivotAndOffsetInfo","lGlobalTranslation","enums","a1","a2"],"mappings":"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"}